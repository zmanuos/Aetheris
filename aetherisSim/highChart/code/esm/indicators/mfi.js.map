{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v12.2.0 (2025-04-07)\n * @module highcharts/indicators/mfi\n * @requires highcharts\n * @requires highcharts/modules/stock\n *\n * Money Flow Index indicator for Highcharts Stock\n *\n * (c) 2010-2025 Grzegorz Blachliński\n *\n * License: www.highcharts.com/license\n */\nimport * as __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__ from \"../highcharts.js\";\nimport * as __WEBPACK_EXTERNAL_MODULE__modules_stock_src_js_b3d80146__ from \"../modules/stock.js\";\n/******/ // The require scope\n/******/ var __webpack_require__ = {};\n/******/ \n/************************************************************************/\n/******/ /* webpack/runtime/compat get default export */\n/******/ (() => {\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = (module) => {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t() => (module['default']) :\n/******/ \t\t\t() => (module);\n/******/ \t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\treturn getter;\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/define property getters */\n/******/ (() => {\n/******/ \t// define getter functions for harmony exports\n/******/ \t__webpack_require__.d = (exports, definition) => {\n/******/ \t\tfor(var key in definition) {\n/******/ \t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/hasOwnProperty shorthand */\n/******/ (() => {\n/******/ \t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ })();\n/******/ \n/************************************************************************/\n\n;// external [\"../highcharts.js\",\"default\"]\nconst external_highcharts_src_js_default_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"];\nvar external_highcharts_src_js_default_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_namespaceObject);\n;// external \"../modules/stock.js\"\nvar x = (y) => {\n\tvar x = {}; __webpack_require__.d(x,\n    \ty); return x\n    } \n    var y = (x) => (() => (x))\n    const stock_src_js_namespaceObject = x({  });\n;// external [\"../highcharts.js\",\"default\",\"SeriesRegistry\"]\nconst external_highcharts_src_js_default_SeriesRegistry_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].SeriesRegistry;\nvar external_highcharts_src_js_default_SeriesRegistry_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_SeriesRegistry_namespaceObject);\n;// ./code/es-modules/Stock/Indicators/MFI/MFIIndicator.js\n/* *\n *\n *  Money Flow Index indicator for Highcharts Stock\n *\n *  (c) 2010-2025 Grzegorz Blachliński\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { sma: SMAIndicator } = (external_highcharts_src_js_default_SeriesRegistry_default()).seriesTypes;\n\nconst { extend, merge, error, isArray } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n// Utils:\n/**\n *\n */\nfunction sumArray(array) {\n    return array.reduce(function (prev, cur) {\n        return prev + cur;\n    });\n}\n/**\n *\n */\nfunction toFixed(a, n) {\n    return parseFloat(a.toFixed(n));\n}\n/**\n *\n */\nfunction calculateTypicalPrice(point) {\n    return (point[1] + point[2] + point[3]) / 3;\n}\n/**\n *\n */\nfunction calculateRawMoneyFlow(typicalPrice, volume) {\n    return typicalPrice * volume;\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * The MFI series type.\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.mfi\n *\n * @augments Highcharts.Series\n */\nclass MFIIndicator extends SMAIndicator {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    getValues(series, params) {\n        const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, decimals = params.decimals, volumeSeries = series.chart.get(params.volumeSeriesID), yValVolume = volumeSeries?.getColumn('y') || [], MFI = [], xData = [], yData = [], positiveMoneyFlow = [], negativeMoneyFlow = [];\n        let newTypicalPrice, oldTypicalPrice, rawMoneyFlow, negativeMoneyFlowSum, positiveMoneyFlowSum, moneyFlowRatio, MFIPoint, i, isUp = false, \n        // MFI starts calculations from the second point\n        // Cause we need to calculate change between two points\n        range = 1;\n        if (!volumeSeries) {\n            error('Series ' +\n                params.volumeSeriesID +\n                ' not found! Check `volumeSeriesID`.', true, series.chart);\n            return;\n        }\n        // MFI requires high low and close values\n        if ((xVal.length <= period) || !isArray(yVal[0]) ||\n            yVal[0].length !== 4 ||\n            !yValVolume) {\n            return;\n        }\n        // Calculate first typical price\n        newTypicalPrice = calculateTypicalPrice(yVal[range]);\n        // Accumulate first N-points\n        while (range < period + 1) {\n            // Calculate if up or down\n            oldTypicalPrice = newTypicalPrice;\n            newTypicalPrice = calculateTypicalPrice(yVal[range]);\n            isUp = newTypicalPrice >= oldTypicalPrice;\n            // Calculate raw money flow\n            rawMoneyFlow = calculateRawMoneyFlow(newTypicalPrice, yValVolume[range]);\n            // Add to array\n            positiveMoneyFlow.push(isUp ? rawMoneyFlow : 0);\n            negativeMoneyFlow.push(isUp ? 0 : rawMoneyFlow);\n            range++;\n        }\n        for (i = range - 1; i < yValLen; i++) {\n            if (i > range - 1) {\n                // Remove first point from array\n                positiveMoneyFlow.shift();\n                negativeMoneyFlow.shift();\n                // Calculate if up or down\n                oldTypicalPrice = newTypicalPrice;\n                newTypicalPrice = calculateTypicalPrice(yVal[i]);\n                isUp = newTypicalPrice > oldTypicalPrice;\n                // Calculate raw money flow\n                rawMoneyFlow = calculateRawMoneyFlow(newTypicalPrice, yValVolume[i]);\n                // Add to array\n                positiveMoneyFlow.push(isUp ? rawMoneyFlow : 0);\n                negativeMoneyFlow.push(isUp ? 0 : rawMoneyFlow);\n            }\n            // Calculate sum of negative and positive money flow:\n            negativeMoneyFlowSum = sumArray(negativeMoneyFlow);\n            positiveMoneyFlowSum = sumArray(positiveMoneyFlow);\n            moneyFlowRatio = positiveMoneyFlowSum / negativeMoneyFlowSum;\n            MFIPoint = toFixed(100 - (100 / (1 + moneyFlowRatio)), decimals);\n            MFI.push([xVal[i], MFIPoint]);\n            xData.push(xVal[i]);\n            yData.push(MFIPoint);\n        }\n        return {\n            values: MFI,\n            xData: xData,\n            yData: yData\n        };\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\n/**\n * Money Flow Index. This series requires `linkedTo` option to be set and\n * should be loaded after the `stock/indicators/indicators.js` file.\n *\n * @sample stock/indicators/mfi\n *         Money Flow Index Indicator\n *\n * @extends      plotOptions.sma\n * @since        6.0.0\n * @product      highstock\n * @requires     stock/indicators/indicators\n * @requires     stock/indicators/mfi\n * @optionparent plotOptions.mfi\n */\nMFIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n    /**\n     * @excluding index\n     */\n    params: {\n        index: void 0, // Unchangeable index, do not inherit (#15362)\n        /**\n         * The id of volume series which is mandatory.\n         * For example using OHLC data, volumeSeriesID='volume' means\n         * the indicator will be calculated using OHLC and volume values.\n         */\n        volumeSeriesID: 'volume',\n        /**\n         * Number of maximum decimals that are used in MFI calculations.\n         */\n        decimals: 4\n    }\n});\nextend(MFIIndicator.prototype, {\n    nameBase: 'Money Flow Index'\n});\nexternal_highcharts_src_js_default_SeriesRegistry_default().registerSeriesType('mfi', MFIIndicator);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const MFI_MFIIndicator = ((/* unused pure expression or super */ null && (MFIIndicator)));\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A `MFI` series. If the [type](#series.mfi.type) option is not specified, it\n * is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.mfi\n * @since     6.0.0\n * @excluding dataParser, dataURL\n * @product   highstock\n * @requires  stock/indicators/indicators\n * @requires  stock/indicators/mfi\n * @apioption series.mfi\n */\n''; // To include the above in the js output\n\n;// ./code/es-modules/masters/indicators/mfi.js\n\n\n\n\n\n/* harmony default export */ const mfi_src = ((external_highcharts_src_js_default_default()));\n\nexport { mfi_src as default };\n"],"names":["__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__","__webpack_require__","n","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","external_highcharts_src_js_default_namespaceObject","external_highcharts_src_js_default_default","external_highcharts_src_js_default_SeriesRegistry_namespaceObject","SeriesRegistry","external_highcharts_src_js_default_SeriesRegistry_default","sma","SMAIndicator","seriesTypes","extend","merge","error","isArray","sumArray","array","reduce","prev","cur","calculateTypicalPrice","point","MFIIndicator","getValues","series","params","period","xVal","xData","yVal","yData","yValLen","length","decimals","volumeSeries","chart","volumeSeriesID","yValVolume","getColumn","MFI","positiveMoneyFlow","negativeMoneyFlow","newTypicalPrice","oldTypicalPrice","rawMoneyFlow","negativeMoneyFlowSum","MFIPoint","i","isUp","range","typicalPrice","push","shift","parseFloat","positiveMoneyFlowSum","toFixed","values","defaultOptions","index","nameBase","registerSeriesType","mfi_src","default"],"mappings":"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"}