{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v12.2.0 (2025-04-07)\n * @module highcharts/modules/pictorial\n * @requires highcharts\n *\n * Pictorial graph series type for Highcharts\n *\n * (c) 2010-2025 Torstein Honsi, Magdalena Gut\n *\n * License: www.highcharts.com/license\n */\nimport * as __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__ from \"../highcharts.js\";\n/******/ // The require scope\n/******/ var __webpack_require__ = {};\n/******/ \n/************************************************************************/\n/******/ /* webpack/runtime/compat get default export */\n/******/ (() => {\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = (module) => {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t() => (module['default']) :\n/******/ \t\t\t() => (module);\n/******/ \t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\treturn getter;\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/define property getters */\n/******/ (() => {\n/******/ \t// define getter functions for harmony exports\n/******/ \t__webpack_require__.d = (exports, definition) => {\n/******/ \t\tfor(var key in definition) {\n/******/ \t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/hasOwnProperty shorthand */\n/******/ (() => {\n/******/ \t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ })();\n/******/ \n/************************************************************************/\n\n;// external [\"../highcharts.js\",\"default\"]\nconst external_highcharts_src_js_default_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"];\nvar external_highcharts_src_js_default_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_namespaceObject);\n;// external [\"../highcharts.js\",\"default\",\"Series\",\"types\",\"column\"]\nvar x = (y) => {\n\tvar x = {}; __webpack_require__.d(x,\n    \ty); return x\n    } \n    var y = (x) => (() => (x))\n    const external_highcharts_src_js_default_Series_types_column_namespaceObject = x({  });\n;// ./code/es-modules/Extensions/PatternFill.js\n/* *\n *\n *  Module for using patterns or images as point fills.\n *\n *  (c) 2010-2025 Highsoft AS\n *  Author: Torstein Hønsi, Øystein Moseng\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { animObject } = (external_highcharts_src_js_default_default());\n\nconst { getOptions } = (external_highcharts_src_js_default_default());\n\nconst { addEvent, defined, erase, extend, merge, pick, removeEvent, wrap } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\nconst patterns = createPatterns();\n/* *\n *\n *  Functions\n *\n * */\n/** @private */\nfunction compose(ChartClass, SeriesClass, SVGRendererClass) {\n    const PointClass = SeriesClass.prototype.pointClass, pointProto = PointClass.prototype;\n    if (!pointProto.calculatePatternDimensions) {\n        addEvent(ChartClass, 'endResize', onChartEndResize);\n        addEvent(ChartClass, 'redraw', onChartRedraw);\n        extend(pointProto, {\n            calculatePatternDimensions: pointCalculatePatternDimensions\n        });\n        addEvent(PointClass, 'afterInit', onPointAfterInit);\n        addEvent(SeriesClass, 'render', onSeriesRender);\n        wrap(SeriesClass.prototype, 'getColor', wrapSeriesGetColor);\n        // Pattern scale corrections\n        addEvent(SeriesClass, 'afterRender', onPatternScaleCorrection);\n        addEvent(SeriesClass, 'mapZoomComplete', onPatternScaleCorrection);\n        extend(SVGRendererClass.prototype, {\n            addPattern: rendererAddPattern\n        });\n        addEvent(SVGRendererClass, 'complexColor', onRendererComplexColor);\n    }\n}\n/**\n * Add the predefined patterns.\n * @private\n */\nfunction createPatterns() {\n    const patterns = [], colors = getOptions().colors;\n    // Start with subtle patterns\n    let i = 0;\n    for (const pattern of [\n        'M 0 0 L 5 5 M 4.5 -0.5 L 5.5 0.5 M -0.5 4.5 L 0.5 5.5',\n        'M 0 5 L 5 0 M -0.5 0.5 L 0.5 -0.5 M 4.5 5.5 L 5.5 4.5',\n        'M 2 0 L 2 5 M 4 0 L 4 5',\n        'M 0 2 L 5 2 M 0 4 L 5 4',\n        'M 0 1.5 L 2.5 1.5 L 2.5 0 M 2.5 5 L 2.5 3.5 L 5 3.5'\n    ]) {\n        patterns.push({\n            path: pattern,\n            color: colors[i++],\n            width: 5,\n            height: 5,\n            patternTransform: 'scale(1.4 1.4)'\n        });\n    }\n    // Then add the more drastic ones\n    i = 5;\n    for (const pattern of [\n        'M 0 0 L 5 10 L 10 0',\n        'M 3 3 L 8 3 L 8 8 L 3 8 Z',\n        'M 5 5 m -4 0 a 4 4 0 1 1 8 0 a 4 4 0 1 1 -8 0',\n        'M 0 0 L 10 10 M 9 -1 L 11 1 M -1 9 L 1 11',\n        'M 0 10 L 10 0 M -1 1 L 1 -1 M 9 11 L 11 9'\n    ]) {\n        patterns.push({\n            path: pattern,\n            color: colors[i],\n            width: 10,\n            height: 10\n        });\n        i = i + 5;\n    }\n    return patterns;\n}\n/**\n * Utility function to compute a hash value from an object. Modified Java\n * String.hashCode implementation in JS. Use the preSeed parameter to add an\n * additional seeding step.\n *\n * @private\n * @function hashFromObject\n *\n * @param {Object} obj\n *        The javascript object to compute the hash from.\n *\n * @param {boolean} [preSeed=false]\n *        Add an optional preSeed stage.\n *\n * @return {string}\n *         The computed hash.\n */\nfunction hashFromObject(obj, preSeed) {\n    const str = JSON.stringify(obj), strLen = str.length || 0;\n    let hash = 0, i = 0, char, seedStep;\n    if (preSeed) {\n        seedStep = Math.max(Math.floor(strLen / 500), 1);\n        for (let a = 0; a < strLen; a += seedStep) {\n            hash += str.charCodeAt(a);\n        }\n        hash = hash & hash;\n    }\n    for (; i < strLen; ++i) {\n        char = str.charCodeAt(i);\n        hash = ((hash << 5) - hash) + char;\n        hash = hash & hash;\n    }\n    return hash.toString(16).replace('-', '1');\n}\n/**\n * When animation is used, we have to recalculate pattern dimensions after\n * resize, as the bounding boxes are not available until then.\n * @private\n */\nfunction onChartEndResize() {\n    if (this.renderer &&\n        (this.renderer.defIds || []).filter((id) => (id &&\n            id.indexOf &&\n            id.indexOf('highcharts-pattern-') === 0)).length) {\n        // We have non-default patterns to fix. Find them by looping through\n        // all points.\n        for (const series of this.series) {\n            if (series.visible) {\n                for (const point of series.points) {\n                    const colorOptions = point.options && point.options.color;\n                    if (colorOptions &&\n                        colorOptions.pattern) {\n                        colorOptions.pattern\n                            ._width = 'defer';\n                        colorOptions.pattern\n                            ._height = 'defer';\n                    }\n                }\n            }\n        }\n        // Redraw without animation\n        this.redraw(false);\n    }\n}\n/**\n * Add a garbage collector to delete old patterns with autogenerated hashes that\n * are no longer being referenced.\n * @private\n */\nfunction onChartRedraw() {\n    const usedIds = {}, renderer = this.renderer, \n    // Get the autocomputed patterns - these are the ones we might delete\n    patterns = (renderer.defIds || []).filter((pattern) => (pattern.indexOf &&\n        pattern.indexOf('highcharts-pattern-') === 0));\n    if (patterns.length) {\n        // Look through the DOM for usage of the patterns. This can be points,\n        // series, tooltips etc.\n        [].forEach.call(this.renderTo.querySelectorAll('[color^=\"url(\"], [fill^=\"url(\"], [stroke^=\"url(\"]'), (node) => {\n            const id = node.getAttribute('fill') ||\n                node.getAttribute('color') ||\n                node.getAttribute('stroke');\n            if (id) {\n                const sanitizedId = id\n                    .replace(renderer.url, '')\n                    .replace('url(#', '')\n                    .replace(')', '');\n                usedIds[sanitizedId] = true;\n            }\n        });\n        // Loop through the patterns that exist and see if they are used\n        for (const id of patterns) {\n            if (!usedIds[id]) {\n                // Remove id from used id list\n                erase(renderer.defIds, id);\n                // Remove pattern element\n                if (renderer.patternElements[id]) {\n                    renderer.patternElements[id].destroy();\n                    delete renderer.patternElements[id];\n                }\n            }\n        }\n    }\n}\n/**\n * Merge series color options to points.\n * @private\n */\nfunction onPointAfterInit() {\n    const point = this, colorOptions = point.options.color;\n    // Only do this if we have defined a specific color on this point. Otherwise\n    // we will end up trying to re-add the series color for each point.\n    if (colorOptions && colorOptions.pattern) {\n        // Move path definition to object, allows for merge with series path\n        // definition\n        if (typeof colorOptions.pattern.path === 'string') {\n            colorOptions.pattern.path = {\n                d: colorOptions.pattern.path\n            };\n        }\n        // Merge with series options\n        point.color = point.options.color = merge(point.series.options.color, colorOptions);\n    }\n}\n/**\n * Add functionality to SVG renderer to handle patterns as complex colors.\n * @private\n */\nfunction onRendererComplexColor(args) {\n    const color = args.args[0], prop = args.args[1], element = args.args[2], chartIndex = (this.chartIndex || 0);\n    let pattern = color.pattern, value = \"#333333\" /* Palette.neutralColor80 */;\n    // Handle patternIndex\n    if (typeof color.patternIndex !== 'undefined' && patterns) {\n        pattern = patterns[color.patternIndex];\n    }\n    // Skip and call default if there is no pattern\n    if (!pattern) {\n        return true;\n    }\n    // We have a pattern.\n    if (pattern.image ||\n        typeof pattern.path === 'string' ||\n        pattern.path && pattern.path.d) {\n        // Real pattern. Add it and set the color value to be a reference.\n        // Force Hash-based IDs for legend items, as they are drawn before\n        // point render, meaning they are drawn before autocalculated image\n        // width/heights. We don't want them to highjack the width/height for\n        // this ID if it is defined by users.\n        let forceHashId = element.parentNode &&\n            element.parentNode.getAttribute('class');\n        forceHashId = forceHashId &&\n            forceHashId.indexOf('highcharts-legend') > -1;\n        // If we don't have a width/height yet, handle it. Try faking a point\n        // and running the algorithm again.\n        if (pattern._width === 'defer' || pattern._height === 'defer') {\n            pointCalculatePatternDimensions.call({ graphic: { element: element } }, pattern);\n        }\n        // If we don't have an explicit ID, compute a hash from the\n        // definition and use that as the ID. This ensures that points with\n        // the same pattern definition reuse existing pattern elements by\n        // default. We combine two hashes, the second with an additional\n        // preSeed algorithm, to minimize collision probability.\n        if (forceHashId || !pattern.id) {\n            // Make a copy so we don't accidentally edit options when setting ID\n            pattern = merge({}, pattern);\n            pattern.id = 'highcharts-pattern-' + chartIndex + '-' +\n                hashFromObject(pattern) + hashFromObject(pattern, true);\n        }\n        // Add it. This function does nothing if an element with this ID\n        // already exists.\n        this.addPattern(pattern, !this.forExport && pick(pattern.animation, this.globalAnimation, { duration: 100 }));\n        value = `url(${this.url}#${pattern.id + (this.forExport ? '-export' : '')})`;\n    }\n    else {\n        // Not a full pattern definition, just add color\n        value = pattern.color || value;\n    }\n    // Set the fill/stroke prop on the element\n    element.setAttribute(prop, value);\n    // Allow the color to be concatenated into tooltips formatters etc.\n    color.toString = function () {\n        return value;\n    };\n    // Skip default handler\n    return false;\n}\n/**\n * Calculate pattern dimensions on points that have their own pattern.\n * @private\n */\nfunction onSeriesRender() {\n    const isResizing = this.chart.isResizing;\n    if (this.isDirtyData || isResizing || !this.chart.hasRendered) {\n        for (const point of this.points) {\n            const colorOptions = point.options && point.options.color;\n            if (colorOptions &&\n                colorOptions.pattern) {\n                // For most points we want to recalculate the dimensions on\n                // render, where we have the shape args and bbox. But if we\n                // are resizing and don't have the shape args, defer it, since\n                // the bounding box is still not resized.\n                if (isResizing &&\n                    !(point.shapeArgs &&\n                        point.shapeArgs.width &&\n                        point.shapeArgs.height)) {\n                    colorOptions\n                        .pattern._width = 'defer';\n                    colorOptions\n                        .pattern._height = 'defer';\n                }\n                else {\n                    point.calculatePatternDimensions(colorOptions.pattern);\n                }\n            }\n        }\n    }\n}\n/**\n * Set dimensions on pattern from point. This function will set internal\n * pattern._width/_height properties if width and height are not both already\n * set. We only do this on image patterns. The _width/_height properties are set\n * to the size of the bounding box of the point, optionally taking aspect ratio\n * into account. If only one of width or height are supplied as options, the\n * undefined option is calculated as above.\n *\n * @private\n * @function Highcharts.Point#calculatePatternDimensions\n *\n * @param {Highcharts.PatternOptionsObject} pattern\n *        The pattern to set dimensions on.\n *\n * @return {void}\n *\n * @requires modules/pattern-fill\n */\nfunction pointCalculatePatternDimensions(pattern) {\n    if (pattern.width && pattern.height) {\n        return;\n    }\n    const bBox = this.graphic && (this.graphic.getBBox &&\n        this.graphic.getBBox(true) ||\n        this.graphic.element &&\n            this.graphic.element.getBBox()) || {}, shapeArgs = this.shapeArgs;\n    // Prefer using shapeArgs, as it is animation agnostic\n    if (shapeArgs) {\n        bBox.width = shapeArgs.width || bBox.width;\n        bBox.height = shapeArgs.height || bBox.height;\n        bBox.x = shapeArgs.x || bBox.x;\n        bBox.y = shapeArgs.y || bBox.y;\n    }\n    // For images we stretch to bounding box\n    if (pattern.image) {\n        // If we do not have a bounding box at this point, simply add a defer\n        // key and pick this up in the fillSetter handler, where the bounding\n        // box should exist.\n        if (!bBox.width || !bBox.height) {\n            pattern._width = 'defer';\n            pattern._height = 'defer';\n            // Mark the pattern to be flipped later if upside down (#16810)\n            const scaleY = this.series.chart.mapView &&\n                this.series.chart.mapView.getSVGTransform().scaleY;\n            if (defined(scaleY) && scaleY < 0) {\n                pattern._inverted = true;\n            }\n            return;\n        }\n        // Handle aspect ratio filling\n        if (pattern.aspectRatio) {\n            bBox.aspectRatio = bBox.width / bBox.height;\n            if (pattern.aspectRatio > bBox.aspectRatio) {\n                // Height of bBox will determine width\n                bBox.aspectWidth = bBox.height * pattern.aspectRatio;\n            }\n            else {\n                // Width of bBox will determine height\n                bBox.aspectHeight = bBox.width / pattern.aspectRatio;\n            }\n        }\n        // We set the width/height on internal properties to differentiate\n        // between the options set by a user and by this function.\n        pattern._width = pattern.width ||\n            Math.ceil(bBox.aspectWidth || bBox.width);\n        pattern._height = pattern.height ||\n            Math.ceil(bBox.aspectHeight || bBox.height);\n    }\n    // Set x/y accordingly, centering if using aspect ratio, otherwise adjusting\n    // so bounding box corner is 0,0 of pattern.\n    if (!pattern.width) {\n        pattern._x = pattern.x || 0;\n        pattern._x += bBox.x - Math.round(bBox.aspectWidth ?\n            Math.abs(bBox.aspectWidth - bBox.width) / 2 :\n            0);\n    }\n    if (!pattern.height) {\n        pattern._y = pattern.y || 0;\n        pattern._y += bBox.y - Math.round(bBox.aspectHeight ?\n            Math.abs(bBox.aspectHeight - bBox.height) / 2 :\n            0);\n    }\n}\n/**\n * Add a pattern to the renderer.\n *\n * @private\n * @function Highcharts.SVGRenderer#addPattern\n *\n * @param {Highcharts.PatternObject} options\n * The pattern options.\n *\n * @param {boolean|Partial<Highcharts.AnimationOptionsObject>} [animation]\n * The animation options.\n *\n * @return {Highcharts.SVGElement|undefined}\n * The added pattern. Undefined if the pattern already exists.\n *\n * @requires modules/pattern-fill\n */\nfunction rendererAddPattern(options, animation) {\n    const animate = pick(animation, true), animationOptions = animObject(animate), color = options.color || \"#333333\" /* Palette.neutralColor80 */, defaultSize = 32, height = options.height ||\n        (typeof options._height === 'number' ? options._height : 0) ||\n        defaultSize, rect = (fill) => this\n        .rect(0, 0, width, height)\n        .attr({ fill })\n        .add(pattern), width = options.width ||\n        (typeof options._width === 'number' ? options._width : 0) ||\n        defaultSize;\n    let attribs, id = options.id, path;\n    if (!id) {\n        this.idCounter = this.idCounter || 0;\n        id = ('highcharts-pattern-' +\n            this.idCounter +\n            '-' +\n            (this.chartIndex || 0));\n        ++this.idCounter;\n    }\n    if (this.forExport) {\n        id += '-export';\n    }\n    // Do nothing if ID already exists\n    this.defIds = this.defIds || [];\n    if (this.defIds.indexOf(id) > -1) {\n        return;\n    }\n    // Store ID in list to avoid duplicates\n    this.defIds.push(id);\n    // Calculate pattern element attributes\n    const attrs = {\n        id: id,\n        patternUnits: 'userSpaceOnUse',\n        patternContentUnits: options.patternContentUnits || 'userSpaceOnUse',\n        width: width,\n        height: height,\n        x: options._x || options.x || 0,\n        y: options._y || options.y || 0\n    };\n    if (options._inverted) {\n        attrs.patternTransform = 'scale(1, -1)'; // (#16810)\n        if (options.patternTransform) {\n            options.patternTransform += ' scale(1, -1)';\n        }\n    }\n    if (options.patternTransform) {\n        attrs.patternTransform = options.patternTransform;\n    }\n    const pattern = this.createElement('pattern').attr(attrs).add(this.defs);\n    // Set id on the SVGRenderer object\n    pattern.id = id;\n    // Use an SVG path for the pattern\n    if (options.path) {\n        path = external_highcharts_src_js_default_default().isObject(options.path) ?\n            options.path :\n            { d: options.path };\n        // The background\n        if (options.backgroundColor) {\n            rect(options.backgroundColor);\n        }\n        // The pattern\n        attribs = {\n            'd': path.d\n        };\n        if (!this.styledMode) {\n            attribs.stroke = path.stroke || color;\n            attribs['stroke-width'] = pick(path.strokeWidth, 2);\n            attribs.fill = path.fill || 'none';\n        }\n        if (path.transform) {\n            attribs.transform = path.transform;\n        }\n        this.createElement('path').attr(attribs).add(pattern);\n        pattern.color = color;\n        // Image pattern\n    }\n    else if (options.image) {\n        if (animate) {\n            this.image(options.image, 0, 0, width, height, function () {\n                // Onload\n                this.animate({\n                    opacity: pick(options.opacity, 1)\n                }, animationOptions);\n                removeEvent(this.element, 'load');\n            }).attr({ opacity: 0 }).add(pattern);\n        }\n        else {\n            this.image(options.image, 0, 0, width, height).add(pattern);\n        }\n    }\n    // For non-animated patterns, set opacity now\n    if (!(options.image && animate) && typeof options.opacity !== 'undefined') {\n        [].forEach.call(pattern.element.childNodes, (child) => {\n            child.setAttribute('opacity', options.opacity);\n        });\n    }\n    // Store for future reference\n    this.patternElements = this.patternElements || {};\n    this.patternElements[id] = pattern;\n    return pattern;\n}\n/**\n * Make sure we have a series color.\n * @private\n */\nfunction wrapSeriesGetColor(proceed) {\n    const oldColor = this.options.color;\n    // Temporarily remove color options to get defaults\n    if (oldColor &&\n        oldColor.pattern &&\n        !oldColor.pattern.color) {\n        delete this.options.color;\n        // Get default\n        proceed.apply(this, [].slice.call(arguments, 1));\n        // Replace with old, but add default color\n        oldColor.pattern.color =\n            this.color;\n        this.color = this.options.color = oldColor;\n    }\n    else {\n        // We have a color, no need to do anything special\n        proceed.apply(this, [].slice.call(arguments, 1));\n    }\n}\n/**\n * Scale patterns inversely to the series it's used in.\n * Maintains a visual (1,1) scale regardless of size.\n * @private\n */\nfunction onPatternScaleCorrection() {\n    const series = this;\n    // If not a series used in a map chart, skip it.\n    if (!series.chart?.mapView) {\n        return;\n    }\n    const chart = series.chart, renderer = chart.renderer, patterns = renderer.patternElements;\n    // Only scale if we have patterns to scale.\n    if (renderer.defIds?.length && patterns) {\n        // Filter for points which have patterns that don't use images assigned\n        // and has a group scale available.\n        series.points.filter(function (p) {\n            const point = p;\n            // No graphic we can fetch id from, filter out this point.\n            if (!point.graphic) {\n                return false;\n            }\n            return (point.graphic.element.hasAttribute('fill') ||\n                point.graphic.element.hasAttribute('color') ||\n                point.graphic.element.hasAttribute('stroke')) &&\n                !point.options.color?.pattern?.image &&\n                !!point.group?.scaleX &&\n                !!point.group?.scaleY;\n        })\n            // Map up pattern id's and their scales.\n            .map(function (p) {\n            const point = p;\n            // Parse the id from the graphic element of the point.\n            const id = (point.graphic?.element.getAttribute('fill') ||\n                point.graphic?.element.getAttribute('color') ||\n                point.graphic?.element.getAttribute('stroke') || '')\n                .replace(renderer.url, '')\n                .replace('url(#', '')\n                .replace(')', '');\n            return {\n                id,\n                x: point.group?.scaleX || 1,\n                y: point.group?.scaleY || 1\n            };\n        })\n            // Filter out colors and other non-patterns, as well as duplicates.\n            .filter(function (pointInfo, index, arr) {\n            return pointInfo.id !== '' &&\n                pointInfo.id.indexOf('highcharts-pattern-') !== -1 &&\n                !arr.some(function (otherInfo, otherIndex) {\n                    return otherInfo.id === pointInfo.id && otherIndex < index;\n                });\n        })\n            .forEach(function (pointInfo) {\n            const id = pointInfo.id;\n            patterns[id].scaleX = 1 / pointInfo.x;\n            patterns[id].scaleY = 1 / pointInfo.y;\n            patterns[id].updateTransform('patternTransform');\n        });\n    }\n}\n/* *\n *\n *  Export\n *\n * */\nconst PatternFill = {\n    compose,\n    patterns\n};\n/* harmony default export */ const Extensions_PatternFill = (PatternFill);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * Pattern options\n *\n * @interface Highcharts.PatternOptionsObject\n */ /**\n* Background color for the pattern if a `path` is set (not images).\n* @name Highcharts.PatternOptionsObject#backgroundColor\n* @type {Highcharts.ColorString|undefined}\n*/ /**\n* URL to an image to use as the pattern.\n* @name Highcharts.PatternOptionsObject#image\n* @type {string|undefined}\n*/ /**\n* Width of the pattern. For images this is automatically set to the width of\n* the element bounding box if not supplied. For non-image patterns the default\n* is 32px. Note that automatic resizing of image patterns to fill a bounding\n* box dynamically is only supported for patterns with an automatically\n* calculated ID.\n* @name Highcharts.PatternOptionsObject#width\n* @type {number|undefined}\n*/ /**\n* Analogous to pattern.width.\n* @name Highcharts.PatternOptionsObject#height\n* @type {number|undefined}\n*/ /**\n* For automatically calculated width and height on images, it is possible to\n* set an aspect ratio. The image will be zoomed to fill the bounding box,\n* maintaining the aspect ratio defined.\n* @name Highcharts.PatternOptionsObject#aspectRatio\n* @type {number|undefined}\n*/ /**\n* Horizontal offset of the pattern. Defaults to 0.\n* @name Highcharts.PatternOptionsObject#x\n* @type {number|undefined}\n*/ /**\n* Vertical offset of the pattern. Defaults to 0.\n* @name Highcharts.PatternOptionsObject#y\n* @type {number|undefined}\n*/ /**\n* Either an SVG path as string, or an object. As an object, supply the path\n* string in the `path.d` property. Other supported properties are standard SVG\n* attributes like `path.stroke` and `path.fill`. If a path is supplied for the\n* pattern, the `image` property is ignored.\n* @name Highcharts.PatternOptionsObject#path\n* @type {string|Highcharts.SVGAttributes|undefined}\n*/ /**\n* SVG `patternTransform` to apply to the entire pattern.\n* @name Highcharts.PatternOptionsObject#patternTransform\n* @type {string|undefined}\n* @see [patternTransform demo](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/series/pattern-fill-transform)\n*/ /**\n* Pattern color, used as default path stroke.\n* @name Highcharts.PatternOptionsObject#color\n* @type {Highcharts.ColorString|undefined}\n*/ /**\n* Opacity of the pattern as a float value from 0 to 1.\n* @name Highcharts.PatternOptionsObject#opacity\n* @type {number|undefined}\n*/ /**\n* ID to assign to the pattern. This is automatically computed if not added, and\n* identical patterns are reused. To refer to an existing pattern for a\n* Highcharts color, use `color: \"url(#pattern-id)\"`.\n* @name Highcharts.PatternOptionsObject#id\n* @type {string|undefined}\n*/\n/**\n * Holds a pattern definition.\n *\n * @sample highcharts/series/pattern-fill-area/\n *         Define a custom path pattern\n * @sample highcharts/series/pattern-fill-pie/\n *         Default patterns and a custom image pattern\n * @sample maps/demo/pattern-fill-map/\n *         Custom images on map\n *\n * @example\n * // Pattern used as a color option\n * color: {\n *     pattern: {\n *            path: {\n *                 d: 'M 3 3 L 8 3 L 8 8 Z',\n *                fill: '#102045'\n *            },\n *            width: 12,\n *            height: 12,\n *            color: '#907000',\n *            opacity: 0.5\n *     }\n * }\n *\n * @interface Highcharts.PatternObject\n */ /**\n* Pattern options\n* @name Highcharts.PatternObject#pattern\n* @type {Highcharts.PatternOptionsObject}\n*/ /**\n* Animation options for the image pattern loading.\n* @name Highcharts.PatternObject#animation\n* @type {boolean|Partial<Highcharts.AnimationOptionsObject>|undefined}\n*/ /**\n* Optionally an index referencing which pattern to use. Highcharts adds\n* 10 default patterns to the `Highcharts.patterns` array. Additional\n* pattern definitions can be pushed to this array if desired. This option\n* is an index into this array.\n* @name Highcharts.PatternObject#patternIndex\n* @type {number|undefined}\n*/\n''; // Keeps doclets above in transpiled file\n\n;// external [\"../highcharts.js\",\"default\",\"Chart\"]\nconst external_highcharts_src_js_default_Chart_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Chart;\nvar external_highcharts_src_js_default_Chart_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Chart_namespaceObject);\n;// external [\"../highcharts.js\",\"default\",\"SeriesRegistry\"]\nconst external_highcharts_src_js_default_SeriesRegistry_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].SeriesRegistry;\nvar external_highcharts_src_js_default_SeriesRegistry_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_SeriesRegistry_namespaceObject);\n;// ./code/es-modules/Series/Pictorial/PictorialUtilities.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi, Magdalena Gut\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\nconst { defined: PictorialUtilities_defined } = (external_highcharts_src_js_default_default());\n/**\n *\n */\nfunction rescalePatternFill(element, stackHeight, width, height, borderWidth = 1) {\n    const fill = element && element.attr('fill'), match = fill && fill.match(/url\\(([^)]+)\\)/);\n    if (match) {\n        const patternPath = document.querySelector(`${match[1]} path`);\n        if (patternPath) {\n            let bBox = patternPath.getBBox();\n            // Firefox (v108/Mac) is unable to detect the bounding box within\n            // defs. Without this block, the pictorial is not rendered.\n            if (bBox.width === 0) {\n                const parent = patternPath.parentElement;\n                // Temporarily append it to the root\n                element.renderer.box.appendChild(patternPath);\n                bBox = patternPath.getBBox();\n                parent.appendChild(patternPath);\n            }\n            let scaleX = 1 / (bBox.width + borderWidth);\n            const scaleY = stackHeight / height / bBox.height, aspectRatio = bBox.width / bBox.height, pointAspectRatio = width / stackHeight, x = -bBox.width / 2;\n            if (aspectRatio < pointAspectRatio) {\n                scaleX = scaleX * aspectRatio / pointAspectRatio;\n            }\n            patternPath.setAttribute('stroke-width', borderWidth / (width * scaleX));\n            patternPath.setAttribute('transform', 'translate(0.5, 0)' +\n                `scale(${scaleX} ${scaleY}) ` +\n                `translate(${x + borderWidth * scaleX / 2}, ${-bBox.y})`);\n        }\n    }\n}\n/**\n *\n */\nfunction getStackMetrics(yAxis, shape) {\n    let height = yAxis.len, y = 0;\n    if (shape && PictorialUtilities_defined(shape.max)) {\n        y = yAxis.toPixels(shape.max, true);\n        height = yAxis.len - y;\n    }\n    return {\n        height,\n        y\n    };\n}\n/**\n *\n */\nfunction invertShadowGroup(shadowGroup, yAxis) {\n    const inverted = yAxis.chart.inverted;\n    if (inverted) {\n        shadowGroup.attr({\n            rotation: inverted ? 90 : 0,\n            scaleX: inverted ? -1 : 1\n        });\n    }\n}\n/* harmony default export */ const PictorialUtilities = ({ rescalePatternFill, invertShadowGroup, getStackMetrics });\n\n;// ./code/es-modules/Series/Pictorial/PictorialPoint.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi, Magdalena Gut\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst ColumnPoint = (external_highcharts_src_js_default_SeriesRegistry_default()).seriesTypes.column.prototype.pointClass;\nconst { rescalePatternFill: PictorialPoint_rescalePatternFill, getStackMetrics: PictorialPoint_getStackMetrics } = PictorialUtilities;\n/* *\n *\n *  Class\n *\n * */\nclass PictorialPoint extends ColumnPoint {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    setState() {\n        const point = this;\n        super.setState.apply(point, arguments);\n        const series = point.series, paths = series.options.paths;\n        if (point.graphic && point.shapeArgs && paths) {\n            const shape = paths[point.index %\n                paths.length];\n            PictorialPoint_rescalePatternFill(point.graphic, PictorialPoint_getStackMetrics(series.yAxis, shape).height, point.shapeArgs.width || 0, point.shapeArgs.height || Infinity, point.series.options.borderWidth || 0);\n        }\n    }\n}\n/* *\n *\n *  Export Default\n *\n * */\n/* harmony default export */ const Pictorial_PictorialPoint = (PictorialPoint);\n\n;// external [\"../highcharts.js\",\"default\",\"Series\"]\nconst external_highcharts_src_js_default_Series_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Series;\nvar external_highcharts_src_js_default_Series_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Series_namespaceObject);\n;// external [\"../highcharts.js\",\"default\",\"StackItem\"]\nconst external_highcharts_src_js_default_StackItem_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].StackItem;\nvar external_highcharts_src_js_default_StackItem_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_StackItem_namespaceObject);\n;// external [\"../highcharts.js\",\"default\",\"SVGRenderer\"]\nconst external_highcharts_src_js_default_SVGRenderer_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].SVGRenderer;\nvar external_highcharts_src_js_default_SVGRenderer_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_SVGRenderer_namespaceObject);\n;// ./code/es-modules/Series/Pictorial/PictorialSeries.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi, Magdalena Gut\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Imports\n *\n * */\n\n\n\n\n\n\n\n\n\n\n\nconst ColumnSeries = (external_highcharts_src_js_default_SeriesRegistry_default()).seriesTypes.column;\nExtensions_PatternFill.compose((external_highcharts_src_js_default_Chart_default()), (external_highcharts_src_js_default_Series_default()), (external_highcharts_src_js_default_SVGRenderer_default()));\nconst { animObject: PictorialSeries_animObject } = (external_highcharts_src_js_default_default());\nconst { getStackMetrics: PictorialSeries_getStackMetrics, invertShadowGroup: PictorialSeries_invertShadowGroup, rescalePatternFill: PictorialSeries_rescalePatternFill } = PictorialUtilities;\nconst { addEvent: PictorialSeries_addEvent, defined: PictorialSeries_defined, merge: PictorialSeries_merge, objectEach, pick: PictorialSeries_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * The pictorial series type.\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.pictorial\n *\n * @augments Highcharts.Series\n */\nclass PictorialSeries extends ColumnSeries {\n    /* *\n     *\n     * Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Animate in the series. Called internally twice. First with the `init`\n     * parameter set to true, which sets up the initial state of the\n     * animation. Then when ready, it is called with the `init` parameter\n     * undefined, in order to perform the actual animation.\n     *\n     * @function Highcharts.Series#animate\n     *\n     * @param {boolean} [init]\n     * Initialize the animation.\n     */\n    animate(init) {\n        const { chart, group } = this, animation = PictorialSeries_animObject(this.options.animation), \n        // The key for temporary animation clips\n        animationClipKey = [\n            this.getSharedClipKey(),\n            animation.duration,\n            animation.easing,\n            animation.defer\n        ].join(',');\n        let animationClipRect = chart.sharedClips[animationClipKey];\n        // Initialize the animation. Set up the clipping rectangle.\n        if (init && group) {\n            const clipBox = chart.getClipBox(this);\n            // Create temporary animation clips\n            if (!animationClipRect) {\n                clipBox.y = clipBox.height;\n                clipBox.height = 0;\n                animationClipRect = chart.renderer.clipRect(clipBox);\n                chart.sharedClips[animationClipKey] = animationClipRect;\n            }\n            group.clip(animationClipRect);\n            // Run the animation\n        }\n        else if (animationClipRect &&\n            // Only first series in this pane\n            !animationClipRect.hasClass('highcharts-animating')) {\n            const finalBox = chart.getClipBox(this);\n            animationClipRect\n                .addClass('highcharts-animating')\n                .animate(finalBox, animation);\n        }\n    }\n    animateDrilldown() { }\n    animateDrillupFrom() { }\n    pointAttribs(point) {\n        const pointAttribs = super.pointAttribs.apply(this, arguments), seriesOptions = this.options, series = this, paths = seriesOptions.paths;\n        if (point && point.shapeArgs && paths) {\n            const shape = paths[point.index % paths.length], { y, height } = PictorialSeries_getStackMetrics(series.yAxis, shape), pathDef = shape.definition;\n            // New pattern, replace\n            if (pathDef !== point.pathDef) {\n                point.pathDef = pathDef;\n                pointAttribs.fill = {\n                    pattern: {\n                        path: {\n                            d: pathDef,\n                            fill: pointAttribs.fill,\n                            strokeWidth: pointAttribs['stroke-width'],\n                            stroke: pointAttribs.stroke\n                        },\n                        x: point.shapeArgs.x,\n                        y: y,\n                        width: point.shapeArgs.width || 0,\n                        height: height,\n                        patternContentUnits: 'objectBoundingBox',\n                        backgroundColor: 'none',\n                        color: '#ff0000'\n                    }\n                };\n            }\n            else if (point.pathDef && point.graphic) {\n                delete pointAttribs.fill;\n            }\n        }\n        delete pointAttribs.stroke;\n        delete pointAttribs.strokeWidth;\n        return pointAttribs;\n    }\n    /**\n     * Make sure that path.max is also considered when calculating dataMax.\n     */\n    getExtremes() {\n        const extremes = super.getExtremes.apply(this, arguments), series = this, paths = series.options.paths;\n        if (paths) {\n            paths.forEach(function (path) {\n                if (PictorialSeries_defined(path.max) &&\n                    PictorialSeries_defined(extremes.dataMax) &&\n                    path.max > extremes.dataMax) {\n                    extremes.dataMax = path.max;\n                }\n            });\n        }\n        return extremes;\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nPictorialSeries.defaultOptions = PictorialSeries_merge(ColumnSeries.defaultOptions, \n/**\n * A pictorial chart uses vector images to represents the data.\n * The shape of the data point is taken from the path parameter.\n *\n * @sample       {highcharts} highcharts/demo/pictorial/\n *               Pictorial chart\n *\n * @extends      plotOptions.column\n * @since 11.0.0\n * @product      highcharts\n * @excluding    allAreas, borderRadius,\n *               centerInCategory, colorAxis, colorKey, connectEnds,\n *               connectNulls, crisp, compare, compareBase, dataSorting,\n *               dashStyle, dataAsColumns, linecap, lineWidth, shadow,\n *               onPoint\n * @requires     modules/pictorial\n * @optionparent plotOptions.pictorial\n */\n{\n    borderWidth: 0\n});\n/* *\n *\n *  Events\n *\n * */\nPictorialSeries_addEvent(PictorialSeries, 'afterRender', function () {\n    const series = this, paths = series.options.paths, fillUrlMatcher = /url\\(([^)]+)\\)/;\n    series.points.forEach(function (point) {\n        if (point.graphic && point.shapeArgs && paths) {\n            const shape = paths[point.index % paths.length], fill = point.graphic.attr('fill'), match = fill && fill.match(fillUrlMatcher), { y, height } = PictorialSeries_getStackMetrics(series.yAxis, shape);\n            if (match && series.chart.renderer.patternElements) {\n                const currentPattern = series.chart.renderer.patternElements[match[1].slice(1)];\n                if (currentPattern) {\n                    currentPattern.animate({\n                        x: point.shapeArgs.x,\n                        y: y,\n                        width: point.shapeArgs.width || 0,\n                        height: height\n                    });\n                }\n            }\n            PictorialSeries_rescalePatternFill(point.graphic, PictorialSeries_getStackMetrics(series.yAxis, shape).height, point.shapeArgs.width || 0, point.shapeArgs.height || Infinity, series.options.borderWidth || 0);\n        }\n    });\n});\n/**\n *\n */\nfunction renderStackShadow(stack) {\n    // Get first pictorial series\n    const stackKeys = Object\n        .keys(stack.points)\n        .filter((p) => p.split(',').length > 1), allSeries = stack.axis.chart.series, seriesIndexes = stackKeys.map((key) => parseFloat(key.split(',')[0]));\n    let seriesIndex = -1;\n    seriesIndexes.forEach((index) => {\n        if (allSeries[index] && allSeries[index].visible) {\n            seriesIndex = index;\n        }\n    });\n    const series = stack.axis.chart.series[seriesIndex];\n    if (series &&\n        series.is('pictorial') &&\n        stack.axis.hasData() &&\n        series.xAxis.hasData()) {\n        const xAxis = series.xAxis, options = stack.axis.options, chart = stack.axis.chart, stackShadow = stack.shadow, xCenter = xAxis.toPixels(stack.x, true), x = chart.inverted ? xAxis.len - xCenter : xCenter, paths = series.options.paths || [], index = stack.x % paths.length, shape = paths[index], width = series.getColumnMetrics &&\n            series.getColumnMetrics().width, { height, y } = PictorialSeries_getStackMetrics(series.yAxis, shape), shadowOptions = options.stackShadow, strokeWidth = PictorialSeries_pick(shadowOptions && shadowOptions.borderWidth, series.options.borderWidth, 1);\n        if (!stackShadow &&\n            shadowOptions &&\n            shadowOptions.enabled &&\n            shape) {\n            if (!stack.shadowGroup) {\n                stack.shadowGroup = chart.renderer.g('shadow-group')\n                    .add();\n            }\n            stack.shadowGroup.attr({\n                translateX: chart.inverted ?\n                    stack.axis.pos : xAxis.pos,\n                translateY: chart.inverted ?\n                    xAxis.pos : stack.axis.pos\n            });\n            stack.shadow = chart.renderer.rect(x, y, width, height)\n                .attr({\n                fill: {\n                    pattern: {\n                        path: {\n                            d: shape.definition,\n                            fill: shadowOptions.color ||\n                                '#dedede',\n                            strokeWidth: strokeWidth,\n                            stroke: shadowOptions.borderColor ||\n                                'transparent'\n                        },\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height,\n                        patternContentUnits: 'objectBoundingBox',\n                        backgroundColor: 'none',\n                        color: '#dedede'\n                    }\n                }\n            })\n                .add(stack.shadowGroup);\n            PictorialSeries_invertShadowGroup(stack.shadowGroup, stack.axis);\n            PictorialSeries_rescalePatternFill(stack.shadow, height, width, height, strokeWidth);\n            stack.setOffset(series.pointXOffset || 0, series.barW || 0);\n        }\n        else if (stackShadow && stack.shadowGroup) {\n            stackShadow.animate({\n                x,\n                y,\n                width,\n                height\n            });\n            const fillUrlMatcher = /url\\(([^)]+)\\)/, fill = stackShadow.attr('fill'), match = fill && fill.match(fillUrlMatcher);\n            if (match && chart.renderer.patternElements) {\n                chart.renderer.patternElements[match[1].slice(1)]\n                    .animate({\n                    x,\n                    y,\n                    width,\n                    height\n                });\n            }\n            stack.shadowGroup.animate({\n                translateX: chart.inverted ?\n                    stack.axis.pos : xAxis.pos,\n                translateY: chart.inverted ?\n                    xAxis.pos : stack.axis.pos\n            });\n            PictorialSeries_invertShadowGroup(stack.shadowGroup, stack.axis);\n            PictorialSeries_rescalePatternFill(stackShadow, height, width, height, strokeWidth);\n            stack.setOffset(series.pointXOffset || 0, series.barW || 0);\n        }\n    }\n    else if (stack.shadow && stack.shadowGroup) {\n        stack.shadow.destroy();\n        stack.shadow = void 0;\n        stack.shadowGroup.destroy();\n        stack.shadowGroup = void 0;\n    }\n}\n/**\n *\n */\nfunction forEachStack(chart, callback) {\n    if (chart.axes) {\n        chart.axes.forEach(function (axis) {\n            if (!axis.stacking) {\n                return;\n            }\n            const stacks = axis.stacking.stacks;\n            // Render each stack total\n            objectEach(stacks, function (type) {\n                objectEach(type, function (stack) {\n                    callback(stack);\n                });\n            });\n        });\n    }\n}\nPictorialSeries_addEvent((external_highcharts_src_js_default_Chart_default()), 'render', function () {\n    forEachStack(this, renderStackShadow);\n});\nPictorialSeries_addEvent((external_highcharts_src_js_default_StackItem_default()), 'afterSetOffset', function (e) {\n    if (this.shadow) {\n        const { chart, len } = this.axis, { xOffset, width } = e, translateX = chart.inverted ? xOffset - chart.xAxis[0].len : xOffset, translateY = chart.inverted ? -len : 0;\n        this.shadow.attr({\n            translateX,\n            translateY\n        });\n        this.shadow.animate({ width });\n    }\n});\n/**\n *\n */\nfunction destroyAllStackShadows(chart) {\n    forEachStack(chart, function (stack) {\n        if (stack.shadow && stack.shadowGroup) {\n            stack.shadow.destroy();\n            stack.shadowGroup.destroy();\n            delete stack.shadow;\n            delete stack.shadowGroup;\n        }\n    });\n}\n// This is a workaround due to no implementation of the animation drilldown.\nPictorialSeries_addEvent((external_highcharts_src_js_default_Chart_default()), 'afterDrilldown', function () {\n    destroyAllStackShadows(this);\n});\nPictorialSeries_addEvent((external_highcharts_src_js_default_Chart_default()), 'afterDrillUp', function () {\n    destroyAllStackShadows(this);\n});\nPictorialSeries.prototype.pointClass = Pictorial_PictorialPoint;\nexternal_highcharts_src_js_default_SeriesRegistry_default().registerSeriesType('pictorial', PictorialSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Pictorial_PictorialSeries = ((/* unused pure expression or super */ null && (PictorialSeries)));\n/* *\n *\n * API Options\n *\n * */\n/**\n * A `pictorial` series. If the [type](#series.pictorial.type) option is not\n * specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.pictorial\n * @since 11.0.0\n * @product   highcharts\n * @excluding dataParser, borderRadius, boostBlending, boostThreshold,\n *            borderColor, borderWidth, centerInCategory, connectEnds,\n *            connectNulls, crisp, colorKey, dataURL, dataAsColumns, depth,\n *            dragDrop, edgeColor, edgeWidth, linecap, lineWidth,  marker,\n *            dataSorting, dashStyle, onPoint, relativeXValue, shadow, zoneAxis,\n *            zones\n * @requires  modules/pictorial\n * @apioption series.pictorial\n */\n/**\n * An array of data points for the series. For the `pictorial` series type,\n * points can be given in the following ways:\n *\n * 1. An array of arrays with 2 values. In this case, the values correspond\n *    to `x,y`. If the first value is a string, it is applied as the name\n *    of the point, and the `x` value is inferred. The `x` value can also be\n *    omitted, in which case the inner arrays should be of length 2. Then the\n *    `x` value is automatically calculated, either starting at 0 and\n *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n *    series options.\n *    ```js\n *    data: [\n *        [0, 40],\n *        [1, 50],\n *        [2, 60]\n *    ]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.pictorial.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 0,\n *        y: 40,\n *        name: \"Point1\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        y: 60,\n *        name: \"Point2\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @type      {Array<Array<(number|string),number>|Array<(number|string),number,number>|*>}\n * @extends   series.column.data\n *\n * @sample {highcharts} highcharts/demo/pictorial/\n *         Pictorial chart\n * @sample {highcharts} highcharts/demo/pictorial-stackshadow/\n *         Pictorial stackShadow option\n * @sample {highcharts} highcharts/series-pictorial/paths-max/\n *         Pictorial max option\n *\n * @excluding borderColor, borderWidth, dashStyle, dragDrop\n * @since 11.0.0\n * @product   highcharts\n * @apioption series.pictorial.data\n */\n/**\n * The paths include options describing the series image. For further details on\n * preparing the SVG image, please refer to the [pictorial\n * documentation](https://www.highcharts.com/docs/chart-and-series-types/pictorial).\n *\n * @declare   Highcharts.SeriesPictorialPathsOptionsObject\n * @type      {Array<*>}\n *\n * @sample    {highcharts} highcharts/demo/pictorial/\n *            Pictorial chart\n *\n * @since     11.0.0\n * @product   highcharts\n * @apioption series.pictorial.paths\n */\n/**\n * The definition defines a path to be drawn. It corresponds `d` SVG attribute.\n *\n * @type      {string}\n *\n * @sample    {highcharts} highcharts/demo/pictorial/\n *            Pictorial chart\n *\n * @product   highcharts\n * @apioption series.pictorial.paths.definition\n */\n/**\n * The max option determines height of the image. It is the ratio of\n * `yAxis.max` to the `paths.max`.\n *\n * @sample {highcharts} highcharts/series-pictorial/paths-max\n *         Pictorial max option\n *\n * @type      {number}\n * @default   yAxis.max\n * @product   highcharts\n * @apioption series.pictorial.paths.max\n */\n/**\n * Relevant only for pictorial series. The `stackShadow` forms the background of\n * stacked points. Requires `series.stacking` to be defined.\n *\n * @sample {highcharts} highcharts/demo/pictorial-stackshadow/ Pictorial\n *         stackShadow option\n *\n * @declare   Highcharts.YAxisOptions\n * @type      {*}\n * @since 11.0.0\n * @product   highcharts\n * @requires  modules/pictorial\n * @apioption yAxis.stackShadow\n */\n/**\n * The color of the `stackShadow` border.\n *\n * @declare   Highcharts.YAxisOptions\n * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n * @default   transparent\n * @product   highcharts\n * @requires  modules/pictorial\n * @apioption yAxis.stackShadow.borderColor\n */\n/**\n * The width of the `stackShadow` border.\n *\n * @declare   Highcharts.YAxisOptions\n * @type      {number}\n * @default   0\n * @product   highcharts\n * @requires  modules/pictorial\n * @apioption yAxis.stackShadow.borderWidth\n */\n/**\n * The color of the `stackShadow`.\n *\n * @declare   Highcharts.YAxisOptions\n * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n * @default   #dedede\n * @product   highcharts\n * @requires  modules/pictorial\n * @apioption yAxis.stackShadow.color\n */\n/**\n * Enable or disable `stackShadow`.\n *\n * @declare   Highcharts.YAxisOptions\n * @type      {boolean}\n * @default   undefined\n * @product   highcharts\n * @requires  modules/pictorial\n * @apioption yAxis.stackShadow.enabled\n */\n''; // Adds doclets above to transpiled file\n\n;// ./code/es-modules/masters/modules/pictorial.js\n\n\n\n\n/* harmony default export */ const pictorial_src = ((external_highcharts_src_js_default_default()));\n\nexport { pictorial_src as default };\n"],"names":["__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__","__webpack_require__","n","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","external_highcharts_src_js_default_namespaceObject","external_highcharts_src_js_default_default","animObject","getOptions","addEvent","defined","erase","extend","merge","pick","removeEvent","wrap","patterns","createPatterns","colors","i","pattern","push","path","color","width","height","patternTransform","hashFromObject","preSeed","str","JSON","stringify","strLen","length","hash","seedStep","Math","max","floor","charCodeAt","toString","replace","onChartEndResize","renderer","defIds","filter","id","indexOf","series","visible","point","points","colorOptions","options","_width","_height","redraw","onChartRedraw","usedIds","forEach","renderTo","querySelectorAll","node","getAttribute","url","patternElements","destroy","onPointAfterInit","onRendererComplexColor","args","element","chartIndex","value","patternIndex","image","forceHashId","parentNode","pointCalculatePatternDimensions","graphic","addPattern","forExport","animation","globalAnimation","duration","setAttribute","onSeriesRender","isResizing","chart","isDirtyData","hasRendered","shapeArgs","calculatePatternDimensions","bBox","getBBox","x","y","scaleY","mapView","getSVGTransform","_inverted","aspectRatio","aspectWidth","aspectHeight","ceil","_x","round","abs","_y","rendererAddPattern","animate","animationOptions","attribs","idCounter","attrs","patternUnits","patternContentUnits","createElement","attr","add","defs","isObject","backgroundColor","fill","rect","styledMode","stroke","strokeWidth","transform","opacity","childNodes","child","wrapSeriesGetColor","proceed","oldColor","apply","slice","arguments","onPatternScaleCorrection","p","hasAttribute","group","scaleX","map","pointInfo","index","arr","some","otherInfo","otherIndex","updateTransform","external_highcharts_src_js_default_Chart_namespaceObject","Chart","external_highcharts_src_js_default_Chart_default","external_highcharts_src_js_default_SeriesRegistry_namespaceObject","SeriesRegistry","external_highcharts_src_js_default_SeriesRegistry_default","PictorialUtilities_defined","PictorialUtilities","rescalePatternFill","stackHeight","borderWidth","match","patternPath","document","querySelector","parent","parentElement","box","appendChild","pointAspectRatio","invertShadowGroup","shadowGroup","yAxis","inverted","rotation","getStackMetrics","shape","len","toPixels","ColumnPoint","seriesTypes","column","pointClass","PictorialPoint_rescalePatternFill","PictorialPoint_getStackMetrics","Pictorial_PictorialPoint","setState","paths","Infinity","external_highcharts_src_js_default_Series_namespaceObject","Series","external_highcharts_src_js_default_Series_default","external_highcharts_src_js_default_StackItem_namespaceObject","StackItem","external_highcharts_src_js_default_StackItem_default","external_highcharts_src_js_default_SVGRenderer_namespaceObject","SVGRenderer","external_highcharts_src_js_default_SVGRenderer_default","ColumnSeries","Extensions_PatternFill","compose","ChartClass","SeriesClass","SVGRendererClass","PointClass","pointProto","PictorialSeries_animObject","PictorialSeries_getStackMetrics","PictorialSeries_invertShadowGroup","PictorialSeries_rescalePatternFill","PictorialSeries_addEvent","PictorialSeries_defined","PictorialSeries_merge","objectEach","PictorialSeries_pick","PictorialSeries","init","animationClipKey","getSharedClipKey","easing","defer","join","animationClipRect","sharedClips","clipBox","getClipBox","clipRect","clip","hasClass","finalBox","addClass","animateDrilldown","animateDrillupFrom","pointAttribs","seriesOptions","pathDef","getExtremes","extremes","dataMax","renderStackShadow","stack","stackKeys","keys","split","allSeries","axis","seriesIndexes","parseFloat","seriesIndex","is","hasData","xAxis","stackShadow","shadow","xCenter","getColumnMetrics","shadowOptions","enabled","g","translateX","pos","translateY","borderColor","setOffset","pointXOffset","barW","forEachStack","callback","axes","stacking","stacks","type","destroyAllStackShadows","defaultOptions","fillUrlMatcher","currentPattern","e","xOffset","registerSeriesType","pictorial_src","default"],"mappings":"AAWA,UAAYA,MAA6D,sBAAuB,CAEvF,IAAIC,EAAsB,CAAC,CAM1BA,CAAAA,EAAoBC,CAAC,CAAG,AAACC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,UAAU,CACvC,IAAOF,EAAO,OAAU,CACxB,IAAOA,EAER,OADAF,EAAoBK,CAAC,CAACF,EAAQ,CAAEG,EAAGH,CAAO,GACnCA,CACR,EAMAH,EAAoBK,CAAC,CAAG,CAACE,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXR,EAAoBU,CAAC,CAACF,EAAYC,IAAQ,CAACT,EAAoBU,CAAC,CAACH,EAASE,IAC5EE,OAAOC,cAAc,CAACL,EAASE,EAAK,CAAEI,WAAY,CAAA,EAAMC,IAAKN,CAAU,CAACC,EAAI,AAAC,EAGhF,EAKAT,EAAoBU,CAAC,CAAG,CAACK,EAAKC,IAAUL,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,EAAKC,GAM5F,IAAMI,EAAqDrB,EAAwD,OAAU,CAC7H,IAAIsB,EAA0DrB,EAAoBC,CAAC,CAACmB,GAGvEpB,EAAoBK,CAAC,CAAzB,CAAC,EAI2E,CAAG,GAgBxF,GAAM,CAAEiB,WAAAA,CAAU,CAAE,CAAID,IAElB,CAAEE,WAAAA,CAAU,CAAE,CAAIF,IAElB,CAAEG,SAAAA,CAAQ,CAAEC,QAAAA,CAAO,CAAEC,MAAAA,CAAK,CAAEC,OAAAA,CAAM,CAAEC,MAAAA,CAAK,CAAEC,KAAAA,CAAI,CAAEC,YAAAA,CAAW,CAAEC,KAAAA,CAAI,CAAE,CAAIV,IAMxEW,EAAWC,AA+BjB,WACI,IAAMD,EAAW,EAAE,CAAEE,EAASX,IAAaW,MAAM,CAE7CC,EAAI,EACR,IAAK,IAAMC,IAAW,CAClB,wDACA,wDACA,0BACA,0BACA,sDACH,CACGJ,EAASK,IAAI,CAAC,CACVC,KAAMF,EACNG,MAAOL,CAAM,CAACC,IAAI,CAClBK,MAAO,EACPC,OAAQ,EACRC,iBAAkB,gBACtB,GAIJ,IAAK,IAAMN,KADXD,EAAI,EACkB,CAClB,sBACA,4BACA,gDACA,4CACA,4CACH,EACGH,EAASK,IAAI,CAAC,CACVC,KAAMF,EACNG,MAAOL,CAAM,CAACC,EAAE,CAChBK,MAAO,GACPC,OAAQ,EACZ,GACAN,GAAQ,EAEZ,OAAOH,CACX,IAkBA,SAASW,EAAe5B,CAAG,CAAE6B,CAAO,EAChC,IAAMC,EAAMC,KAAKC,SAAS,CAAChC,GAAMiC,EAASH,EAAII,MAAM,EAAI,EACpDC,EAAO,EAAGf,EAAI,EAASgB,EAC3B,GAAIP,EAAS,CACTO,EAAWC,KAAKC,GAAG,CAACD,KAAKE,KAAK,CAACN,EAAS,KAAM,GAC9C,IAAK,IAAI1C,EAAI,EAAGA,EAAI0C,EAAQ1C,GAAK6C,EAC7BD,GAAQL,EAAIU,UAAU,CAACjD,GAE3B4C,GAAcA,CAClB,CACA,KAAOf,EAAIa,EAAQ,EAAEb,EAEjBe,EAAO,AAAEA,CAAAA,GAAQ,CAAA,EAAKA,EADfL,EAAIU,UAAU,CAACpB,GAEtBe,GAAcA,EAElB,OAAOA,EAAKM,QAAQ,CAAC,IAAIC,OAAO,CAAC,IAAK,IAC1C,CAMA,SAASC,IACL,GAAI,IAAI,CAACC,QAAQ,EACb,AAAC,CAAA,IAAI,CAACA,QAAQ,CAACC,MAAM,EAAI,EAAE,AAAD,EAAGC,MAAM,CAAC,AAACC,GAAQA,GACzCA,EAAGC,OAAO,EACVD,AAAsC,IAAtCA,EAAGC,OAAO,CAAC,wBAA+Bd,MAAM,CAAE,CAGtD,IAAK,IAAMe,KAAU,IAAI,CAACA,MAAM,CAC5B,GAAIA,EAAOC,OAAO,CACd,IAAK,IAAMC,KAASF,EAAOG,MAAM,CAAE,CAC/B,IAAMC,EAAeF,EAAMG,OAAO,EAAIH,EAAMG,OAAO,CAAC9B,KAAK,CACrD6B,GACAA,EAAahC,OAAO,GACpBgC,EAAahC,OAAO,CACfkC,MAAM,CAAG,QACdF,EAAahC,OAAO,CACfmC,OAAO,CAAG,QAEvB,CAIR,IAAI,CAACC,MAAM,CAAC,CAAA,EAChB,CACJ,CAMA,SAASC,IACL,IAAMC,EAAU,CAAC,EAAGf,EAAW,IAAI,CAACA,QAAQ,CAE5C3B,EAAW,AAAC2B,CAAAA,EAASC,MAAM,EAAI,EAAE,AAAD,EAAGC,MAAM,CAAC,AAACzB,GAAaA,EAAQ2B,OAAO,EACnE3B,AAA2C,IAA3CA,EAAQ2B,OAAO,CAAC,wBACpB,GAAI/B,EAASiB,MAAM,CAgBf,IAAK,IAAMa,KAbX,EAAE,CAACa,OAAO,CAACxD,IAAI,CAAC,IAAI,CAACyD,QAAQ,CAACC,gBAAgB,CAAC,qDAAsD,AAACC,IAClG,IAAMhB,EAAKgB,EAAKC,YAAY,CAAC,SACzBD,EAAKC,YAAY,CAAC,UAClBD,EAAKC,YAAY,CAAC,UAClBjB,GAKAY,CAAAA,CAAO,CAJaZ,EACfL,OAAO,CAACE,EAASqB,GAAG,CAAE,IACtBvB,OAAO,CAAC,QAAS,IACjBA,OAAO,CAAC,IAAK,IACE,CAAG,CAAA,CAAG,CAElC,GAEiBzB,GACT,CAAC0C,CAAO,CAACZ,EAAG,GAEZpC,EAAMiC,EAASC,MAAM,CAAEE,GAEnBH,EAASsB,eAAe,CAACnB,EAAG,GAC5BH,EAASsB,eAAe,CAACnB,EAAG,CAACoB,OAAO,GACpC,OAAOvB,EAASsB,eAAe,CAACnB,EAAG,EAKvD,CAKA,SAASqB,IACL,IAAoBf,EAAeF,AAArB,IAAI,CAAuBG,OAAO,CAAC9B,KAAK,CAGlD6B,GAAgBA,EAAahC,OAAO,GAGK,UAArC,OAAOgC,EAAahC,OAAO,CAACE,IAAI,EAChC8B,CAAAA,EAAahC,OAAO,CAACE,IAAI,CAAG,CACxBjC,EAAG+D,EAAahC,OAAO,CAACE,IAAI,AAChC,CAAA,EAGJ4B,AAZU,IAAI,CAYR3B,KAAK,CAAG2B,AAZJ,IAAI,CAYMG,OAAO,CAAC9B,KAAK,CAAGX,EAAMsC,AAZhC,IAAI,CAYkCF,MAAM,CAACK,OAAO,CAAC9B,KAAK,CAAE6B,GAE9E,CAKA,SAASgB,EAAuBC,CAAI,EAChC,IAAM9C,EAAQ8C,EAAKA,IAAI,CAAC,EAAE,CAAErE,EAAOqE,EAAKA,IAAI,CAAC,EAAE,CAAEC,EAAUD,EAAKA,IAAI,CAAC,EAAE,CAAEE,EAAc,IAAI,CAACA,UAAU,EAAI,EACtGnD,EAAUG,EAAMH,OAAO,CAAEoD,EAAQ,UAMrC,GAJkC,KAAA,IAAvBjD,EAAMkD,YAAY,EAAoBzD,GAC7CI,CAAAA,EAAUJ,CAAQ,CAACO,EAAMkD,YAAY,CAAC,AAAD,EAGrC,CAACrD,EACD,MAAO,CAAA,EAGX,GAAIA,EAAQsD,KAAK,EACb,AAAwB,UAAxB,OAAOtD,EAAQE,IAAI,EACnBF,EAAQE,IAAI,EAAIF,EAAQE,IAAI,CAACjC,CAAC,CAAE,CAMhC,IAAIsF,EAAcL,EAAQM,UAAU,EAChCN,EAAQM,UAAU,CAACb,YAAY,CAAC,SACpCY,EAAcA,GACVA,EAAY5B,OAAO,CAAC,qBAAuB,GAG3C3B,CAAAA,AAAmB,UAAnBA,EAAQkC,MAAM,EAAgBlC,AAAoB,UAApBA,EAAQmC,OAAO,AAAW,GACxDsB,EAAgC1E,IAAI,CAAC,CAAE2E,QAAS,CAAER,QAASA,CAAQ,CAAE,EAAGlD,GAOxEuD,CAAAA,GAAe,CAACvD,EAAQ0B,EAAE,AAAD,GAGzB1B,CAAAA,AADAA,CAAAA,EAAUR,EAAM,CAAC,EAAGQ,EAAO,EACnB0B,EAAE,CAAG,sBAAwByB,EAAa,IAC9C5C,EAAeP,GAAWO,EAAeP,EAAS,CAAA,EAAI,EAI9D,IAAI,CAAC2D,UAAU,CAAC3D,EAAS,CAAC,IAAI,CAAC4D,SAAS,EAAInE,EAAKO,EAAQ6D,SAAS,CAAE,IAAI,CAACC,eAAe,CAAE,CAAEC,SAAU,GAAI,IAC1GX,EAAQ,CAAC,IAAI,EAAE,IAAI,CAACR,GAAG,CAAC,CAAC,EAAE5C,EAAQ0B,EAAE,CAAI,CAAA,IAAI,CAACkC,SAAS,CAAG,UAAY,EAAC,EAAG,CAAC,CAAC,AAChF,MAGIR,EAAQpD,EAAQG,KAAK,EAAIiD,EAS7B,OANAF,EAAQc,YAAY,CAACpF,EAAMwE,GAE3BjD,EAAMiB,QAAQ,CAAG,WACb,OAAOgC,CACX,EAEO,CAAA,CACX,CAKA,SAASa,IACL,IAAMC,EAAa,IAAI,CAACC,KAAK,CAACD,UAAU,CACxC,GAAI,IAAI,CAACE,WAAW,EAAIF,GAAc,CAAC,IAAI,CAACC,KAAK,CAACE,WAAW,CACzD,IAAK,IAAMvC,KAAS,IAAI,CAACC,MAAM,CAAE,CAC7B,IAAMC,EAAeF,EAAMG,OAAO,EAAIH,EAAMG,OAAO,CAAC9B,KAAK,CACrD6B,GACAA,EAAahC,OAAO,GAKhBkE,GACA,CAAEpC,CAAAA,EAAMwC,SAAS,EACbxC,EAAMwC,SAAS,CAAClE,KAAK,EACrB0B,EAAMwC,SAAS,CAACjE,MAAM,AAAD,GACzB2B,EACKhC,OAAO,CAACkC,MAAM,CAAG,QACtBF,EACKhC,OAAO,CAACmC,OAAO,CAAG,SAGvBL,EAAMyC,0BAA0B,CAACvC,EAAahC,OAAO,EAGjE,CAER,CAmBA,SAASyD,EAAgCzD,CAAO,EAC5C,GAAIA,EAAQI,KAAK,EAAIJ,EAAQK,MAAM,CAC/B,OAEJ,IAAMmE,EAAO,IAAI,CAACd,OAAO,EAAK,CAAA,IAAI,CAACA,OAAO,CAACe,OAAO,EAC9C,IAAI,CAACf,OAAO,CAACe,OAAO,CAAC,CAAA,IACrB,IAAI,CAACf,OAAO,CAACR,OAAO,EAChB,IAAI,CAACQ,OAAO,CAACR,OAAO,CAACuB,OAAO,EAAC,GAAM,CAAC,EAAGH,EAAY,IAAI,CAACA,SAAS,CASzE,GAPIA,IACAE,EAAKpE,KAAK,CAAGkE,EAAUlE,KAAK,EAAIoE,EAAKpE,KAAK,CAC1CoE,EAAKnE,MAAM,CAAGiE,EAAUjE,MAAM,EAAImE,EAAKnE,MAAM,CAC7CmE,EAAKE,CAAC,CAAGJ,EAAUI,CAAC,EAAIF,EAAKE,CAAC,CAC9BF,EAAKG,CAAC,CAAGL,EAAUK,CAAC,EAAIH,EAAKG,CAAC,EAG9B3E,EAAQsD,KAAK,CAAE,CAIf,GAAI,CAACkB,EAAKpE,KAAK,EAAI,CAACoE,EAAKnE,MAAM,CAAE,CAC7BL,EAAQkC,MAAM,CAAG,QACjBlC,EAAQmC,OAAO,CAAG,QAElB,IAAMyC,EAAS,IAAI,CAAChD,MAAM,CAACuC,KAAK,CAACU,OAAO,EACpC,IAAI,CAACjD,MAAM,CAACuC,KAAK,CAACU,OAAO,CAACC,eAAe,GAAGF,MAAM,CAClDvF,EAAQuF,IAAWA,EAAS,GAC5B5E,CAAAA,EAAQ+E,SAAS,CAAG,CAAA,CAAG,EAE3B,MACJ,CAEI/E,EAAQgF,WAAW,GACnBR,EAAKQ,WAAW,CAAGR,EAAKpE,KAAK,CAAGoE,EAAKnE,MAAM,CACvCL,EAAQgF,WAAW,CAAGR,EAAKQ,WAAW,CAEtCR,EAAKS,WAAW,CAAGT,EAAKnE,MAAM,CAAGL,EAAQgF,WAAW,CAIpDR,EAAKU,YAAY,CAAGV,EAAKpE,KAAK,CAAGJ,EAAQgF,WAAW,EAK5DhF,EAAQkC,MAAM,CAAGlC,EAAQI,KAAK,EAC1BY,KAAKmE,IAAI,CAACX,EAAKS,WAAW,EAAIT,EAAKpE,KAAK,EAC5CJ,EAAQmC,OAAO,CAAGnC,EAAQK,MAAM,EAC5BW,KAAKmE,IAAI,CAACX,EAAKU,YAAY,EAAIV,EAAKnE,MAAM,CAClD,CAGKL,EAAQI,KAAK,GACdJ,EAAQoF,EAAE,CAAGpF,EAAQ0E,CAAC,EAAI,EAC1B1E,EAAQoF,EAAE,EAAIZ,EAAKE,CAAC,CAAG1D,KAAKqE,KAAK,CAACb,EAAKS,WAAW,CAC9CjE,KAAKsE,GAAG,CAACd,EAAKS,WAAW,CAAGT,EAAKpE,KAAK,EAAI,EAC1C,IAEHJ,EAAQK,MAAM,GACfL,EAAQuF,EAAE,CAAGvF,EAAQ2E,CAAC,EAAI,EAC1B3E,EAAQuF,EAAE,EAAIf,EAAKG,CAAC,CAAG3D,KAAKqE,KAAK,CAACb,EAAKU,YAAY,CAC/ClE,KAAKsE,GAAG,CAACd,EAAKU,YAAY,CAAGV,EAAKnE,MAAM,EAAI,EAC5C,GAEZ,CAkBA,SAASmF,EAAmBvD,CAAO,CAAE4B,CAAS,EAC1C,IAAM4B,EAAUhG,EAAKoE,EAAW,CAAA,GAAO6B,EAAmBxG,EAAWuG,GAAUtF,EAAQ8B,EAAQ9B,KAAK,EAAI,UAA0DE,EAAS4B,EAAQ5B,MAAM,EACpL,CAAA,AAA2B,UAA3B,OAAO4B,EAAQE,OAAO,CAAgBF,EAAQE,OAAO,CAAG,CAAA,GADiG,GAK3I/B,EAAQ6B,EAAQ7B,KAAK,EACnC,CAAA,AAA0B,UAA1B,OAAO6B,EAAQC,MAAM,CAAgBD,EAAQC,MAAM,CAAG,CAAA,GANmG,GAQ1JyD,EAASjE,EAAKO,EAAQP,EAAE,CAAExB,EAc9B,GAbI,CAACwB,IACD,IAAI,CAACkE,SAAS,CAAG,IAAI,CAACA,SAAS,EAAI,EACnClE,EAAM,sBACF,IAAI,CAACkE,SAAS,CACd,IACC,CAAA,IAAI,CAACzC,UAAU,EAAI,CAAA,EACxB,EAAE,IAAI,CAACyC,SAAS,EAEhB,IAAI,CAAChC,SAAS,EACdlC,CAAAA,GAAM,SAAQ,EAGlB,IAAI,CAACF,MAAM,CAAG,IAAI,CAACA,MAAM,EAAI,EAAE,CAC3B,IAAI,CAACA,MAAM,CAACG,OAAO,CAACD,GAAM,GAC1B,OAGJ,IAAI,CAACF,MAAM,CAACvB,IAAI,CAACyB,GAEjB,IAAMmE,EAAQ,CACVnE,GAAIA,EACJoE,aAAc,iBACdC,oBAAqB9D,EAAQ8D,mBAAmB,EAAI,iBACpD3F,MAAOA,EACPC,OAAQA,EACRqE,EAAGzC,EAAQmD,EAAE,EAAInD,EAAQyC,CAAC,EAAI,EAC9BC,EAAG1C,EAAQsD,EAAE,EAAItD,EAAQ0C,CAAC,EAAI,CAClC,CACI1C,CAAAA,EAAQ8C,SAAS,GACjBc,EAAMvF,gBAAgB,CAAG,eACrB2B,EAAQ3B,gBAAgB,EACxB2B,CAAAA,EAAQ3B,gBAAgB,EAAI,eAAc,GAG9C2B,EAAQ3B,gBAAgB,EACxBuF,CAAAA,EAAMvF,gBAAgB,CAAG2B,EAAQ3B,gBAAgB,AAAD,EAEpD,IAAMN,EAAU,IAAI,CAACgG,aAAa,CAAC,WAAWC,IAAI,CAACJ,GAAOK,GAAG,CAAC,IAAI,CAACC,IAAI,EAIvE,GAFAnG,EAAQ0B,EAAE,CAAGA,EAETO,EAAQ/B,IAAI,CAAE,CAKd,GAJAA,EAAOjB,IAA6CmH,QAAQ,CAACnE,EAAQ/B,IAAI,EACrE+B,EAAQ/B,IAAI,CACZ,CAAEjC,EAAGgE,EAAQ/B,IAAI,AAAC,EAElB+B,EAAQoE,eAAe,CAAE,KArDRC,EAAAA,EAsDZrE,EAAQoE,eAAe,CAtDF,IAAI,CACjCE,IAAI,CAAC,EAAG,EAAGnG,EAAOC,GAClB4F,IAAI,CAAC,CAAEK,KAAAA,CAAK,GACZJ,GAAG,CAAClG,EAoDL,CAEA2F,EAAU,CACN,EAAKzF,EAAKjC,CAAC,AACf,EACK,IAAI,CAACuI,UAAU,GAChBb,EAAQc,MAAM,CAAGvG,EAAKuG,MAAM,EAAItG,EAChCwF,CAAO,CAAC,eAAe,CAAGlG,EAAKS,EAAKwG,WAAW,CAAE,GACjDf,EAAQW,IAAI,CAAGpG,EAAKoG,IAAI,EAAI,QAE5BpG,EAAKyG,SAAS,EACdhB,CAAAA,EAAQgB,SAAS,CAAGzG,EAAKyG,SAAS,AAAD,EAErC,IAAI,CAACX,aAAa,CAAC,QAAQC,IAAI,CAACN,GAASO,GAAG,CAAClG,GAC7CA,EAAQG,KAAK,CAAGA,CAEpB,MACS8B,EAAQqB,KAAK,GACdmC,EACA,IAAI,CAACnC,KAAK,CAACrB,EAAQqB,KAAK,CAAE,EAAG,EAAGlD,EAAOC,EAAQ,WAE3C,IAAI,CAACoF,OAAO,CAAC,CACTmB,QAASnH,EAAKwC,EAAQ2E,OAAO,CAAE,EACnC,EAAGlB,GACHhG,EAAY,IAAI,CAACwD,OAAO,CAAE,OAC9B,GAAG+C,IAAI,CAAC,CAAEW,QAAS,CAAE,GAAGV,GAAG,CAAClG,GAG5B,IAAI,CAACsD,KAAK,CAACrB,EAAQqB,KAAK,CAAE,EAAG,EAAGlD,EAAOC,GAAQ6F,GAAG,CAAClG,IAY3D,OARMiC,EAAQqB,KAAK,EAAImC,GAAY,AAA2B,KAAA,IAApBxD,EAAQ2E,OAAO,EACrD,EAAE,CAACrE,OAAO,CAACxD,IAAI,CAACiB,EAAQkD,OAAO,CAAC2D,UAAU,CAAE,AAACC,IACzCA,EAAM9C,YAAY,CAAC,UAAW/B,EAAQ2E,OAAO,CACjD,GAGJ,IAAI,CAAC/D,eAAe,CAAG,IAAI,CAACA,eAAe,EAAI,CAAC,EAChD,IAAI,CAACA,eAAe,CAACnB,EAAG,CAAG1B,EACpBA,CACX,CAKA,SAAS+G,EAAmBC,CAAO,EAC/B,IAAMC,EAAW,IAAI,CAAChF,OAAO,CAAC9B,KAAK,AAE/B8G,CAAAA,GACAA,EAASjH,OAAO,EAChB,CAACiH,EAASjH,OAAO,CAACG,KAAK,EACvB,OAAO,IAAI,CAAC8B,OAAO,CAAC9B,KAAK,CAEzB6G,EAAQE,KAAK,CAAC,IAAI,CAAE,EAAE,CAACC,KAAK,CAACpI,IAAI,CAACqI,UAAW,IAE7CH,EAASjH,OAAO,CAACG,KAAK,CAClB,IAAI,CAACA,KAAK,CACd,IAAI,CAACA,KAAK,CAAG,IAAI,CAAC8B,OAAO,CAAC9B,KAAK,CAAG8G,GAIlCD,EAAQE,KAAK,CAAC,IAAI,CAAE,EAAE,CAACC,KAAK,CAACpI,IAAI,CAACqI,UAAW,GAErD,CAMA,SAASC,IAGL,GAAI,CAACzF,AAFU,IAAI,CAEPuC,KAAK,EAAEU,QACf,OAEJ,IAA4BtD,EAAW4C,AAAzBvC,AALC,IAAI,CAKEuC,KAAK,CAAmB5C,QAAQ,CAAE3B,EAAW2B,EAASsB,eAAe,AAEtFtB,CAAAA,EAASC,MAAM,EAAEX,QAAUjB,GAG3BgC,AAVW,IAAI,CAURG,MAAM,CAACN,MAAM,CAAC,SAAU6F,CAAC,QAG5B,EAAKxF,AAFSwF,EAEH5D,OAAO,EAGX,AAAC5B,CAAAA,AALMwF,EAKA5D,OAAO,CAACR,OAAO,CAACqE,YAAY,CAAC,SACvCzF,AANUwF,EAMJ5D,OAAO,CAACR,OAAO,CAACqE,YAAY,CAAC,UACnCzF,AAPUwF,EAOJ5D,OAAO,CAACR,OAAO,CAACqE,YAAY,CAAC,SAAQ,GAC3C,CAACzF,AARSwF,EAQHrF,OAAO,CAAC9B,KAAK,EAAEH,SAASsD,OAC/B,CAAC,CAACxB,AATQwF,EASFE,KAAK,EAAEC,QACf,CAAC,CAAC3F,AAVQwF,EAUFE,KAAK,EAAE5C,MACvB,GAEK8C,GAAG,CAAC,SAAUJ,CAAC,EAShB,MAAO,CACH5F,GAPO,AAACI,CAAAA,AAFEwF,EAEI5D,OAAO,EAAER,QAAQP,aAAa,SAC5Cb,AAHUwF,EAGJ5D,OAAO,EAAER,QAAQP,aAAa,UACpCb,AAJUwF,EAIJ5D,OAAO,EAAER,QAAQP,aAAa,WAAa,EAAC,EACjDtB,OAAO,CAACE,EAASqB,GAAG,CAAE,IACtBvB,OAAO,CAAC,QAAS,IACjBA,OAAO,CAAC,IAAK,IAGdqD,EAAG5C,AAVOwF,EAUDE,KAAK,EAAEC,QAAU,EAC1B9C,EAAG7C,AAXOwF,EAWDE,KAAK,EAAE5C,QAAU,CAC9B,CACJ,GAEKnD,MAAM,CAAC,SAAUkG,CAAS,CAAEC,CAAK,CAAEC,CAAG,EACvC,MAAOF,AAAiB,KAAjBA,EAAUjG,EAAE,EACfiG,AAAgD,KAAhDA,EAAUjG,EAAE,CAACC,OAAO,CAAC,wBACrB,CAACkG,EAAIC,IAAI,CAAC,SAAUC,CAAS,CAAEC,CAAU,EACrC,OAAOD,EAAUrG,EAAE,GAAKiG,EAAUjG,EAAE,EAAIsG,EAAaJ,CACzD,EACR,GACKrF,OAAO,CAAC,SAAUoF,CAAS,EAC5B,IAAMjG,EAAKiG,EAAUjG,EAAE,AACvB9B,CAAAA,CAAQ,CAAC8B,EAAG,CAAC+F,MAAM,CAAG,EAAIE,EAAUjD,CAAC,CACrC9E,CAAQ,CAAC8B,EAAG,CAACkD,MAAM,CAAG,EAAI+C,EAAUhD,CAAC,CACrC/E,CAAQ,CAAC8B,EAAG,CAACuG,eAAe,CAAC,mBACjC,EAER,CA8HA,IAAMC,EAA2DvK,EAAwD,OAAU,CAACwK,KAAK,CACzI,IAAIC,EAAgExK,EAAoBC,CAAC,CAACqK,GAE1F,IAAMG,EAAoE1K,EAAwD,OAAU,CAAC2K,cAAc,CAC3J,IAAIC,EAAyE3K,EAAoBC,CAAC,CAACwK,GAYnG,GAAM,CAAEhJ,QAASmJ,CAA0B,CAAE,CAAIvJ,IAyDdwJ,EAAsB,CAAEC,mBArD3D,SAA4BxF,CAAO,CAAEyF,CAAW,CAAEvI,CAAK,CAAEC,CAAM,CAAEuI,EAAc,CAAC,EAC5E,IAAMtC,EAAOpD,GAAWA,EAAQ+C,IAAI,CAAC,QAAS4C,EAAQvC,GAAQA,EAAKuC,KAAK,CAAC,kBACzE,GAAIA,EAAO,CACP,IAAMC,EAAcC,SAASC,aAAa,CAAC,CAAC,EAAEH,CAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAC7D,GAAIC,EAAa,CACb,IAAItE,EAAOsE,EAAYrE,OAAO,GAG9B,GAAID,AAAe,IAAfA,EAAKpE,KAAK,CAAQ,CAClB,IAAM6I,EAASH,EAAYI,aAAa,CAExChG,EAAQ3B,QAAQ,CAAC4H,GAAG,CAACC,WAAW,CAACN,GACjCtE,EAAOsE,EAAYrE,OAAO,GAC1BwE,EAAOG,WAAW,CAACN,EACvB,CACA,IAAIrB,EAAS,EAAKjD,CAAAA,EAAKpE,KAAK,CAAGwI,CAAU,EACnChE,EAAS+D,EAActI,EAASmE,EAAKnE,MAAM,CAAE2E,EAAcR,EAAKpE,KAAK,CAAGoE,EAAKnE,MAAM,CAAEgJ,EAAmBjJ,EAAQuI,EAAajE,EAAI,CAACF,EAAKpE,KAAK,CAAG,EACjJ4E,EAAcqE,GACd5B,CAAAA,EAASA,EAASzC,EAAcqE,CAAe,EAEnDP,EAAY9E,YAAY,CAAC,eAAgB4E,EAAexI,CAAAA,EAAQqH,CAAK,GACrEqB,EAAY9E,YAAY,CAAC,YACrB,CAAC,uBAAM,EAAEyD,EAAO,CAAC,EAAE7C,EAClB,YAAU,EAAEF,EAAIkE,EAAcnB,EAAS,EAAE,EAAE,EAAE,CAACjD,EAAKG,CAAC,CAAC,CAAC,CAD1B,CAErC,CACJ,CACJ,EA2B+E2E,kBAT/E,SAA2BC,CAAW,CAAEC,CAAK,EACzC,IAAMC,EAAWD,EAAMrF,KAAK,CAACsF,QAAQ,CACjCA,GACAF,EAAYtD,IAAI,CAAC,CACbyD,SAAUD,AAAW,KAAXA,EACVhC,OAAQgC,EAAW,GAAK,CAC5B,EAER,EACkGE,gBAvBlG,SAAyBH,CAAK,CAAEI,CAAK,EACjC,IAAIvJ,EAASmJ,EAAMK,GAAG,CAAElF,EAAI,EAK5B,OAJIiF,GAASpB,EAA2BoB,EAAM3I,GAAG,IAC7C0D,EAAI6E,EAAMM,QAAQ,CAACF,EAAM3I,GAAG,CAAE,CAAA,GAC9BZ,EAASmJ,EAAMK,GAAG,CAAGlF,GAElB,CACHtE,OAAAA,EACAsE,EAAAA,CACJ,CACJ,CAakH,EAc5GoF,EAAc,AAACxB,IAA6DyB,WAAW,CAACC,MAAM,CAACpL,SAAS,CAACqL,UAAU,CACnH,CAAExB,mBAAoByB,CAAiC,CAAER,gBAAiBS,CAA8B,CAAE,CAAG3B,EA4BhF4B,EAtBnC,cAA6BN,EAMzBO,UAAW,CAEP,KAAK,CAACA,SAASpD,KAAK,CADN,IAAI,CACUE,WAC5B,IAAMxF,EAASE,AAFD,IAAI,CAEGF,MAAM,CAAE2I,EAAQ3I,EAAOK,OAAO,CAACsI,KAAK,CACzD,GAAIzI,AAHU,IAAI,CAGR4B,OAAO,EAAI5B,AAHP,IAAI,CAGSwC,SAAS,EAAIiG,EAAO,CAC3C,IAAMX,EAAQW,CAAK,CAACzI,AAJV,IAAI,CAIY8F,KAAK,CAC3B2C,EAAM1J,MAAM,CAAC,CACjBsJ,EAAkCrI,AANxB,IAAI,CAM0B4B,OAAO,CAAE0G,EAA+BxI,EAAO4H,KAAK,CAAEI,GAAOvJ,MAAM,CAAEyB,AANnG,IAAI,CAMqGwC,SAAS,CAAClE,KAAK,EAAI,EAAG0B,AAN/H,IAAI,CAMiIwC,SAAS,CAACjE,MAAM,EAAImK,IAAU1I,AANnK,IAAI,CAMqKF,MAAM,CAACK,OAAO,CAAC2G,WAAW,EAAI,EACrN,CACJ,CACJ,EASM6B,EAA4D9M,EAAwD,OAAU,CAAC+M,MAAM,CAC3I,IAAIC,EAAiE/M,EAAoBC,CAAC,CAAC4M,GAE3F,IAAMG,EAA+DjN,EAAwD,OAAU,CAACkN,SAAS,CACjJ,IAAIC,EAAoElN,EAAoBC,CAAC,CAAC+M,GAE9F,IAAMG,EAAiEpN,EAAwD,OAAU,CAACqN,WAAW,CACrJ,IAAIC,EAAsErN,EAAoBC,CAAC,CAACkN,GA4BhG,IAAMG,EAAe,AAAC3C,IAA6DyB,WAAW,CAACC,MAAM,CACrGkB,AAnRoB,CAAA,CAChBC,QAxjBJ,SAAiBC,CAAU,CAAEC,CAAW,CAAEC,CAAgB,EACtD,IAAMC,EAAaF,EAAYzM,SAAS,CAACqL,UAAU,CAAEuB,EAAaD,EAAW3M,SAAS,AACjF4M,CAAAA,EAAWlH,0BAA0B,GACtCnF,EAASiM,EAAY,YAAa/J,GAClClC,EAASiM,EAAY,SAAUhJ,GAC/B9C,EAAOkM,EAAY,CACflH,2BAA4Bd,CAChC,GACArE,EAASoM,EAAY,YAAazI,GAClC3D,EAASkM,EAAa,SAAUrH,GAChCtE,EAAK2L,EAAYzM,SAAS,CAAE,WAAYkI,GAExC3H,EAASkM,EAAa,cAAejE,GACrCjI,EAASkM,EAAa,kBAAmBjE,GACzC9H,EAAOgM,EAAiB1M,SAAS,CAAE,CAC/B8E,WAAY6B,CAChB,GACApG,EAASmM,EAAkB,eAAgBvI,GAEnD,EAsiBIpD,SAAAA,CACJ,CAAA,EAgRuBwL,OAAO,CAAEhD,IAAsDuC,IAAuDM,KAC7I,GAAM,CAAE/L,WAAYwM,CAA0B,CAAE,CAAIzM,IAC9C,CAAE0K,gBAAiBgC,CAA+B,CAAErC,kBAAmBsC,CAAiC,CAAElD,mBAAoBmD,CAAkC,CAAE,CAAGpD,EACrK,CAAErJ,SAAU0M,CAAwB,CAAEzM,QAAS0M,CAAuB,CAAEvM,MAAOwM,CAAqB,CAAEC,WAAAA,CAAU,CAAExM,KAAMyM,CAAoB,CAAE,CAAIjN,GAexJ,OAAMkN,UAAwBjB,EAkB1BzF,QAAQ2G,CAAI,CAAE,CACV,GAAM,CAAEjI,MAAAA,CAAK,CAAEqD,MAAAA,CAAK,CAAE,CAAG,IAAI,CAAE3D,EAAY6H,EAA2B,IAAI,CAACzJ,OAAO,CAAC4B,SAAS,EAE5FwI,EAAmB,CACf,IAAI,CAACC,gBAAgB,GACrBzI,EAAUE,QAAQ,CAClBF,EAAU0I,MAAM,CAChB1I,EAAU2I,KAAK,CAClB,CAACC,IAAI,CAAC,KACHC,EAAoBvI,EAAMwI,WAAW,CAACN,EAAiB,CAE3D,GAAID,GAAQ5E,EAAO,CACf,IAAMoF,EAAUzI,EAAM0I,UAAU,CAAC,IAAI,EAEhCH,IACDE,EAAQjI,CAAC,CAAGiI,EAAQvM,MAAM,CAC1BuM,EAAQvM,MAAM,CAAG,EACjBqM,EAAoBvI,EAAM5C,QAAQ,CAACuL,QAAQ,CAACF,GAC5CzI,EAAMwI,WAAW,CAACN,EAAiB,CAAGK,GAE1ClF,EAAMuF,IAAI,CAACL,EAEf,MACK,GAAIA,GAEL,CAACA,EAAkBM,QAAQ,CAAC,wBAAyB,CACrD,IAAMC,EAAW9I,EAAM0I,UAAU,CAAC,IAAI,EACtCH,EACKQ,QAAQ,CAAC,wBACTzH,OAAO,CAACwH,EAAUpJ,EAC3B,CACJ,CACAsJ,kBAAmB,CAAE,CACrBC,oBAAqB,CAAE,CACvBC,aAAavL,CAAK,CAAE,CAChB,IAAMuL,EAAe,KAAK,CAACA,aAAanG,KAAK,CAAC,IAAI,CAAEE,WAAyDmD,EAAQ+C,AAArC,IAAI,CAACrL,OAAO,CAAuCsI,KAAK,CACxI,GAAIzI,GAASA,EAAMwC,SAAS,EAAIiG,EAAO,CACnC,IAAMX,EAAQW,CAAK,CAACzI,EAAM8F,KAAK,CAAG2C,EAAM1J,MAAM,CAAC,CAAE,CAAE8D,EAAAA,CAAC,CAAEtE,OAAAA,CAAM,CAAE,CAAGsL,EAAgC/J,AAFE,IAAI,CAEC4H,KAAK,CAAEI,GAAQ2D,EAAU3D,EAAMxL,UAAU,AAE7ImP,CAAAA,IAAYzL,EAAMyL,OAAO,EACzBzL,EAAMyL,OAAO,CAAGA,EAChBF,EAAa/G,IAAI,CAAG,CAChBtG,QAAS,CACLE,KAAM,CACFjC,EAAGsP,EACHjH,KAAM+G,EAAa/G,IAAI,CACvBI,YAAa2G,CAAY,CAAC,eAAe,CACzC5G,OAAQ4G,EAAa5G,MAAM,AAC/B,EACA/B,EAAG5C,EAAMwC,SAAS,CAACI,CAAC,CACpBC,EAAGA,EACHvE,MAAO0B,EAAMwC,SAAS,CAAClE,KAAK,EAAI,EAChCC,OAAQA,EACR0F,oBAAqB,oBACrBM,gBAAiB,OACjBlG,MAAO,SACX,CACJ,GAEK2B,EAAMyL,OAAO,EAAIzL,EAAM4B,OAAO,EACnC,OAAO2J,EAAa/G,IAAI,AAEhC,CAGA,OAFA,OAAO+G,EAAa5G,MAAM,CAC1B,OAAO4G,EAAa3G,WAAW,CACxB2G,CACX,CAIAG,aAAc,CACV,IAAMC,EAAW,KAAK,CAACD,YAAYtG,KAAK,CAAC,IAAI,CAAEE,WAA2BmD,EAAQ3I,AAAd,IAAI,CAAiBK,OAAO,CAACsI,KAAK,CAUtG,OATIA,GACAA,EAAMhI,OAAO,CAAC,SAAUrC,CAAI,EACpB6L,EAAwB7L,EAAKe,GAAG,GAChC8K,EAAwB0B,EAASC,OAAO,GACxCxN,EAAKe,GAAG,CAAGwM,EAASC,OAAO,EAC3BD,CAAAA,EAASC,OAAO,CAAGxN,EAAKe,GAAG,AAAD,CAElC,GAEGwM,CACX,CACJ,CAwDA,SAASE,EAAkBC,CAAK,EAE5B,IAAMC,EAAYtP,OACbuP,IAAI,CAACF,EAAM7L,MAAM,EACjBN,MAAM,CAAC,AAAC6F,GAAMA,EAAEyG,KAAK,CAAC,KAAKlN,MAAM,CAAG,GAAImN,EAAYJ,EAAMK,IAAI,CAAC9J,KAAK,CAACvC,MAAM,CAAEsM,EAAgBL,EAAUnG,GAAG,CAAC,AAACrJ,GAAQ8P,WAAW9P,EAAI0P,KAAK,CAAC,IAAI,CAAC,EAAE,GACjJK,EAAc,GAClBF,EAAc3L,OAAO,CAAC,AAACqF,IACfoG,CAAS,CAACpG,EAAM,EAAIoG,CAAS,CAACpG,EAAM,CAAC/F,OAAO,EAC5CuM,CAAAA,EAAcxG,CAAI,CAE1B,GACA,IAAMhG,EAASgM,EAAMK,IAAI,CAAC9J,KAAK,CAACvC,MAAM,CAACwM,EAAY,CACnD,GAAIxM,GACAA,EAAOyM,EAAE,CAAC,cACVT,EAAMK,IAAI,CAACK,OAAO,IAClB1M,EAAO2M,KAAK,CAACD,OAAO,GAAI,CACxB,IAAMC,EAAQ3M,EAAO2M,KAAK,CAAEtM,EAAU2L,EAAMK,IAAI,CAAChM,OAAO,CAAEkC,EAAQyJ,EAAMK,IAAI,CAAC9J,KAAK,CAAEqK,EAAcZ,EAAMa,MAAM,CAAEC,EAAUH,EAAMzE,QAAQ,CAAC8D,EAAMlJ,CAAC,CAAE,CAAA,GAAOA,EAAIP,EAAMsF,QAAQ,CAAG8E,EAAM1E,GAAG,CAAG6E,EAAUA,EAASnE,EAAQ3I,EAAOK,OAAO,CAACsI,KAAK,EAAI,EAAE,CAAE3C,EAAQgG,EAAMlJ,CAAC,CAAG6F,EAAM1J,MAAM,CAAE+I,EAAQW,CAAK,CAAC3C,EAAM,CAAExH,EAAQwB,EAAO+M,gBAAgB,EAClU/M,EAAO+M,gBAAgB,GAAGvO,KAAK,CAAE,CAAEC,OAAAA,CAAM,CAAEsE,EAAAA,CAAC,CAAE,CAAGgH,EAAgC/J,EAAO4H,KAAK,CAAEI,GAAQgF,EAAgB3M,EAAQuM,WAAW,CAAE9H,EAAcwF,EAAqB0C,GAAiBA,EAAchG,WAAW,CAAEhH,EAAOK,OAAO,CAAC2G,WAAW,CAAE,GAC3P,GAAI,CAAC4F,GACDI,GACAA,EAAcC,OAAO,EACrBjF,EACKgE,EAAMrE,WAAW,EAClBqE,CAAAA,EAAMrE,WAAW,CAAGpF,EAAM5C,QAAQ,CAACuN,CAAC,CAAC,gBAChC5I,GAAG,EAAC,EAEb0H,EAAMrE,WAAW,CAACtD,IAAI,CAAC,CACnB8I,WAAY5K,EAAMsF,QAAQ,CACtBmE,EAAMK,IAAI,CAACe,GAAG,CAAGT,EAAMS,GAAG,CAC9BC,WAAY9K,EAAMsF,QAAQ,CACtB8E,EAAMS,GAAG,CAAGpB,EAAMK,IAAI,CAACe,GAAG,AAClC,GACApB,EAAMa,MAAM,CAAGtK,EAAM5C,QAAQ,CAACgF,IAAI,CAAC7B,EAAGC,EAAGvE,EAAOC,GAC3C4F,IAAI,CAAC,CACNK,KAAM,CACFtG,QAAS,CACLE,KAAM,CACFjC,EAAG2L,EAAMxL,UAAU,CACnBkI,KAAMsI,EAAczO,KAAK,EACrB,UACJuG,YAAaA,EACbD,OAAQmI,EAAcM,WAAW,EAC7B,aACR,EACAxK,EAAGA,EACHC,EAAGA,EACHvE,MAAOA,EACPC,OAAQA,EACR0F,oBAAqB,oBACrBM,gBAAiB,OACjBlG,MAAO,SACX,CACJ,CACJ,GACK+F,GAAG,CAAC0H,EAAMrE,WAAW,EAC1BqC,EAAkCgC,EAAMrE,WAAW,CAAEqE,EAAMK,IAAI,EAC/DpC,EAAmC+B,EAAMa,MAAM,CAAEpO,EAAQD,EAAOC,EAAQqG,GACxEkH,EAAMuB,SAAS,CAACvN,EAAOwN,YAAY,EAAI,EAAGxN,EAAOyN,IAAI,EAAI,QAExD,GAAIb,GAAeZ,EAAMrE,WAAW,CAAE,CACvCiF,EAAY/I,OAAO,CAAC,CAChBf,EAAAA,EACAC,EAAAA,EACAvE,MAAAA,EACAC,OAAAA,CACJ,GACA,IAAyCiG,EAAOkI,EAAYvI,IAAI,CAAC,QAAS4C,EAAQvC,GAAQA,EAAKuC,KAAK,CAA7E,kBACnBA,GAAS1E,EAAM5C,QAAQ,CAACsB,eAAe,EACvCsB,EAAM5C,QAAQ,CAACsB,eAAe,CAACgG,CAAK,CAAC,EAAE,CAAC1B,KAAK,CAAC,GAAG,CAC5C1B,OAAO,CAAC,CACTf,EAAAA,EACAC,EAAAA,EACAvE,MAAAA,EACAC,OAAAA,CACJ,GAEJuN,EAAMrE,WAAW,CAAC9D,OAAO,CAAC,CACtBsJ,WAAY5K,EAAMsF,QAAQ,CACtBmE,EAAMK,IAAI,CAACe,GAAG,CAAGT,EAAMS,GAAG,CAC9BC,WAAY9K,EAAMsF,QAAQ,CACtB8E,EAAMS,GAAG,CAAGpB,EAAMK,IAAI,CAACe,GAAG,AAClC,GACApD,EAAkCgC,EAAMrE,WAAW,CAAEqE,EAAMK,IAAI,EAC/DpC,EAAmC2C,EAAanO,EAAQD,EAAOC,EAAQqG,GACvEkH,EAAMuB,SAAS,CAACvN,EAAOwN,YAAY,EAAI,EAAGxN,EAAOyN,IAAI,EAAI,EAC7D,CACJ,MACSzB,EAAMa,MAAM,EAAIb,EAAMrE,WAAW,GACtCqE,EAAMa,MAAM,CAAC3L,OAAO,GACpB8K,EAAMa,MAAM,CAAG,KAAK,EACpBb,EAAMrE,WAAW,CAACzG,OAAO,GACzB8K,EAAMrE,WAAW,CAAG,KAAK,EAEjC,CAIA,SAAS+F,EAAanL,CAAK,CAAEoL,CAAQ,EAC7BpL,EAAMqL,IAAI,EACVrL,EAAMqL,IAAI,CAACjN,OAAO,CAAC,SAAU0L,CAAI,EACxBA,EAAKwB,QAAQ,EAKlBxD,EAFegC,EAAKwB,QAAQ,CAACC,MAAM,CAEhB,SAAUC,CAAI,EAC7B1D,EAAW0D,EAAM,SAAU/B,CAAK,EAC5B2B,EAAS3B,EACb,EACJ,EACJ,EAER,CAiBA,SAASgC,GAAuBzL,CAAK,EACjCmL,EAAanL,EAAO,SAAUyJ,CAAK,EAC3BA,EAAMa,MAAM,EAAIb,EAAMrE,WAAW,GACjCqE,EAAMa,MAAM,CAAC3L,OAAO,GACpB8K,EAAMrE,WAAW,CAACzG,OAAO,GACzB,OAAO8K,EAAMa,MAAM,CACnB,OAAOb,EAAMrE,WAAW,CAEhC,EACJ,CA5LA4C,EAAgB0D,cAAc,CAAG7D,EAAsBd,EAAa2E,cAAc,CAmBlF,CACIjH,YAAa,CACjB,GAMAkD,EAAyBK,EAAiB,cAAe,WACrD,IAAMvK,EAAS,IAAI,CAAE2I,EAAQ3I,EAAOK,OAAO,CAACsI,KAAK,CAAEuF,EAAiB,iBACpElO,EAAOG,MAAM,CAACQ,OAAO,CAAC,SAAUT,CAAK,EACjC,GAAIA,EAAM4B,OAAO,EAAI5B,EAAMwC,SAAS,EAAIiG,EAAO,CAC3C,IAAMX,EAAQW,CAAK,CAACzI,EAAM8F,KAAK,CAAG2C,EAAM1J,MAAM,CAAC,CAAEyF,EAAOxE,EAAM4B,OAAO,CAACuC,IAAI,CAAC,QAAS4C,EAAQvC,GAAQA,EAAKuC,KAAK,CAACiH,GAAiB,CAAEnL,EAAAA,CAAC,CAAEtE,OAAAA,CAAM,CAAE,CAAGsL,EAAgC/J,EAAO4H,KAAK,CAAEI,GAC9L,GAAIf,GAASjH,EAAOuC,KAAK,CAAC5C,QAAQ,CAACsB,eAAe,CAAE,CAChD,IAAMkN,EAAiBnO,EAAOuC,KAAK,CAAC5C,QAAQ,CAACsB,eAAe,CAACgG,CAAK,CAAC,EAAE,CAAC1B,KAAK,CAAC,GAAG,CAC3E4I,GACAA,EAAetK,OAAO,CAAC,CACnBf,EAAG5C,EAAMwC,SAAS,CAACI,CAAC,CACpBC,EAAGA,EACHvE,MAAO0B,EAAMwC,SAAS,CAAClE,KAAK,EAAI,EAChCC,OAAQA,CACZ,EAER,CACAwL,EAAmC/J,EAAM4B,OAAO,CAAEiI,EAAgC/J,EAAO4H,KAAK,CAAEI,GAAOvJ,MAAM,CAAEyB,EAAMwC,SAAS,CAAClE,KAAK,EAAI,EAAG0B,EAAMwC,SAAS,CAACjE,MAAM,EAAImK,IAAU5I,EAAOK,OAAO,CAAC2G,WAAW,EAAI,EACjN,CACJ,EACJ,GAqHAkD,EAA0B1D,IAAqD,SAAU,WACrFkH,EAAa,IAAI,CAAE3B,EACvB,GACA7B,EAA0BhB,IAAyD,iBAAkB,SAAUkF,CAAC,EAC5G,GAAI,IAAI,CAACvB,MAAM,CAAE,CACb,GAAM,CAAEtK,MAAAA,CAAK,CAAE0F,IAAAA,CAAG,CAAE,CAAG,IAAI,CAACoE,IAAI,CAAE,CAAEgC,QAAAA,CAAO,CAAE7P,MAAAA,CAAK,CAAE,CAAG4P,EAAGjB,EAAa5K,EAAMsF,QAAQ,CAAGwG,EAAU9L,EAAMoK,KAAK,CAAC,EAAE,CAAC1E,GAAG,CAAGoG,EAAShB,EAAa9K,EAAMsF,QAAQ,CAAG,CAACI,EAAM,EACrK,IAAI,CAAC4E,MAAM,CAACxI,IAAI,CAAC,CACb8I,WAAAA,EACAE,WAAAA,CACJ,GACA,IAAI,CAACR,MAAM,CAAChJ,OAAO,CAAC,CAAErF,MAAAA,CAAM,EAChC,CACJ,GAeA0L,EAA0B1D,IAAqD,iBAAkB,WAC7FwH,GAAuB,IAAI,CAC/B,GACA9D,EAA0B1D,IAAqD,eAAgB,WAC3FwH,GAAuB,IAAI,CAC/B,GACAzD,EAAgBtN,SAAS,CAACqL,UAAU,CAAGG,EACvC9B,IAA4D2H,kBAAkB,CAAC,YAAa/D,GAoL/D,IAAMgE,GAAkBlR,WAE5CkR,MAAiBC,OAAO"}