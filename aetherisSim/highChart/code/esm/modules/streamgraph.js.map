{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v12.2.0 (2025-04-07)\n * @module highcharts/modules/streamgraph\n * @requires highcharts\n *\n * Streamgraph module\n *\n * (c) 2010-2025 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\nimport * as __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__ from \"../highcharts.js\";\n/******/ // The require scope\n/******/ var __webpack_require__ = {};\n/******/ \n/************************************************************************/\n/******/ /* webpack/runtime/compat get default export */\n/******/ (() => {\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = (module) => {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t() => (module['default']) :\n/******/ \t\t\t() => (module);\n/******/ \t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\treturn getter;\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/define property getters */\n/******/ (() => {\n/******/ \t// define getter functions for harmony exports\n/******/ \t__webpack_require__.d = (exports, definition) => {\n/******/ \t\tfor(var key in definition) {\n/******/ \t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/hasOwnProperty shorthand */\n/******/ (() => {\n/******/ \t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ })();\n/******/ \n/************************************************************************/\n\n;// external [\"../highcharts.js\",\"default\"]\nconst external_highcharts_src_js_default_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"];\nvar external_highcharts_src_js_default_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_namespaceObject);\n;// external [\"../highcharts.js\",\"default\",\"SeriesRegistry\"]\nconst external_highcharts_src_js_default_SeriesRegistry_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].SeriesRegistry;\nvar external_highcharts_src_js_default_SeriesRegistry_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_SeriesRegistry_namespaceObject);\n;// ./code/es-modules/Series/Streamgraph/StreamgraphSeriesDefaults.js\n/* *\n *\n *  Streamgraph module\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A streamgraph is a type of stacked area graph which is displaced around a\n * central axis, resulting in a flowing, organic shape.\n *\n * @sample {highcharts|highstock} highcharts/demo/streamgraph/\n *         Streamgraph\n *\n * @extends      plotOptions.areaspline\n * @since        6.0.0\n * @product      highcharts highstock\n * @requires     modules/streamgraph\n * @optionparent plotOptions.streamgraph\n */\nconst StreamgraphSeriesDefaults = {\n    /**\n     * @see [fillColor](#plotOptions.streamgraph.fillColor)\n     * @see [fillOpacity](#plotOptions.streamgraph.fillOpacity)\n     *\n     * @apioption plotOptions.streamgraph.color\n     */\n    /**\n     * @see [color](#plotOptions.streamgraph.color)\n     * @see [fillOpacity](#plotOptions.streamgraph.fillOpacity)\n     *\n     * @apioption plotOptions.streamgraph.fillColor\n     */\n    /**\n     * @see [color](#plotOptions.streamgraph.color)\n     * @see [fillColor](#plotOptions.streamgraph.fillColor)\n     *\n     * @apioption plotOptions.streamgraph.fillOpacity\n     */\n    fillOpacity: 1,\n    lineWidth: 0,\n    marker: {\n        enabled: false\n    },\n    stacking: 'stream'\n};\n/**\n * A `streamgraph` series. If the [type](#series.streamgraph.type) option is not\n * specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.streamgraph\n * @excluding dataParser, dataURL, step, boostThreshold, boostBlending\n * @product   highcharts highstock\n * @requires  modules/streamgraph\n * @apioption series.streamgraph\n */\n/**\n * @see [fillColor](#series.streamgraph.fillColor)\n * @see [fillOpacity](#series.streamgraph.fillOpacity)\n *\n * @apioption series.streamgraph.color\n */\n/**\n * An array of data points for the series. For the `streamgraph` series type,\n * points can be given in the following ways:\n *\n * 1. An array of numerical values. In this case, the numerical values will be\n *    interpreted as `y` options. The `x` values will be automatically\n *    calculated, either starting at 0 and incremented by 1, or from\n *    `pointStart` and `pointInterval` given in the series options. If the axis\n *    has categories, these will be used. Example:\n *    ```js\n *    data: [0, 5, 3, 5]\n *    ```\n *\n * 2. An array of arrays with 2 values. In this case, the values correspond to\n *    `x,y`. If the first value is a string, it is applied as the name of the\n *    point, and the `x` value is inferred.\n *    ```js\n *        data: [\n *            [0, 9],\n *            [1, 7],\n *            [2, 6]\n *        ]\n *    ```\n *\n * 3. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.area.turboThreshold),\n *    this option is not available.\n *    ```js\n *        data: [{\n *            x: 1,\n *            y: 9,\n *            name: \"Point2\",\n *            color: \"#00FF00\"\n *        }, {\n *            x: 1,\n *            y: 6,\n *            name: \"Point1\",\n *            color: \"#FF00FF\"\n *        }]\n *    ```\n *\n * @sample {highcharts} highcharts/chart/reflow-true/\n *         Numerical values\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<number|Array<(number|string),(number|null)>|null|*>}\n * @extends   series.line.data\n * @product   highcharts highstock\n * @apioption series.streamgraph.data\n */\n/**\n * @see [color](#series.streamgraph.color)\n * @see [fillOpacity](#series.streamgraph.fillOpacity)\n *\n * @apioption series.streamgraph.fillColor\n */\n/**\n * @see [color](#series.streamgraph.color)\n * @see [fillColor](#series.streamgraph.fillColor)\n *\n * @type      {number}\n * @default   1\n * @apioption series.streamgraph.fillOpacity\n */\n''; // Keeps doclets above separate\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Streamgraph_StreamgraphSeriesDefaults = (StreamgraphSeriesDefaults);\n\n;// ./code/es-modules/Series/Streamgraph/StreamgraphSeries.js\n/* *\n *\n *  Streamgraph module\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { areaspline: AreaSplineSeries } = (external_highcharts_src_js_default_SeriesRegistry_default()).seriesTypes;\n\n\nconst { addEvent, merge, extend } = (external_highcharts_src_js_default_default());\n/**\n * Streamgraph series type\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.streamgraph\n *\n * @augments Highcharts.Series\n */\nclass StreamgraphSeries extends AreaSplineSeries {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    // Modifier function for stream stacks. It simply moves the point up or\n    // down in order to center the full stack vertically.\n    streamStacker(pointExtremes, stack, i) {\n        // Y bottom value\n        pointExtremes[0] -= stack.total / 2;\n        // Y value\n        pointExtremes[1] -= stack.total / 2;\n        // Record the Y data for use when getting axis extremes. Register only\n        // the max. This is picked up in the `afterGetExtremes` event, and the\n        // dataMin property is reflected.\n        if (this.stackedYData) {\n            this.stackedYData[i] = Math.max.apply(0, pointExtremes);\n        }\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nStreamgraphSeries.defaultOptions = merge(AreaSplineSeries.defaultOptions, Streamgraph_StreamgraphSeriesDefaults);\n// Reflect the dataMin property, as only dataMax is registered above\naddEvent(StreamgraphSeries, 'afterGetExtremes', (e) => {\n    e.dataExtremes.dataMin = -e.dataExtremes.dataMax;\n});\nextend(StreamgraphSeries.prototype, {\n    negStacks: false\n});\nexternal_highcharts_src_js_default_SeriesRegistry_default().registerSeriesType('streamgraph', StreamgraphSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Streamgraph_StreamgraphSeries = ((/* unused pure expression or super */ null && (StreamgraphSeries)));\n\n;// ./code/es-modules/masters/modules/streamgraph.js\n\n\n\n\n/* harmony default export */ const streamgraph_src = ((external_highcharts_src_js_default_default()));\n\nexport { streamgraph_src as default };\n"],"names":["__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__","__webpack_require__","n","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","external_highcharts_src_js_default_namespaceObject","external_highcharts_src_js_default_default","external_highcharts_src_js_default_SeriesRegistry_namespaceObject","SeriesRegistry","external_highcharts_src_js_default_SeriesRegistry_default","areaspline","AreaSplineSeries","seriesTypes","addEvent","merge","extend","StreamgraphSeries","streamStacker","pointExtremes","stack","i","total","stackedYData","Math","max","apply","defaultOptions","fillOpacity","lineWidth","marker","enabled","stacking","e","dataExtremes","dataMin","dataMax","negStacks","registerSeriesType","streamgraph_src","default"],"mappings":"AAWA,UAAYA,MAA6D,sBAAuB,CAEvF,IAAIC,EAAsB,CAAC,CAM1BA,CAAAA,EAAoBC,CAAC,CAAG,AAACC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,UAAU,CACvC,IAAOF,EAAO,OAAU,CACxB,IAAOA,EAER,OADAF,EAAoBK,CAAC,CAACF,EAAQ,CAAEG,EAAGH,CAAO,GACnCA,CACR,EAMAH,EAAoBK,CAAC,CAAG,CAACE,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXR,EAAoBU,CAAC,CAACF,EAAYC,IAAQ,CAACT,EAAoBU,CAAC,CAACH,EAASE,IAC5EE,OAAOC,cAAc,CAACL,EAASE,EAAK,CAAEI,WAAY,CAAA,EAAMC,IAAKN,CAAU,CAACC,EAAI,AAAC,EAGhF,EAKAT,EAAoBU,CAAC,CAAG,CAACK,EAAKC,IAAUL,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,EAAKC,GAM5F,IAAMI,EAAqDrB,EAAwD,OAAU,CAC7H,IAAIsB,EAA0DrB,EAAoBC,CAAC,CAACmB,GAEpF,IAAME,EAAoEvB,EAAwD,OAAU,CAACwB,cAAc,CAC3J,IAAIC,EAAyExB,EAAoBC,CAAC,CAACqB,GAyKnG,GAAM,CAAEG,WAAYC,CAAgB,CAAE,CAAG,AAACF,IAA6DG,WAAW,CAG5G,CAAEC,SAAAA,CAAQ,CAAEC,MAAAA,CAAK,CAAEC,OAAAA,CAAM,CAAE,CAAIT,GAUrC,OAAMU,UAA0BL,EAQ5BM,cAAcC,CAAa,CAAEC,CAAK,CAAEC,CAAC,CAAE,CAEnCF,CAAa,CAAC,EAAE,EAAIC,EAAME,KAAK,CAAG,EAElCH,CAAa,CAAC,EAAE,EAAIC,EAAME,KAAK,CAAG,EAI9B,IAAI,CAACC,YAAY,EACjB,CAAA,IAAI,CAACA,YAAY,CAACF,EAAE,CAAGG,KAAKC,GAAG,CAACC,KAAK,CAAC,EAAGP,EAAa,CAE9D,CACJ,CAMAF,EAAkBU,cAAc,CAAGZ,EAAMH,EAAiBe,cAAc,CAhLtC,CAmB9BC,YAAa,EACbC,UAAW,EACXC,OAAQ,CACJC,QAAS,CAAA,CACb,EACAC,SAAU,QACd,GAyJAlB,EAASG,EAAmB,mBAAoB,AAACgB,IAC7CA,EAAEC,YAAY,CAACC,OAAO,CAAG,CAACF,EAAEC,YAAY,CAACE,OAAO,AACpD,GACApB,EAAOC,EAAkBd,SAAS,CAAE,CAChCkC,UAAW,CAAA,CACf,GACA3B,IAA4D4B,kBAAkB,CAAC,cAAerB,GAajE,IAAMsB,EAAoBhC,WAE9CgC,KAAmBC,OAAO"}