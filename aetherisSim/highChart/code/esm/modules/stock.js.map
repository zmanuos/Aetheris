{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v12.2.0 (2025-04-07)\n * @module highcharts/modules/stock\n * @requires highcharts\n *\n * Highcharts Stock as a plugin for Highcharts\n *\n * (c) 2010-2025 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\nimport * as __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__ from \"../highcharts.js\";\nimport * as __WEBPACK_EXTERNAL_MODULE__broken_axis_src_js_5f3d6d24__ from \"./broken-axis.js\";\nimport * as __WEBPACK_EXTERNAL_MODULE__datagrouping_src_js_902e97be__ from \"./datagrouping.js\";\nimport * as __WEBPACK_EXTERNAL_MODULE__mouse_wheel_zoom_src_js_c5a2afed__ from \"./mouse-wheel-zoom.js\";\n/******/ // The require scope\n/******/ var __webpack_require__ = {};\n/******/ \n/************************************************************************/\n/******/ /* webpack/runtime/compat get default export */\n/******/ (() => {\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = (module) => {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t() => (module['default']) :\n/******/ \t\t\t() => (module);\n/******/ \t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\treturn getter;\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/define property getters */\n/******/ (() => {\n/******/ \t// define getter functions for harmony exports\n/******/ \t__webpack_require__.d = (exports, definition) => {\n/******/ \t\tfor(var key in definition) {\n/******/ \t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/hasOwnProperty shorthand */\n/******/ (() => {\n/******/ \t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ })();\n/******/ \n/************************************************************************/\n\n;// external [\"../highcharts.js\",\"default\"]\nconst external_highcharts_src_js_default_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"];\nvar external_highcharts_src_js_default_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_namespaceObject);\n;// external [\"../highcharts.js\",\"default\",\"Axis\"]\nconst external_highcharts_src_js_default_Axis_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Axis;\nvar external_highcharts_src_js_default_Axis_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Axis_namespaceObject);\n;// external [\"../highcharts.js\",\"default\",\"Point\"]\nconst external_highcharts_src_js_default_Point_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Point;\nvar external_highcharts_src_js_default_Point_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Point_namespaceObject);\n;// external [\"../highcharts.js\",\"default\",\"Series\"]\nconst external_highcharts_src_js_default_Series_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Series;\nvar external_highcharts_src_js_default_Series_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Series_namespaceObject);\n;// ./code/es-modules/Series/DataModifyComposition.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { tooltipFormatter: pointTooltipFormatter } = (external_highcharts_src_js_default_Point_default()).prototype;\n\n\nconst { addEvent, arrayMax, arrayMin, correctFloat, defined, isArray, isNumber, isString, pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Composition\n *\n * */\nvar DataModifyComposition;\n(function (DataModifyComposition) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Extends the series, axis and point classes with\n     * compare and cumulative support.\n     *\n     * @private\n     *\n     * @param SeriesClass\n     * Series class to use.\n     *\n     * @param AxisClass\n     * Axis class to extend.\n     *\n     * @param PointClass\n     * Point class to use.\n     */\n    function compose(SeriesClass, AxisClass, PointClass) {\n        const axisProto = AxisClass.prototype, pointProto = PointClass.prototype, seriesProto = SeriesClass.prototype;\n        if (!seriesProto.setCompare) {\n            seriesProto.setCompare = seriesSetCompare;\n            seriesProto.setCumulative = seriesSetCumulative;\n            addEvent(SeriesClass, 'afterInit', afterInit);\n            addEvent(SeriesClass, 'afterGetExtremes', afterGetExtremes);\n            addEvent(SeriesClass, 'afterProcessData', afterProcessData);\n        }\n        if (!axisProto.setCompare) {\n            axisProto.setCompare = axisSetCompare;\n            axisProto.setModifier = setModifier;\n            axisProto.setCumulative = axisSetCumulative;\n            pointProto.tooltipFormatter = tooltipFormatter;\n        }\n        return SeriesClass;\n    }\n    DataModifyComposition.compose = compose;\n    /* ********************************************************************** *\n     *  Start shared compare and cumulative logic                             *\n     * ********************************************************************** */\n    /**\n     * Shared code for the axis.setCompare() and the axis.setCumulative()\n     * methods. Inits the 'compare' or the 'cumulative' mode.\n     * @private\n     */\n    function setModifier(mode, modeState, redraw) {\n        if (!this.isXAxis) {\n            this.series.forEach(function (series) {\n                if (mode === 'compare' &&\n                    typeof modeState !== 'boolean') {\n                    series.setCompare(modeState, false);\n                }\n                else if (mode === 'cumulative' &&\n                    !isString(modeState)) {\n                    series.setCumulative(modeState, false);\n                }\n            });\n            if (pick(redraw, true)) {\n                this.chart.redraw();\n            }\n        }\n    }\n    /**\n     * Extend the tooltip formatter by adding support for the point.change\n     * variable as well as the changeDecimals option.\n     *\n     * @ignore\n     * @function Highcharts.Point#tooltipFormatter\n     *\n     * @param {string} pointFormat\n     */\n    function tooltipFormatter(pointFormat) {\n        const point = this, { numberFormatter } = point.series.chart, replace = function (value) {\n            pointFormat = pointFormat.replace('{point.' + value + '}', (point[value] > 0 && value === 'change' ? '+' : '') +\n                numberFormatter(point[value], pick(point.series.tooltipOptions.changeDecimals, 2)));\n        };\n        if (defined(point.change)) {\n            replace('change');\n        }\n        if (defined(point.cumulativeSum)) {\n            replace('cumulativeSum');\n        }\n        return pointTooltipFormatter.apply(this, [pointFormat]);\n    }\n    /**\n     * Extend series.init by adding a methods to modify the y values used\n     * for plotting on the y axis. For compare mode, this method is called both\n     * from the axis when finding dataMin and dataMax,\n     * and from the series.translate method.\n     *\n     * @ignore\n     * @function Highcharts.Series#init\n     */\n    function afterInit() {\n        const compare = this.options.compare;\n        let dataModify;\n        if (compare === 'percent' ||\n            compare === 'value' ||\n            this.options.cumulative) {\n            dataModify = new Additions(this);\n            if (compare === 'percent' || compare === 'value') {\n                // Set comparison mode\n                dataModify.initCompare(compare);\n            }\n            else {\n                // Set Cumulative Sum mode\n                dataModify.initCumulative();\n            }\n        }\n        this.dataModify = dataModify;\n    }\n    /**\n     * Adjust the extremes (compare and cumulative modify the data).\n     * @private\n     */\n    function afterGetExtremes(e) {\n        const dataExtremes = e.dataExtremes, activeYData = dataExtremes.activeYData;\n        if (this.dataModify && dataExtremes) {\n            let extremes;\n            if (this.options.compare) {\n                extremes = [\n                    this.dataModify.modifyValue(dataExtremes.dataMin),\n                    this.dataModify.modifyValue(dataExtremes.dataMax)\n                ];\n            }\n            else if (this.options.cumulative &&\n                isArray(activeYData) &&\n                // If only one y visible, sum doesn't change\n                // so no need to change extremes\n                activeYData.length >= 2) {\n                extremes = Additions.getCumulativeExtremes(activeYData);\n            }\n            if (extremes) {\n                dataExtremes.dataMin = arrayMin(extremes);\n                dataExtremes.dataMax = arrayMax(extremes);\n            }\n        }\n    }\n    /* ********************************************************************** *\n     *  End shared compare and cumulative logic                               *\n     * ********************************************************************** */\n    /* ********************************************************************** *\n     *  Start value compare logic                                             *\n     * ********************************************************************** */\n    /**\n     * Highcharts Stock only. Set the\n     * [compare](https://api.highcharts.com/highstock/plotOptions.series.compare)\n     * mode of the series after render time.\n     * In most cases it is more useful running\n     * {@link Axis#setCompare} on the X axis to update all its series.\n     *\n     * @function Highcharts.Series#setCompare\n     *\n     * @param {string|null} [compare]\n     *        Can be one of `undefined` (default), `null`, `\"percent\"`\n     *        or `\"value\"`.\n     *\n     * @param {boolean} [redraw=true]\n     *        Whether to redraw the chart or to wait for a later call to\n     *        {@link Chart#redraw}.\n     */\n    function seriesSetCompare(compare, redraw) {\n        // Survive to export, #5485 (and for options generally)\n        this.options.compare = this.userOptions.compare = compare;\n        // Fire series.init() that will set or delete series.dataModify\n        this.update({}, pick(redraw, true));\n        if (this.dataModify && (compare === 'value' || compare === 'percent')) {\n            this.dataModify.initCompare(compare);\n        }\n        else {\n            // When disabling, clear the points\n            this.points.forEach((point) => {\n                delete point.change;\n            });\n        }\n    }\n    /**\n     * Extend series.processData by finding the first y value in the plot area,\n     * used for comparing the following values\n     *\n     * @ignore\n     * @function Highcharts.Series#processData\n     */\n    function afterProcessData() {\n        const series = this, \n        // For series with more than one value (range, OHLC etc), compare\n        // against close or the pointValKey (#4922, #3112, #9854)\n        compareColumn = this.getColumn((series.pointArrayMap &&\n            (series.options.pointValKey || series.pointValKey)) || 'y', true);\n        if (series.xAxis && // Not pies\n            compareColumn.length &&\n            series.dataModify) {\n            const processedXData = series.getColumn('x', true), length = series.dataTable.rowCount, compareStart = series.options.compareStart === true ? 0 : 1;\n            // Find the first value for comparison\n            for (let i = 0; i < length - compareStart; i++) {\n                const compareValue = compareColumn[i];\n                if (isNumber(compareValue) &&\n                    compareValue !== 0 &&\n                    processedXData[i + compareStart] >= (series.xAxis.min || 0)) {\n                    series.dataModify.compareValue = compareValue;\n                    break;\n                }\n            }\n        }\n    }\n    /**\n     * Highcharts Stock only. Set the compare mode on all series\n     * belonging to a Y axis.\n     *\n     * @see [plotOptions.series.compare](https://api.highcharts.com/highstock/plotOptions.series.compare)\n     *\n     * @sample stock/members/axis-setcompare/\n     *         Set compare\n     *\n     * @function Highcharts.Axis#setCompare\n     *\n     * @param {string|null} [compare]\n     *        The compare mode. Can be one of `undefined` (default), `null`,\n     *        `\"value\"` or `\"percent\"`.\n     *\n     * @param {boolean} [redraw=true]\n     *        Whether to redraw the chart or to wait for a later call to\n     *        {@link Chart#redraw}.\n     */\n    function axisSetCompare(compare, redraw) {\n        this.setModifier('compare', compare, redraw);\n    }\n    /* ********************************************************************** *\n     *  End value compare logic                                               *\n     * ********************************************************************** */\n    /* ********************************************************************** *\n     *  Start Cumulative Sum logic, author: Rafal Sebestjanski                *\n     * ********************************************************************** */\n    /**\n     * Highcharts Stock only. Set the\n     * [cumulative](https://api.highcharts.com/highstock/plotOptions.series.cumulative)\n     * mode of the series after render time.\n     * In most cases it is more useful running\n     * {@link Axis#setCumulative} on the Y axis to update all its series.\n     *\n     * @function Highcharts.Series#setCumulative\n     *\n     * @param {boolean} [cumulative=false]\n     *        Either enable or disable Cumulative Sum mode.\n     *        Can be one of `false` (default) or `true`.\n     *\n     * @param {boolean} [redraw=true]\n     *        Whether to redraw the chart or to wait for a later call to\n     *        {@link Chart#redraw}.\n     */\n    function seriesSetCumulative(cumulative, redraw) {\n        // Set default value to false\n        cumulative = pick(cumulative, false);\n        // Survive to export, #5485 (and for options generally)\n        this.options.cumulative = this.userOptions.cumulative = cumulative;\n        // Fire series.init() that will set or delete series.dataModify\n        this.update({}, pick(redraw, true));\n        // If should, turn on the Cumulative Sum mode\n        if (this.dataModify) {\n            this.dataModify.initCumulative();\n        }\n        else {\n            // When disabling, clear the points\n            this.points.forEach((point) => {\n                delete point.cumulativeSum;\n            });\n        }\n    }\n    /**\n     * Highcharts Stock only. Set the cumulative mode on all series\n     * belonging to a Y axis.\n     *\n     * @see [plotOptions.series.cumulative](https://api.highcharts.com/highstock/plotOptions.series.cumulative)\n     *\n     * @sample stock/members/axis-setcumulative/\n     *         Set cumulative\n     *\n     * @function Highcharts.Axis#setCumulative\n     *\n     * @param {boolean} [cumulative]\n     *        Whether to disable or enable the cumulative mode.\n     *        Can be one of `undefined` (default, treated as `false`),\n     *        `false` or `true`.\n     *\n     * @param {boolean} [redraw=true]\n     *        Whether to redraw the chart or to wait for a later call to\n     *        {@link Chart#redraw}.\n     */\n    function axisSetCumulative(cumulative, redraw) {\n        this.setModifier('cumulative', cumulative, redraw);\n    }\n    /* *\n     *\n     *  Classes\n     *\n     * */\n    /**\n     * @private\n     */\n    class Additions {\n        /* *\n         *\n         *  Constructors\n         *\n         * */\n        /**\n         * @private\n         */\n        constructor(series) {\n            this.series = series;\n        }\n        /* *\n        *\n        *  Functions\n        *\n        * */\n        /**\n         * @private\n         */\n        modifyValue() {\n            return 0;\n        }\n        /**\n         * @ignore\n         * @function Highcharts.Series#getCumulativeExtremes\n         *\n         * @param {Array} [activeYData]\n         *        An array cointaining all the points' y values\n         *        in a visible range.\n         */\n        static getCumulativeExtremes(activeYData) {\n            let cumulativeDataMin = Infinity, cumulativeDataMax = -Infinity;\n            activeYData.reduce((prev, cur) => {\n                const sum = prev + cur;\n                cumulativeDataMin = Math.min(cumulativeDataMin, sum, prev);\n                cumulativeDataMax = Math.max(cumulativeDataMax, sum, prev);\n                return sum;\n            });\n            return [cumulativeDataMin, cumulativeDataMax];\n        }\n        /**\n         * @ignore\n         * @function Highcharts.Series#initCompare\n         *\n         * @param {string} [compare]\n         *        Can be one of `\"percent\"` or `\"value\"`.\n         */\n        initCompare(compare) {\n            // Set the modifyValue method\n            this.modifyValue = function (value, index) {\n                if (value === null) {\n                    value = 0;\n                }\n                const compareValue = this.compareValue;\n                if (typeof value !== 'undefined' &&\n                    typeof compareValue !== 'undefined') { // #2601, #5814\n                    // Get the modified value\n                    if (compare === 'value') {\n                        value -= compareValue;\n                        // Compare percent\n                    }\n                    else {\n                        const compareBase = this.series.options.compareBase;\n                        value = 100 * (value / compareValue) -\n                            (compareBase === 100 ? 0 : 100);\n                    }\n                    // Record for tooltip etc.\n                    if (typeof index !== 'undefined') {\n                        const point = this.series.points[index];\n                        if (point) {\n                            point.change = value;\n                        }\n                    }\n                    return value;\n                }\n                return 0;\n            };\n        }\n        /**\n         * @ignore\n         * @function Highcharts.Series#initCumulative\n         */\n        initCumulative() {\n            // Set the modifyValue method\n            this.modifyValue = function (value, index) {\n                if (value === null) {\n                    value = 0;\n                }\n                if (value !== void 0 && index !== void 0) {\n                    const prevPoint = index > 0 ?\n                        this.series.points[index - 1] : null;\n                    // Get the modified value\n                    if (prevPoint && prevPoint.cumulativeSum) {\n                        value = correctFloat(prevPoint.cumulativeSum + value);\n                    }\n                    // Record for tooltip etc.\n                    const point = this.series.points[index];\n                    const cumulativeStart = point.series.options.cumulativeStart, withinRange = point.x <= this.series.xAxis.max &&\n                        point.x >= this.series.xAxis.min;\n                    if (point) {\n                        if (!cumulativeStart || withinRange) {\n                            point.cumulativeSum = value;\n                        }\n                        else {\n                            point.cumulativeSum = void 0;\n                        }\n                    }\n                    return value;\n                }\n                return 0;\n            };\n        }\n    }\n    DataModifyComposition.Additions = Additions;\n})(DataModifyComposition || (DataModifyComposition = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Series_DataModifyComposition = (DataModifyComposition);\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Compare the values of the series against the first non-null, non-\n * zero value in the visible range. The y axis will show percentage\n * or absolute change depending on whether `compare` is set to `\"percent\"`\n * or `\"value\"`. When this is applied to multiple series, it allows\n * comparing the development of the series against each other. Adds\n * a `change` field to every point object.\n *\n * @see [compareBase](#plotOptions.series.compareBase)\n * @see [Axis.setCompare()](/class-reference/Highcharts.Axis#setCompare)\n * @see [Series.setCompare()](/class-reference/Highcharts.Series#setCompare)\n *\n * @sample {highstock} stock/plotoptions/series-compare-percent/\n *         Percent\n * @sample {highstock} stock/plotoptions/series-compare-value/\n *         Value\n *\n * @type      {string}\n * @since     1.0.1\n * @product   highstock\n * @validvalue [\"percent\", \"value\"]\n * @apioption plotOptions.series.compare\n */\n/**\n * Defines if comparison should start from the first point within the visible\n * range or should start from the last point **before** the range.\n *\n * In other words, this flag determines if first point within the visible range\n * will have 0% (`compareStart=true`) or should have been already calculated\n * according to the previous point (`compareStart=false`).\n *\n * @sample {highstock} stock/plotoptions/series-comparestart/\n *         Calculate compare within visible range\n *\n * @type      {boolean}\n * @default   false\n * @since     6.0.0\n * @product   highstock\n * @apioption plotOptions.series.compareStart\n */\n/**\n * When [compare](#plotOptions.series.compare) is `percent`, this option\n * dictates whether to use 0 or 100 as the base of comparison.\n *\n * @sample {highstock} stock/plotoptions/series-comparebase/\n *         Compare base is 100\n *\n * @type       {number}\n * @default    0\n * @since      5.0.6\n * @product    highstock\n * @validvalue [0, 100]\n * @apioption  plotOptions.series.compareBase\n */\n/**\n * Cumulative Sum feature replaces points' values with the following formula:\n * `sum of all previous points' values + current point's value`.\n * Works only for points in a visible range.\n * Adds the `cumulativeSum` field to each point object that can be accessed\n * e.g. in the [tooltip.pointFormat](https://api.highcharts.com/highstock/tooltip.pointFormat).\n *\n * With `dataGrouping` enabled, default grouping approximation is set to `sum`.\n *\n * @see [Axis.setCumulative()](/class-reference/Highcharts.Axis#setCumulative)\n * @see [Series.setCumulative()](/class-reference/Highcharts.Series#setCumulative)\n *\n * @sample {highstock} stock/plotoptions/series-cumulative-sum/\n *         Cumulative Sum\n *\n * @type      {boolean}\n * @default   false\n * @since 9.3.0\n * @product   highstock\n * @apioption plotOptions.series.cumulative\n */\n/**\n * Defines if cumulation should start from the first point within the visible\n * range or should start from the last point **before** the range.\n *\n * In other words, this flag determines if first point within the visible range\n * will start at 0 (`cumulativeStart=true`) or should have been already calculated\n * according to the previous point (`cumulativeStart=false`).\n *\n * @sample {highstock} stock/plotoptions/series-cumulativestart/\n *         Cumulative Start\n *\n * @type      {boolean}\n * @default   false\n * @since 11.4.2\n * @product   highstock\n * @apioption plotOptions.series.cumulativeStart\n */\n''; // Keeps doclets above in transpiled file\n\n;// ./code/es-modules/Stock/Navigator/ChartNavigatorComposition.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { isTouchDevice } = (external_highcharts_src_js_default_default());\n\nconst { addEvent: ChartNavigatorComposition_addEvent, merge, pick: ChartNavigatorComposition_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\nconst composedMembers = [];\n/* *\n *\n *  Variables\n *\n * */\nlet NavigatorConstructor;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction compose(ChartClass, NavigatorClass) {\n    if (external_highcharts_src_js_default_default().pushUnique(composedMembers, ChartClass)) {\n        const chartProto = ChartClass.prototype;\n        NavigatorConstructor = NavigatorClass;\n        chartProto.callbacks.push(onChartCallback);\n        ChartNavigatorComposition_addEvent(ChartClass, 'afterAddSeries', onChartAfterAddSeries);\n        ChartNavigatorComposition_addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n        ChartNavigatorComposition_addEvent(ChartClass, 'afterUpdate', onChartAfterUpdate);\n        ChartNavigatorComposition_addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n        ChartNavigatorComposition_addEvent(ChartClass, 'beforeShowResetZoom', onChartBeforeShowResetZoom);\n        ChartNavigatorComposition_addEvent(ChartClass, 'update', onChartUpdate);\n    }\n}\n/**\n * Handle adding new series.\n * @private\n */\nfunction onChartAfterAddSeries() {\n    if (this.navigator) {\n        // Recompute which series should be shown in navigator, and add them\n        this.navigator.setBaseSeries(null, false);\n    }\n}\n/**\n * For stock charts, extend the Chart.setChartSize method so that we can set the\n * final top position of the navigator once the height of the chart, including\n * the legend, is determined. #367. We can't use Chart.getMargins, because\n * labels offsets are not calculated yet.\n * @private\n */\nfunction onChartAfterSetChartSize() {\n    const legend = this.legend, navigator = this.navigator;\n    let legendOptions, xAxis, yAxis;\n    if (navigator) {\n        legendOptions = legend && legend.options;\n        xAxis = navigator.xAxis;\n        yAxis = navigator.yAxis;\n        const { scrollbarHeight, scrollButtonSize } = navigator;\n        // Compute the top position\n        if (this.inverted) {\n            navigator.left = navigator.opposite ?\n                this.chartWidth - scrollbarHeight -\n                    navigator.height :\n                this.spacing[3] + scrollbarHeight;\n            navigator.top = this.plotTop + scrollButtonSize;\n        }\n        else {\n            navigator.left = ChartNavigatorComposition_pick(xAxis.left, this.plotLeft + scrollButtonSize);\n            navigator.top = navigator.navigatorOptions.top ||\n                this.chartHeight -\n                    navigator.height -\n                    scrollbarHeight -\n                    (this.scrollbar?.options.margin || 0) -\n                    this.spacing[2] -\n                    (this.rangeSelector && this.extraBottomMargin ?\n                        this.rangeSelector.getHeight() :\n                        0) -\n                    ((legendOptions &&\n                        legendOptions.verticalAlign === 'bottom' &&\n                        legendOptions.layout !== 'proximate' && // #13392\n                        legendOptions.enabled &&\n                        !legendOptions.floating) ?\n                        legend.legendHeight +\n                            ChartNavigatorComposition_pick(legendOptions.margin, 10) :\n                        0) -\n                    (this.titleOffset ? this.titleOffset[2] : 0);\n        }\n        if (xAxis && yAxis) { // False if navigator is disabled (#904)\n            if (this.inverted) {\n                xAxis.options.left = yAxis.options.left = navigator.left;\n            }\n            else {\n                xAxis.options.top = yAxis.options.top = navigator.top;\n            }\n            xAxis.setAxisSize();\n            yAxis.setAxisSize();\n        }\n    }\n}\n/**\n * Initialize navigator, if no scrolling exists yet.\n * @private\n */\nfunction onChartAfterUpdate(event) {\n    if (!this.navigator && !this.scroller &&\n        (this.options.navigator.enabled ||\n            this.options.scrollbar.enabled)) {\n        this.scroller = this.navigator = new NavigatorConstructor(this);\n        if (ChartNavigatorComposition_pick(event.redraw, true)) {\n            this.redraw(event.animation); // #7067\n        }\n    }\n}\n/**\n * Initialize navigator for stock charts\n * @private\n */\nfunction onChartBeforeRender() {\n    const options = this.options;\n    if (options.navigator.enabled ||\n        options.scrollbar.enabled) {\n        this.scroller = this.navigator = new NavigatorConstructor(this);\n    }\n}\n/**\n * For Stock charts. For x only zooming, do not to create the zoom button\n * because X axis zooming is already allowed by the Navigator and Range\n * selector. (#9285)\n * @private\n */\nfunction onChartBeforeShowResetZoom() {\n    const chartOptions = this.options, navigator = chartOptions.navigator, rangeSelector = chartOptions.rangeSelector;\n    if (((navigator && navigator.enabled) ||\n        (rangeSelector && rangeSelector.enabled)) &&\n        ((!isTouchDevice &&\n            this.zooming.type === 'x') ||\n            (isTouchDevice && this.zooming.pinchType === 'x'))) {\n        return false;\n    }\n}\n/**\n * @private\n */\nfunction onChartCallback(chart) {\n    const navigator = chart.navigator;\n    // Initialize the navigator\n    if (navigator && chart.xAxis[0]) {\n        const extremes = chart.xAxis[0].getExtremes();\n        navigator.render(extremes.min, extremes.max);\n    }\n}\n/**\n * Merge options, if no scrolling exists yet\n * @private\n */\nfunction onChartUpdate(e) {\n    const navigatorOptions = (e.options.navigator || {}), scrollbarOptions = (e.options.scrollbar || {});\n    if (!this.navigator && !this.scroller &&\n        (navigatorOptions.enabled || scrollbarOptions.enabled)) {\n        merge(true, this.options.navigator, navigatorOptions);\n        merge(true, this.options.scrollbar, scrollbarOptions);\n        delete e.options.navigator;\n        delete e.options.scrollbar;\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst ChartNavigatorComposition = {\n    compose\n};\n/* harmony default export */ const Navigator_ChartNavigatorComposition = (ChartNavigatorComposition);\n\n;// ./code/es-modules/Core/Axis/NavigatorAxisComposition.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { isTouchDevice: NavigatorAxisComposition_isTouchDevice } = (external_highcharts_src_js_default_default());\n\nconst { addEvent: NavigatorAxisComposition_addEvent, correctFloat: NavigatorAxisComposition_correctFloat, defined: NavigatorAxisComposition_defined, isNumber: NavigatorAxisComposition_isNumber, pick: NavigatorAxisComposition_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction onAxisInit() {\n    const axis = this;\n    if (!axis.navigatorAxis) {\n        axis.navigatorAxis = new NavigatorAxisAdditions(axis);\n    }\n}\n/**\n * For Stock charts, override selection zooming with some special features\n * because X axis zooming is already allowed by the Navigator and Range\n * selector.\n * @private\n */\nfunction onAxisSetExtremes(e) {\n    const axis = this, chart = axis.chart, chartOptions = chart.options, navigator = chartOptions.navigator, navigatorAxis = axis.navigatorAxis, pinchType = chart.zooming.pinchType, rangeSelector = chartOptions.rangeSelector, zoomType = chart.zooming.type;\n    let zoomed;\n    if (axis.isXAxis &&\n        (navigator?.enabled || rangeSelector?.enabled)) {\n        // For y only zooming, ignore the X axis completely\n        if (zoomType === 'y' && e.trigger === 'zoom') {\n            zoomed = false;\n            // For xy zooming, record the state of the zoom before zoom selection,\n            // then when the reset button is pressed, revert to this state. This\n            // should apply only if the chart is initialized with a range (#6612),\n            // otherwise zoom all the way out.\n        }\n        else if (((e.trigger === 'zoom' && zoomType === 'xy') ||\n            (NavigatorAxisComposition_isTouchDevice && pinchType === 'xy')) &&\n            axis.options.range) {\n            const previousZoom = navigatorAxis.previousZoom;\n            // Minimum defined, zooming in\n            if (NavigatorAxisComposition_defined(e.min)) {\n                navigatorAxis.previousZoom = [axis.min, axis.max];\n                // Minimum undefined, resetting zoom\n            }\n            else if (previousZoom) {\n                e.min = previousZoom[0];\n                e.max = previousZoom[1];\n                navigatorAxis.previousZoom = void 0;\n            }\n        }\n    }\n    if (typeof zoomed !== 'undefined') {\n        e.preventDefault();\n    }\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n * @class\n */\nclass NavigatorAxisAdditions {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    static compose(AxisClass) {\n        if (!AxisClass.keepProps.includes('navigatorAxis')) {\n            AxisClass.keepProps.push('navigatorAxis');\n            NavigatorAxisComposition_addEvent(AxisClass, 'init', onAxisInit);\n            NavigatorAxisComposition_addEvent(AxisClass, 'setExtremes', onAxisSetExtremes);\n        }\n    }\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    constructor(axis) {\n        this.axis = axis;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    destroy() {\n        this.axis = void 0;\n    }\n    /**\n     * Add logic to normalize the zoomed range in order to preserve the pressed\n     * state of range selector buttons\n     *\n     * @private\n     * @function Highcharts.Axis#toFixedRange\n     */\n    toFixedRange(pxMin, pxMax, fixedMin, fixedMax) {\n        const axis = this.axis, halfPointRange = (axis.pointRange || 0) / 2;\n        let newMin = NavigatorAxisComposition_pick(fixedMin, axis.translate(pxMin, true, !axis.horiz)), newMax = NavigatorAxisComposition_pick(fixedMax, axis.translate(pxMax, true, !axis.horiz));\n        // Add/remove half point range to/from the extremes (#1172)\n        if (!NavigatorAxisComposition_defined(fixedMin)) {\n            newMin = NavigatorAxisComposition_correctFloat(newMin + halfPointRange);\n        }\n        if (!NavigatorAxisComposition_defined(fixedMax)) {\n            newMax = NavigatorAxisComposition_correctFloat(newMax - halfPointRange);\n        }\n        if (!NavigatorAxisComposition_isNumber(newMin) || !NavigatorAxisComposition_isNumber(newMax)) { // #1195, #7411\n            newMin = newMax = void 0;\n        }\n        return {\n            min: newMin,\n            max: newMax\n        };\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const NavigatorAxisComposition = (NavigatorAxisAdditions);\n\n;// external [\"../highcharts.js\",\"default\",\"Color\"]\nconst external_highcharts_src_js_default_Color_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Color;\nvar external_highcharts_src_js_default_Color_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Color_namespaceObject);\n;// external [\"../highcharts.js\",\"default\",\"SeriesRegistry\"]\nconst external_highcharts_src_js_default_SeriesRegistry_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].SeriesRegistry;\nvar external_highcharts_src_js_default_SeriesRegistry_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_SeriesRegistry_namespaceObject);\n;// ./code/es-modules/Stock/Navigator/NavigatorDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { parse: color } = (external_highcharts_src_js_default_Color_default());\n\nconst { seriesTypes } = (external_highcharts_src_js_default_SeriesRegistry_default());\n/* *\n *\n *  Constants\n *\n * */\n/**\n * The navigator is a small series below the main series, displaying\n * a view of the entire data set. It provides tools to zoom in and\n * out on parts of the data as well as panning across the dataset.\n *\n * @product      highstock gantt\n * @optionparent navigator\n */\nconst NavigatorDefaults = {\n    /**\n     * Whether the navigator and scrollbar should adapt to updated data\n     * in the base X axis. When loading data async, as in the demo below,\n     * this should be `false`. Otherwise new data will trigger navigator\n     * redraw, which will cause unwanted looping. In the demo below, the\n     * data in the navigator is set only once. On navigating, only the main\n     * chart content is updated.\n     *\n     * @sample {highstock} stock/demo/lazy-loading/\n     *         Set to false with async data loading\n     *\n     * @type      {boolean}\n     * @default   true\n     * @apioption navigator.adaptToUpdatedData\n     */\n    /**\n     * An integer identifying the index to use for the base series, or a\n     * string representing the id of the series.\n     *\n     * **Note**: As of Highcharts 5.0, this is now a deprecated option.\n     * Prefer [series.showInNavigator](#plotOptions.series.showInNavigator).\n     *\n     * @see [series.showInNavigator](#plotOptions.series.showInNavigator)\n     *\n     * @deprecated\n     * @type      {number|string}\n     * @default   0\n     * @apioption navigator.baseSeries\n     */\n    /**\n     * Enable or disable the navigator.\n     *\n     * @sample {highstock} stock/navigator/enabled/\n     *         Disable the navigator\n     *\n     * @type      {boolean}\n     * @default   true\n     * @apioption navigator.enabled\n     */\n    /**\n     * When the chart is inverted, whether to draw the navigator on the\n     * opposite side.\n     *\n     * @type      {boolean}\n     * @default   false\n     * @since     5.0.8\n     * @apioption navigator.opposite\n     */\n    /**\n     * The height of the navigator.\n     *\n     * @sample {highstock} stock/navigator/height/\n     *         A higher navigator\n     */\n    height: 40,\n    /**\n     * The distance from the nearest element, the X axis or X axis labels.\n     *\n     * @sample {highstock} stock/navigator/margin/\n     *         A margin of 2 draws the navigator closer to the X axis labels\n     */\n    margin: 22,\n    /**\n     * Whether the mask should be inside the range marking the zoomed\n     * range, or outside. In Highcharts Stock 1.x it was always `false`.\n     *\n     * @sample {highstock} stock/demo/maskinside-false/\n     *         False, mask outside\n     *\n     * @since   2.0\n     */\n    maskInside: true,\n    /**\n     * Options for the handles for dragging the zoomed area.\n     *\n     * @sample {highstock} stock/navigator/handles/\n     *         Colored handles\n     */\n    handles: {\n        /**\n         * Width for handles.\n         *\n         * @sample {highstock} stock/navigator/styled-handles/\n         *         Styled handles\n         *\n         * @since   6.0.0\n         */\n        width: 7,\n        /**\n         * Border radius of the handles.\n         *\n         * @sample {highstock} stock/navigator/handles-border-radius/\n         *      Border radius on the navigator handles.\n         *\n         * @since 11.4.2\n         */\n        borderRadius: 0,\n        /**\n         * Height for handles.\n         *\n         * @sample {highstock} stock/navigator/styled-handles/\n         *         Styled handles\n         *\n         * @since   6.0.0\n         */\n        height: 15,\n        /**\n         * Array to define shapes of handles. 0-index for left, 1-index for\n         * right.\n         *\n         * Additionally, the URL to a graphic can be given on this form:\n         * `url(graphic.png)`. Note that for the image to be applied to\n         * exported charts, its URL needs to be accessible by the export\n         * server.\n         *\n         * Custom callbacks for symbol path generation can also be added to\n         * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n         * used by its method name, as shown in the demo.\n         *\n         * @sample {highstock} stock/navigator/styled-handles/\n         *         Styled handles\n         *\n         * @type    {Array<string>}\n         * @default [\"navigator-handle\", \"navigator-handle\"]\n         * @since   6.0.0\n         */\n        symbols: ['navigator-handle', 'navigator-handle'],\n        /**\n         * Allows to enable/disable handles.\n         *\n         * @since   6.0.0\n         */\n        enabled: true,\n        /**\n         * The width for the handle border and the stripes inside.\n         *\n         * @sample {highstock} stock/navigator/styled-handles/\n         *         Styled handles\n         *\n         * @since     6.0.0\n         * @apioption navigator.handles.lineWidth\n         */\n        lineWidth: 1,\n        /**\n         * The fill for the handle.\n         *\n         * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         */\n        backgroundColor: \"#f2f2f2\" /* Palette.neutralColor5 */,\n        /**\n         * The stroke for the handle border and the stripes inside.\n         *\n         * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         */\n        borderColor: \"#999999\" /* Palette.neutralColor40 */\n    },\n    /**\n     * The color of the mask covering the areas of the navigator series\n     * that are currently not visible in the main series. The default\n     * color is bluish with an opacity of 0.3 to see the series below.\n     *\n     * @see In styled mode, the mask is styled with the\n     *      `.highcharts-navigator-mask` and\n     *      `.highcharts-navigator-mask-inside` classes.\n     *\n     * @sample {highstock} stock/navigator/maskfill/\n     *         Blue, semi transparent mask\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @default rgba(102,133,194,0.3)\n     */\n    maskFill: color(\"#667aff\" /* Palette.highlightColor60 */).setOpacity(0.3).get(),\n    /**\n     * The color of the line marking the currently zoomed area in the\n     * navigator.\n     *\n     * @sample {highstock} stock/navigator/outline/\n     *         2px blue outline\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @default #cccccc\n     */\n    outlineColor: \"#999999\" /* Palette.neutralColor40 */,\n    /**\n     * The width of the line marking the currently zoomed area in the\n     * navigator.\n     *\n     * @see In styled mode, the outline stroke width is set with the\n     *      `.highcharts-navigator-outline` class.\n     *\n     * @sample {highstock} stock/navigator/outline/\n     *         2px blue outline\n     *\n     * @type    {number}\n     */\n    outlineWidth: 1,\n    /**\n     * Options for the navigator series. Available options are the same\n     * as any series, documented at [plotOptions](#plotOptions.series)\n     * and [series](#series).\n     *\n     * Unless data is explicitly defined on navigator.series, the data\n     * is borrowed from the first series in the chart.\n     *\n     * Default series options for the navigator series are:\n     * ```js\n     * series: {\n     *     type: 'areaspline',\n     *     fillOpacity: 0.05,\n     *     dataGrouping: {\n     *         smoothed: true\n     *     },\n     *     lineWidth: 1,\n     *     marker: {\n     *         enabled: false\n     *     }\n     * }\n     * ```\n     *\n     * @see In styled mode, the navigator series is styled with the\n     *      `.highcharts-navigator-series` class.\n     *\n     * @sample {highstock} stock/navigator/series-data/\n     *         Using a separate data set for the navigator\n     * @sample {highstock} stock/navigator/series/\n     *         A green navigator series\n     *\n     * @type {*|Array<*>|Highcharts.SeriesOptionsType|Array<Highcharts.SeriesOptionsType>}\n     */\n    series: {\n        /**\n         * The type of the navigator series.\n         *\n         * Heads up:\n         * In column-type navigator, zooming is limited to at least one\n         * point with its `pointRange`.\n         *\n         * @sample {highstock} stock/navigator/column/\n         *         Column type navigator\n         *\n         * @type    {string}\n         * @default {highstock} `areaspline` if defined, otherwise `line`\n         * @default {gantt} gantt\n         */\n        type: (typeof seriesTypes.areaspline === 'undefined' ?\n            'line' :\n            'areaspline'),\n        /**\n         * The fill opacity of the navigator series.\n         */\n        fillOpacity: 0.05,\n        /**\n         * The pixel line width of the navigator series.\n         */\n        lineWidth: 1,\n        /**\n         * @ignore-option\n         */\n        compare: null,\n        /**\n         * @ignore-option\n         */\n        sonification: {\n            enabled: false\n        },\n        /**\n         * Unless data is explicitly defined, the data is borrowed from the\n         * first series in the chart.\n         *\n         * @type      {Array<number|Array<number|string|null>|object|null>}\n         * @product   highstock\n         * @apioption navigator.series.data\n         */\n        /**\n         * Data grouping options for the navigator series.\n         *\n         * @extends plotOptions.series.dataGrouping\n         */\n        dataGrouping: {\n            approximation: 'average',\n            enabled: true,\n            groupPixelWidth: 2,\n            // Replace smoothed property by anchors, #12455.\n            firstAnchor: 'firstPoint',\n            anchor: 'middle',\n            lastAnchor: 'lastPoint',\n            // Day and week differs from plotOptions.series.dataGrouping\n            units: [\n                ['millisecond', [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],\n                ['second', [1, 2, 5, 10, 15, 30]],\n                ['minute', [1, 2, 5, 10, 15, 30]],\n                ['hour', [1, 2, 3, 4, 6, 8, 12]],\n                ['day', [1, 2, 3, 4]],\n                ['week', [1, 2, 3]],\n                ['month', [1, 3, 6]],\n                ['year', null]\n            ]\n        },\n        /**\n         * Data label options for the navigator series. Data labels are\n         * disabled by default on the navigator series.\n         *\n         * @extends plotOptions.series.dataLabels\n         */\n        dataLabels: {\n            enabled: false,\n            zIndex: 2 // #1839\n        },\n        id: 'highcharts-navigator-series',\n        className: 'highcharts-navigator-series',\n        /**\n         * Sets the fill color of the navigator series.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @apioption navigator.series.color\n         */\n        /**\n         * Line color for the navigator series. Allows setting the color\n         * while disallowing the default candlestick setting.\n         *\n         * @type {Highcharts.ColorString|null}\n         */\n        lineColor: null, // #4602\n        marker: {\n            enabled: false\n        },\n        /**\n         * Since Highcharts Stock v8, default value is the same as default\n         * `pointRange` defined for a specific type (e.g. `null` for\n         * column type).\n         *\n         * In Highcharts Stock version < 8, defaults to 0.\n         *\n         * @extends plotOptions.series.pointRange\n         * @type {number|null}\n         * @apioption navigator.series.pointRange\n         */\n        /**\n         * The threshold option. Setting it to 0 will make the default\n         * navigator area series draw its area from the 0 value and up.\n         *\n         * @type {number|null}\n         */\n        threshold: null\n    },\n    /**\n     * Enable or disable navigator sticking to right, while adding new\n     * points. If `undefined`, the navigator sticks to the axis maximum only\n     * if it was already at the maximum prior to adding points.\n     *\n     * @type      {boolean}\n     * @default   undefined\n     * @since 10.2.1\n     * @sample {highstock} stock/navigator/sticktomax-false/\n     * stickToMax set to false\n     * @apioption navigator.stickToMax\n     */\n    /**\n     * Options for the navigator X axis. Default series options for the\n     * navigator xAxis are:\n     * ```js\n     * xAxis: {\n     *     tickWidth: 0,\n     *     lineWidth: 0,\n     *     gridLineWidth: 1,\n     *     tickPixelInterval: 200,\n     *     labels: {\n     *            align: 'left',\n     *         style: {\n     *             color: '#888'\n     *         },\n     *         x: 3,\n     *         y: -4\n     *     }\n     * }\n     * ```\n     *\n     * @extends   xAxis\n     * @excluding linkedTo, maxZoom, minRange, opposite, range, scrollbar,\n     *            showEmpty, maxRange\n     */\n    xAxis: {\n        /**\n         * Additional range on the right side of the xAxis. Works similar to\n         * `xAxis.maxPadding`, but the value is set in terms of axis values,\n         * percentage or pixels.\n         *\n         * If it's a number, it is interpreted as axis values, which in a\n         * datetime axis equals milliseconds.\n         *\n         * If it's a percentage string, is interpreted as percentages of the\n         * axis length. An overscroll of 50% will make a 100px axis 50px longer.\n         *\n         * If it's a pixel string, it is interpreted as a fixed pixel value, but\n         * limited to 90% of the axis length.\n         *\n         * If it's undefined, the value is inherited from `xAxis.overscroll`.\n         *\n         * Can be set for both, main xAxis and navigator's xAxis.\n         *\n         * @type    {number | string | undefined}\n         * @since   6.0.0\n         * @apioption navigator.xAxis.overscroll\n         */\n        className: 'highcharts-navigator-xaxis',\n        tickLength: 0,\n        lineWidth: 0,\n        gridLineColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n        id: 'navigator-x-axis',\n        gridLineWidth: 1,\n        tickPixelInterval: 200,\n        labels: {\n            align: 'left',\n            /**\n             * @type {Highcharts.CSSObject}\n             */\n            style: {\n                /** @ignore */\n                color: \"#000000\" /* Palette.neutralColor100 */,\n                /** @ignore */\n                fontSize: '0.7em',\n                /** @ignore */\n                opacity: 0.6,\n                /** @ignore */\n                textOutline: '2px contrast'\n            },\n            x: 3,\n            y: -4\n        },\n        crosshair: false\n    },\n    /**\n     * Options for the navigator Y axis. Default series options for the\n     * navigator yAxis are:\n     * ```js\n     * yAxis: {\n     *     gridLineWidth: 0,\n     *     startOnTick: false,\n     *     endOnTick: false,\n     *     minPadding: 0.1,\n     *     maxPadding: 0.1,\n     *     labels: {\n     *         enabled: false\n     *     },\n     *     title: {\n     *         text: null\n     *     },\n     *     tickWidth: 0\n     * }\n     * ```\n     *\n     * @extends   yAxis\n     * @excluding height, linkedTo, maxZoom, minRange, ordinal, range,\n     *            showEmpty, scrollbar, top, units, maxRange, minLength,\n     *            maxLength, resize\n     */\n    yAxis: {\n        className: 'highcharts-navigator-yaxis',\n        gridLineWidth: 0,\n        startOnTick: false,\n        endOnTick: false,\n        minPadding: 0.1,\n        id: 'navigator-y-axis',\n        maxPadding: 0.1,\n        labels: {\n            enabled: false\n        },\n        crosshair: false,\n        title: {\n            text: void 0\n        },\n        tickLength: 0,\n        tickWidth: 0\n    }\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Navigator_NavigatorDefaults = (NavigatorDefaults);\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Maximum range which can be set using the navigator's handles.\n * Opposite of [xAxis.minRange](#xAxis.minRange).\n *\n * @sample {highstock} stock/navigator/maxrange/\n *         Defined max and min range\n *\n * @type      {number}\n * @since     6.0.0\n * @product   highstock gantt\n * @apioption xAxis.maxRange\n */\n(''); // Keeps doclets above in JS file\n\n;// ./code/es-modules/Core/Renderer/SVG/Symbols.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { defined: Symbols_defined, isNumber: Symbols_isNumber, pick: Symbols_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/* eslint-disable require-jsdoc, valid-jsdoc */\n/**\n *\n */\nfunction arc(cx, cy, w, h, options) {\n    const arc = [];\n    if (options) {\n        let start = options.start || 0, end = options.end || 0;\n        const rx = Symbols_pick(options.r, w), ry = Symbols_pick(options.r, h || w), \n        // Subtract a small number to prevent cos and sin of start and end\n        // from becoming equal on 360 arcs (#1561). The size of the circle\n        // affects the constant, therefore the division by `rx`. If the\n        // proximity is too small, the arc disappears. If it is too great, a\n        // gap appears. This can be seen in the animation of the official\n        // bubble demo (#20585).\n        proximity = 0.0002 / (options.borderRadius ? 1 : Math.max(rx, 1)), fullCircle = (Math.abs(end - start - 2 * Math.PI) <\n            proximity);\n        if (fullCircle) {\n            start = Math.PI / 2;\n            end = Math.PI * 2.5 - proximity;\n        }\n        const innerRadius = options.innerR, open = Symbols_pick(options.open, fullCircle), cosStart = Math.cos(start), sinStart = Math.sin(start), cosEnd = Math.cos(end), sinEnd = Math.sin(end), \n        // Proximity takes care of rounding errors around PI (#6971)\n        longArc = Symbols_pick(options.longArc, end - start - Math.PI < proximity ? 0 : 1);\n        let arcSegment = [\n            'A', // ArcTo\n            rx, // X radius\n            ry, // Y radius\n            0, // Slanting\n            longArc, // Long or short arc\n            Symbols_pick(options.clockwise, 1), // Clockwise\n            cx + rx * cosEnd,\n            cy + ry * sinEnd\n        ];\n        arcSegment.params = { start, end, cx, cy }; // Memo for border radius\n        arc.push([\n            'M',\n            cx + rx * cosStart,\n            cy + ry * sinStart\n        ], arcSegment);\n        if (Symbols_defined(innerRadius)) {\n            arcSegment = [\n                'A', // ArcTo\n                innerRadius, // X radius\n                innerRadius, // Y radius\n                0, // Slanting\n                longArc, // Long or short arc\n                // Clockwise - opposite to the outer arc clockwise\n                Symbols_defined(options.clockwise) ? 1 - options.clockwise : 0,\n                cx + innerRadius * cosStart,\n                cy + innerRadius * sinStart\n            ];\n            // Memo for border radius\n            arcSegment.params = {\n                start: end,\n                end: start,\n                cx,\n                cy\n            };\n            arc.push(open ?\n                [\n                    'M',\n                    cx + innerRadius * cosEnd,\n                    cy + innerRadius * sinEnd\n                ] : [\n                'L',\n                cx + innerRadius * cosEnd,\n                cy + innerRadius * sinEnd\n            ], arcSegment);\n        }\n        if (!open) {\n            arc.push(['Z']);\n        }\n    }\n    return arc;\n}\n/**\n * Callout shape used for default tooltips.\n */\nfunction callout(x, y, w, h, options) {\n    const arrowLength = 6, halfDistance = 6, r = Math.min((options?.r) || 0, w, h), safeDistance = r + halfDistance, anchorX = options?.anchorX, anchorY = options?.anchorY || 0;\n    const path = roundedRect(x, y, w, h, { r });\n    if (!Symbols_isNumber(anchorX)) {\n        return path;\n    }\n    // Do not render a connector, if anchor starts inside the label\n    if (anchorX < w && anchorX > 0 && anchorY < h && anchorY > 0) {\n        return path;\n    }\n    // Anchor on right side\n    if (x + anchorX > w - safeDistance) {\n        // Chevron\n        if (anchorY > y + safeDistance &&\n            anchorY < y + h - safeDistance) {\n            path.splice(3, 1, ['L', x + w, anchorY - halfDistance], ['L', x + w + arrowLength, anchorY], ['L', x + w, anchorY + halfDistance], ['L', x + w, y + h - r]);\n            // Simple connector\n        }\n        else {\n            if (anchorX < w) { // Corner connector\n                const isTopCorner = anchorY < y + safeDistance, cornerY = isTopCorner ? y : y + h, sliceStart = isTopCorner ? 2 : 5;\n                path.splice(sliceStart, 0, ['L', anchorX, anchorY], ['L', x + w - r, cornerY]);\n            }\n            else { // Side connector\n                path.splice(3, 1, ['L', x + w, h / 2], ['L', anchorX, anchorY], ['L', x + w, h / 2], ['L', x + w, y + h - r]);\n            }\n        }\n        // Anchor on left side\n    }\n    else if (x + anchorX < safeDistance) {\n        // Chevron\n        if (anchorY > y + safeDistance &&\n            anchorY < y + h - safeDistance) {\n            path.splice(7, 1, ['L', x, anchorY + halfDistance], ['L', x - arrowLength, anchorY], ['L', x, anchorY - halfDistance], ['L', x, y + r]);\n            // Simple connector\n        }\n        else {\n            if (anchorX > 0) { // Corner connector\n                const isTopCorner = anchorY < y + safeDistance, cornerY = isTopCorner ? y : y + h, sliceStart = isTopCorner ? 1 : 6;\n                path.splice(sliceStart, 0, ['L', anchorX, anchorY], ['L', x + r, cornerY]);\n            }\n            else { // Side connector\n                path.splice(7, 1, ['L', x, h / 2], ['L', anchorX, anchorY], ['L', x, h / 2], ['L', x, y + r]);\n            }\n        }\n    }\n    else if ( // Replace bottom\n    anchorY > h &&\n        anchorX < w - safeDistance) {\n        path.splice(5, 1, ['L', anchorX + halfDistance, y + h], ['L', anchorX, y + h + arrowLength], ['L', anchorX - halfDistance, y + h], ['L', x + r, y + h]);\n    }\n    else if ( // Replace top\n    anchorY < 0 &&\n        anchorX > safeDistance) {\n        path.splice(1, 1, ['L', anchorX - halfDistance, y], ['L', anchorX, y - arrowLength], ['L', anchorX + halfDistance, y], ['L', w - r, y]);\n    }\n    return path;\n}\n/**\n *\n */\nfunction circle(x, y, w, h) {\n    // Return a full arc\n    return arc(x + w / 2, y + h / 2, w / 2, h / 2, {\n        start: Math.PI * 0.5,\n        end: Math.PI * 2.5,\n        open: false\n    });\n}\n/**\n *\n */\nfunction diamond(x, y, w, h) {\n    return [\n        ['M', x + w / 2, y],\n        ['L', x + w, y + h / 2],\n        ['L', x + w / 2, y + h],\n        ['L', x, y + h / 2],\n        ['Z']\n    ];\n}\n// #15291\n/**\n *\n */\nfunction rect(x, y, w, h, options) {\n    if (options?.r) {\n        return roundedRect(x, y, w, h, options);\n    }\n    return [\n        ['M', x, y],\n        ['L', x + w, y],\n        ['L', x + w, y + h],\n        ['L', x, y + h],\n        ['Z']\n    ];\n}\n/**\n *\n */\nfunction roundedRect(x, y, w, h, options) {\n    const r = options?.r || 0;\n    return [\n        ['M', x + r, y],\n        ['L', x + w - r, y], // Top side\n        ['A', r, r, 0, 0, 1, x + w, y + r], // Top-right corner\n        ['L', x + w, y + h - r], // Right side\n        ['A', r, r, 0, 0, 1, x + w - r, y + h], // Bottom-right corner\n        ['L', x + r, y + h], // Bottom side\n        ['A', r, r, 0, 0, 1, x, y + h - r], // Bottom-left corner\n        ['L', x, y + r], // Left side\n        ['A', r, r, 0, 0, 1, x + r, y],\n        ['Z'] // Top-left corner\n    ];\n}\n/**\n *\n */\nfunction triangle(x, y, w, h) {\n    return [\n        ['M', x + w / 2, y],\n        ['L', x + w, y + h],\n        ['L', x, y + h],\n        ['Z']\n    ];\n}\n/**\n *\n */\nfunction triangleDown(x, y, w, h) {\n    return [\n        ['M', x, y],\n        ['L', x + w, y],\n        ['L', x + w / 2, y + h],\n        ['Z']\n    ];\n}\nconst Symbols = {\n    arc,\n    callout,\n    circle,\n    diamond,\n    rect,\n    roundedRect,\n    square: rect,\n    triangle,\n    'triangle-down': triangleDown\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const SVG_Symbols = (Symbols);\n\n;// ./code/es-modules/Stock/Navigator/NavigatorSymbols.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { relativeLength } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\n/**\n * Draw one of the handles on the side of the zoomed range in the navigator.\n * @private\n */\nfunction navigatorHandle(_x, _y, width, height, options = {}) {\n    const halfWidth = options.width ? options.width / 2 : width, markerPosition = 1.5, r = relativeLength(options.borderRadius || 0, Math.min(halfWidth * 2, height));\n    height = options.height || height;\n    return [\n        ['M', -markerPosition, height / 2 - 3.5],\n        ['L', -markerPosition, height / 2 + 4.5],\n        ['M', markerPosition - 1, height / 2 - 3.5],\n        ['L', markerPosition - 1, height / 2 + 4.5],\n        ...SVG_Symbols.rect(-halfWidth - 1, 0.5, halfWidth * 2 + 1, height, { r })\n    ];\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst NavigatorSymbols = {\n    'navigator-handle': navigatorHandle\n};\n/* harmony default export */ const Navigator_NavigatorSymbols = (NavigatorSymbols);\n\n;// external [\"../highcharts.js\",\"default\",\"RendererRegistry\"]\nconst external_highcharts_src_js_default_RendererRegistry_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].RendererRegistry;\nvar external_highcharts_src_js_default_RendererRegistry_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_RendererRegistry_namespaceObject);\n;// ./code/es-modules/Stock/Utilities/StockUtilities.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { defined: StockUtilities_defined } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Sets the chart.fixedRange to the specified value. If the value is larger\n * than actual range, sets it to the maximum possible range. (#20327)\n *\n * @private\n * @function Highcharts.StockChart#setFixedRange\n * @param {number|undefined} range\n *        Range to set in axis units.\n */\nfunction setFixedRange(range) {\n    const xAxis = this.xAxis[0];\n    if (StockUtilities_defined(xAxis.dataMax) &&\n        StockUtilities_defined(xAxis.dataMin) &&\n        range) {\n        this.fixedRange = Math.min(range, xAxis.dataMax - xAxis.dataMin);\n    }\n    else {\n        this.fixedRange = range;\n    }\n}\nconst StockUtilities = {\n    setFixedRange\n};\n/* harmony default export */ const Utilities_StockUtilities = (StockUtilities);\n\n;// ./code/es-modules/Stock/Navigator/NavigatorComposition.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { setOptions } = (external_highcharts_src_js_default_default());\n\nconst { composed } = (external_highcharts_src_js_default_default());\n\n\n\n\nconst { getRendererType } = (external_highcharts_src_js_default_RendererRegistry_default());\n\nconst { setFixedRange: NavigatorComposition_setFixedRange } = Utilities_StockUtilities;\n\nconst { addEvent: NavigatorComposition_addEvent, extend, pushUnique } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Variables\n *\n * */\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction NavigatorComposition_compose(ChartClass, AxisClass, SeriesClass) {\n    NavigatorAxisComposition.compose(AxisClass);\n    if (pushUnique(composed, 'Navigator')) {\n        ChartClass.prototype.setFixedRange = NavigatorComposition_setFixedRange;\n        extend(getRendererType().prototype.symbols, Navigator_NavigatorSymbols);\n        NavigatorComposition_addEvent(SeriesClass, 'afterUpdate', onSeriesAfterUpdate);\n        setOptions({ navigator: Navigator_NavigatorDefaults });\n    }\n}\n/**\n * Handle updating series\n * @private\n */\nfunction onSeriesAfterUpdate() {\n    if (this.chart.navigator && !this.options.isInternal) {\n        this.chart.navigator.setBaseSeries(null, false);\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst NavigatorComposition = {\n    compose: NavigatorComposition_compose\n};\n/* harmony default export */ const Navigator_NavigatorComposition = (NavigatorComposition);\n\n;// ./code/es-modules/Core/Axis/ScrollbarAxis.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { composed: ScrollbarAxis_composed } = (external_highcharts_src_js_default_default());\n\nconst { addEvent: ScrollbarAxis_addEvent, defined: ScrollbarAxis_defined, pick: ScrollbarAxis_pick, pushUnique: ScrollbarAxis_pushUnique } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Composition\n *\n * */\nvar ScrollbarAxis;\n(function (ScrollbarAxis) {\n    /* *\n     *\n     *  Variables\n     *\n     * */\n    let Scrollbar;\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Attaches to axis events to create scrollbars if enabled.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} AxisClass\n     * Axis class to extend.\n     *\n     * @param {Highcharts.Scrollbar} ScrollbarClass\n     * Scrollbar class to use.\n     */\n    function compose(AxisClass, ScrollbarClass) {\n        if (ScrollbarAxis_pushUnique(ScrollbarAxis_composed, 'Axis.Scrollbar')) {\n            Scrollbar = ScrollbarClass;\n            ScrollbarAxis_addEvent(AxisClass, 'afterGetOffset', onAxisAfterGetOffset);\n            ScrollbarAxis_addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n            ScrollbarAxis_addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n        }\n    }\n    ScrollbarAxis.compose = compose;\n    /** @private */\n    function getExtremes(axis) {\n        const axisMin = ScrollbarAxis_pick(axis.options?.min, axis.min);\n        const axisMax = ScrollbarAxis_pick(axis.options?.max, axis.max);\n        return {\n            axisMin,\n            axisMax,\n            scrollMin: ScrollbarAxis_defined(axis.dataMin) ?\n                Math.min(axisMin, axis.min, axis.dataMin, ScrollbarAxis_pick(axis.threshold, Infinity)) : axisMin,\n            scrollMax: ScrollbarAxis_defined(axis.dataMax) ?\n                Math.max(axisMax, axis.max, axis.dataMax, ScrollbarAxis_pick(axis.threshold, -Infinity)) : axisMax\n        };\n    }\n    /**\n     * Make space for a scrollbar.\n     * @private\n     */\n    function onAxisAfterGetOffset() {\n        const axis = this, scrollbar = axis.scrollbar, opposite = scrollbar && !scrollbar.options.opposite, index = axis.horiz ? 2 : opposite ? 3 : 1;\n        if (scrollbar) {\n            // Reset scrollbars offsets\n            axis.chart.scrollbarsOffsets = [0, 0];\n            axis.chart.axisOffset[index] +=\n                scrollbar.size + (scrollbar.options.margin || 0);\n        }\n    }\n    /**\n     * Wrap axis initialization and create scrollbar if enabled.\n     * @private\n     */\n    function onAxisAfterInit() {\n        const axis = this;\n        if (axis.options?.scrollbar?.enabled) {\n            // Predefined options:\n            axis.options.scrollbar.vertical = !axis.horiz;\n            axis.options.startOnTick = axis.options.endOnTick = false;\n            axis.scrollbar = new Scrollbar(axis.chart.renderer, axis.options.scrollbar, axis.chart);\n            ScrollbarAxis_addEvent(axis.scrollbar, 'changed', function (e) {\n                const { axisMin, axisMax, scrollMin: unitedMin, scrollMax: unitedMax } = getExtremes(axis), range = unitedMax - unitedMin;\n                let to, from;\n                // #12834, scroll when show/hide series, wrong extremes\n                if (!ScrollbarAxis_defined(axisMin) || !ScrollbarAxis_defined(axisMax)) {\n                    return;\n                }\n                if ((axis.horiz && !axis.reversed) ||\n                    (!axis.horiz && axis.reversed)) {\n                    to = unitedMin + range * this.to;\n                    from = unitedMin + range * this.from;\n                }\n                else {\n                    // Y-values in browser are reversed, but this also\n                    // applies for reversed horizontal axis:\n                    to = unitedMin + range * (1 - this.from);\n                    from = unitedMin + range * (1 - this.to);\n                }\n                if (this.shouldUpdateExtremes(e.DOMType)) {\n                    // #17977, set animation to undefined instead of true\n                    const animate = e.DOMType === 'mousemove' ||\n                        e.DOMType === 'touchmove' ? false : void 0;\n                    axis.setExtremes(from, to, true, animate, e);\n                }\n                else {\n                    // When live redraw is disabled, don't change extremes\n                    // Only change the position of the scrollbar thumb\n                    this.setRange(this.from, this.to);\n                }\n            });\n        }\n    }\n    /**\n     * Wrap rendering axis, and update scrollbar if one is created.\n     * @private\n     */\n    function onAxisAfterRender() {\n        const axis = this, { scrollMin, scrollMax } = getExtremes(axis), scrollbar = axis.scrollbar, offset = (axis.axisTitleMargin + (axis.titleOffset || 0)), scrollbarsOffsets = axis.chart.scrollbarsOffsets, axisMargin = axis.options.margin || 0;\n        let offsetsIndex, from, to;\n        if (scrollbar && scrollbarsOffsets) {\n            if (axis.horiz) {\n                // Reserve space for labels/title\n                if (!axis.opposite) {\n                    scrollbarsOffsets[1] += offset;\n                }\n                scrollbar.position(axis.left, (axis.top +\n                    axis.height +\n                    2 +\n                    scrollbarsOffsets[1] -\n                    (axis.opposite ? axisMargin : 0)), axis.width, axis.height);\n                // Next scrollbar should reserve space for margin (if set)\n                if (!axis.opposite) {\n                    scrollbarsOffsets[1] += axisMargin;\n                }\n                offsetsIndex = 1;\n            }\n            else {\n                // Reserve space for labels/title\n                if (axis.opposite) {\n                    scrollbarsOffsets[0] += offset;\n                }\n                let xPosition;\n                if (!scrollbar.options.opposite) {\n                    xPosition = axis.opposite ? 0 : axisMargin;\n                }\n                else {\n                    xPosition = axis.left +\n                        axis.width +\n                        2 +\n                        scrollbarsOffsets[0] -\n                        (axis.opposite ? 0 : axisMargin);\n                }\n                scrollbar.position(xPosition, axis.top, axis.width, axis.height);\n                // Next scrollbar should reserve space for margin (if set)\n                if (axis.opposite) {\n                    scrollbarsOffsets[0] += axisMargin;\n                }\n                offsetsIndex = 0;\n            }\n            scrollbarsOffsets[offsetsIndex] += scrollbar.size +\n                (scrollbar.options.margin || 0);\n            if (isNaN(scrollMin) ||\n                isNaN(scrollMax) ||\n                !ScrollbarAxis_defined(axis.min) ||\n                !ScrollbarAxis_defined(axis.max) ||\n                axis.dataMin === axis.dataMax // #10733\n            ) {\n                // Default action: when data extremes are the same or there is\n                // not extremes on the axis, but scrollbar exists, make it\n                // full size\n                scrollbar.setRange(0, 1);\n            }\n            else if (axis.min === axis.max) { // #20359\n                // When the extremes are the same, set the scrollbar to a point\n                // within the extremes range. Utilize pointRange to perform the\n                // calculations. (#20359)\n                const interval = axis.pointRange / (axis.dataMax +\n                    1);\n                from = interval * axis.min;\n                to = interval * (axis.max + 1);\n                scrollbar.setRange(from, to);\n            }\n            else {\n                from = ((axis.min - scrollMin) /\n                    (scrollMax - scrollMin));\n                to = ((axis.max - scrollMin) /\n                    (scrollMax - scrollMin));\n                if ((axis.horiz && !axis.reversed) ||\n                    (!axis.horiz && axis.reversed)) {\n                    scrollbar.setRange(from, to);\n                }\n                else {\n                    // Inverse vertical axis\n                    scrollbar.setRange(1 - to, 1 - from);\n                }\n            }\n        }\n    }\n})(ScrollbarAxis || (ScrollbarAxis = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Axis_ScrollbarAxis = (ScrollbarAxis);\n\n;// ./code/es-modules/Stock/Scrollbar/ScrollbarDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Constant\n *\n * */\n/**\n *\n * The scrollbar is a means of panning over the X axis of a stock chart.\n * Scrollbars can also be applied to other types of axes.\n *\n * Another approach to scrollable charts is the [chart.scrollablePlotArea](\n * https://api.highcharts.com/highcharts/chart.scrollablePlotArea) option that\n * is especially suitable for simpler cartesian charts on mobile.\n *\n * In styled mode, all the presentational options for the\n * scrollbar are replaced by the classes `.highcharts-scrollbar-thumb`,\n * `.highcharts-scrollbar-arrow`, `.highcharts-scrollbar-button`,\n * `.highcharts-scrollbar-rifles` and `.highcharts-scrollbar-track`.\n *\n * @sample stock/yaxis/inverted-bar-scrollbar/\n *         A scrollbar on a simple bar chart\n *\n * @product highstock gantt\n * @optionparent scrollbar\n *\n * @private\n */\nconst ScrollbarDefaults = {\n    /**\n     * The height of the scrollbar. If `buttonsEnabled` is true , the height\n     * also applies to the width of the scroll arrows so that they are always\n     * squares.\n     *\n     * @sample stock/scrollbar/style/\n     *         Non-default height\n     *\n     * @type    {number}\n     */\n    height: 10,\n    /**\n     * The border rounding radius of the bar.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    barBorderRadius: 5,\n    /**\n     * The corner radius of the scrollbar buttons.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    buttonBorderRadius: 0,\n    /**\n     * Enable or disable the buttons at the end of the scrollbar.\n     *\n     * @since 11.0.0\n     */\n    buttonsEnabled: false,\n    /**\n     * Enable or disable the scrollbar.\n     *\n     * @sample stock/scrollbar/enabled/\n     *         Disable the scrollbar, only use navigator\n     *\n     * @type      {boolean}\n     * @default   true\n     * @apioption scrollbar.enabled\n     */\n    /**\n     * Whether to redraw the main chart as the scrollbar or the navigator\n     * zoomed window is moved. Defaults to `true` for modern browsers and\n     * `false` for legacy IE browsers as well as mobile devices.\n     *\n     * @sample stock/scrollbar/liveredraw\n     *         Setting live redraw to false\n     *\n     * @type  {boolean}\n     * @since 1.3\n     */\n    liveRedraw: void 0,\n    /**\n     * The margin between the scrollbar and its axis when the scrollbar is\n     * applied directly to an axis, or the navigator in case that is enabled.\n     * Defaults to 10 for axis, 3 for navigator.\n     *\n     * @type {number|undefined}\n     */\n    margin: void 0,\n    /**\n     * The minimum width of the scrollbar.\n     *\n     * @since 1.2.5\n     */\n    minWidth: 6,\n    /** @ignore-option */\n    opposite: true,\n    /**\n     * Whether to show or hide the scrollbar when the scrolled content is\n     * zoomed out to it full extent.\n     *\n     * @type      {boolean}\n     * @default   true\n     * @apioption scrollbar.showFull\n     */\n    step: 0.2,\n    /**\n     * The z index of the scrollbar group.\n     */\n    zIndex: 3,\n    /**\n     * The background color of the scrollbar itself.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    barBackgroundColor: \"#cccccc\" /* Palette.neutralColor20 */,\n    /**\n     * The width of the bar's border.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    barBorderWidth: 0,\n    /**\n     * The color of the scrollbar's border.\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    barBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n    /**\n     * The color of the small arrow inside the scrollbar buttons.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    buttonArrowColor: \"#333333\" /* Palette.neutralColor80 */,\n    /**\n     * The color of scrollbar buttons.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    buttonBackgroundColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n    /**\n     * The color of the border of the scrollbar buttons.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    buttonBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n    /**\n     * The border width of the scrollbar buttons.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    buttonBorderWidth: 1,\n    /**\n     * The color of the small rifles in the middle of the scrollbar.\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    rifleColor: 'none',\n    /**\n     * The color of the track background.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    trackBackgroundColor: 'rgba(255, 255, 255, 0.001)', // #18922\n    /**\n     * The color of the border of the scrollbar track.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    trackBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n    /**\n     * The corner radius of the border of the scrollbar track.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    trackBorderRadius: 5,\n    /**\n     * The width of the border of the scrollbar track.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    trackBorderWidth: 1\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Scrollbar_ScrollbarDefaults = (ScrollbarDefaults);\n\n;// ./code/es-modules/Stock/Scrollbar/Scrollbar.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { defaultOptions } = (external_highcharts_src_js_default_default());\n\n\n\n\nconst { addEvent: Scrollbar_addEvent, correctFloat: Scrollbar_correctFloat, crisp, defined: Scrollbar_defined, destroyObjectProperties, fireEvent, merge: Scrollbar_merge, pick: Scrollbar_pick, removeEvent } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\n/* eslint-disable no-invalid-this, valid-jsdoc */\n/**\n * A reusable scrollbar, internally used in Highcharts Stock's\n * navigator and optionally on individual axes.\n *\n * @private\n * @class\n * @name Highcharts.Scrollbar\n * @param {Highcharts.SVGRenderer} renderer\n * @param {Highcharts.ScrollbarOptions} options\n * @param {Highcharts.Chart} chart\n */\nclass Scrollbar {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    static compose(AxisClass) {\n        Axis_ScrollbarAxis.compose(AxisClass, Scrollbar);\n    }\n    /**\n     * When we have vertical scrollbar, rifles and arrow in buttons should be\n     * rotated. The same method is used in Navigator's handles, to rotate them.\n     *\n     * @function Highcharts.swapXY\n     *\n     * @param {Highcharts.SVGPathArray} path\n     * Path to be rotated.\n     *\n     * @param {boolean} [vertical]\n     * If vertical scrollbar, swap x-y values.\n     *\n     * @return {Highcharts.SVGPathArray}\n     * Rotated path.\n     *\n     * @requires modules/stock\n     */\n    static swapXY(path, vertical) {\n        if (vertical) {\n            path.forEach((seg) => {\n                const len = seg.length;\n                let temp;\n                for (let i = 0; i < len; i += 2) {\n                    temp = seg[i + 1];\n                    if (typeof temp === 'number') {\n                        seg[i + 1] = seg[i + 2];\n                        seg[i + 2] = temp;\n                    }\n                }\n            });\n        }\n        return path;\n    }\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    constructor(renderer, options, chart) {\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        this._events = [];\n        this.chartX = 0;\n        this.chartY = 0;\n        this.from = 0;\n        this.scrollbarButtons = [];\n        this.scrollbarLeft = 0;\n        this.scrollbarStrokeWidth = 1;\n        this.scrollbarTop = 0;\n        this.size = 0;\n        this.to = 0;\n        this.trackBorderWidth = 1;\n        this.x = 0;\n        this.y = 0;\n        this.init(renderer, options, chart);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Set up the mouse and touch events for the Scrollbar\n     *\n     * @private\n     * @function Highcharts.Scrollbar#addEvents\n     */\n    addEvents() {\n        const buttonsOrder = this.options.inverted ? [1, 0] : [0, 1], buttons = this.scrollbarButtons, bar = this.scrollbarGroup.element, track = this.track.element, mouseDownHandler = this.mouseDownHandler.bind(this), mouseMoveHandler = this.mouseMoveHandler.bind(this), mouseUpHandler = this.mouseUpHandler.bind(this);\n        const _events = [\n            // Mouse events\n            [\n                buttons[buttonsOrder[0]].element,\n                'click',\n                this.buttonToMinClick.bind(this)\n            ],\n            [\n                buttons[buttonsOrder[1]].element,\n                'click',\n                this.buttonToMaxClick.bind(this)\n            ],\n            [track, 'click', this.trackClick.bind(this)],\n            [bar, 'mousedown', mouseDownHandler],\n            [bar.ownerDocument, 'mousemove', mouseMoveHandler],\n            [bar.ownerDocument, 'mouseup', mouseUpHandler],\n            // Touch events\n            [bar, 'touchstart', mouseDownHandler],\n            [bar.ownerDocument, 'touchmove', mouseMoveHandler],\n            [bar.ownerDocument, 'touchend', mouseUpHandler]\n        ];\n        // Add them all\n        _events.forEach(function (args) {\n            Scrollbar_addEvent.apply(null, args);\n        });\n        this._events = _events;\n    }\n    buttonToMaxClick(e) {\n        const scroller = this;\n        const range = ((scroller.to - scroller.from) *\n            Scrollbar_pick(scroller.options.step, 0.2));\n        scroller.updatePosition(scroller.from + range, scroller.to + range);\n        fireEvent(scroller, 'changed', {\n            from: scroller.from,\n            to: scroller.to,\n            trigger: 'scrollbar',\n            DOMEvent: e\n        });\n    }\n    buttonToMinClick(e) {\n        const scroller = this;\n        const range = Scrollbar_correctFloat(scroller.to - scroller.from) *\n            Scrollbar_pick(scroller.options.step, 0.2);\n        scroller.updatePosition(Scrollbar_correctFloat(scroller.from - range), Scrollbar_correctFloat(scroller.to - range));\n        fireEvent(scroller, 'changed', {\n            from: scroller.from,\n            to: scroller.to,\n            trigger: 'scrollbar',\n            DOMEvent: e\n        });\n    }\n    /**\n     * Get normalized (0-1) cursor position over the scrollbar\n     *\n     * @private\n     * @function Highcharts.Scrollbar#cursorToScrollbarPosition\n     *\n     * @param  {*} normalizedEvent\n     *         normalized event, with chartX and chartY values\n     *\n     * @return {Highcharts.Dictionary<number>}\n     *         Local position {chartX, chartY}\n     */\n    cursorToScrollbarPosition(normalizedEvent) {\n        const scroller = this, options = scroller.options, minWidthDifference = options.minWidth > scroller.calculatedWidth ?\n            options.minWidth :\n            0; // `minWidth` distorts translation\n        return {\n            chartX: (normalizedEvent.chartX - scroller.x -\n                scroller.xOffset) /\n                (scroller.barWidth - minWidthDifference),\n            chartY: (normalizedEvent.chartY - scroller.y -\n                scroller.yOffset) /\n                (scroller.barWidth - minWidthDifference)\n        };\n    }\n    /**\n     * Destroys allocated elements.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#destroy\n     */\n    destroy() {\n        const scroller = this, navigator = scroller.chart.scroller;\n        // Disconnect events added in addEvents\n        scroller.removeEvents();\n        // Destroy properties\n        [\n            'track',\n            'scrollbarRifles',\n            'scrollbar',\n            'scrollbarGroup',\n            'group'\n        ].forEach(function (prop) {\n            if (scroller[prop] && scroller[prop].destroy) {\n                scroller[prop] = scroller[prop].destroy();\n            }\n        });\n        // #6421, chart may have more scrollbars\n        if (navigator && scroller === navigator.scrollbar) {\n            navigator.scrollbar = null;\n            // Destroy elements in collection\n            destroyObjectProperties(navigator.scrollbarButtons);\n        }\n    }\n    /**\n     * Draw the scrollbar buttons with arrows\n     *\n     * @private\n     * @function Highcharts.Scrollbar#drawScrollbarButton\n     * @param {number} index\n     *        0 is left, 1 is right\n     */\n    drawScrollbarButton(index) {\n        const scroller = this, renderer = scroller.renderer, scrollbarButtons = scroller.scrollbarButtons, options = scroller.options, size = scroller.size, group = renderer.g().add(scroller.group);\n        scrollbarButtons.push(group);\n        if (options.buttonsEnabled) {\n            // Create a rectangle for the scrollbar button\n            const rect = renderer.rect()\n                .addClass('highcharts-scrollbar-button')\n                .add(group);\n            // Presentational attributes\n            if (!scroller.chart.styledMode) {\n                rect.attr({\n                    stroke: options.buttonBorderColor,\n                    'stroke-width': options.buttonBorderWidth,\n                    fill: options.buttonBackgroundColor\n                });\n            }\n            // Place the rectangle based on the rendered stroke width\n            rect.attr(rect.crisp({\n                x: -0.5,\n                y: -0.5,\n                width: size,\n                height: size,\n                r: options.buttonBorderRadius\n            }, rect.strokeWidth()));\n            // Button arrow\n            const arrow = renderer\n                .path(Scrollbar.swapXY([[\n                    'M',\n                    size / 2 + (index ? -1 : 1),\n                    size / 2 - 3\n                ], [\n                    'L',\n                    size / 2 + (index ? -1 : 1),\n                    size / 2 + 3\n                ], [\n                    'L',\n                    size / 2 + (index ? 2 : -2),\n                    size / 2\n                ]], options.vertical))\n                .addClass('highcharts-scrollbar-arrow')\n                .add(scrollbarButtons[index]);\n            if (!scroller.chart.styledMode) {\n                arrow.attr({\n                    fill: options.buttonArrowColor\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @function Highcharts.Scrollbar#init\n     * @param {Highcharts.SVGRenderer} renderer\n     * @param {Highcharts.ScrollbarOptions} options\n     * @param {Highcharts.Chart} chart\n     */\n    init(renderer, options, chart) {\n        const scroller = this;\n        scroller.scrollbarButtons = [];\n        scroller.renderer = renderer;\n        scroller.userOptions = options;\n        scroller.options = Scrollbar_merge(Scrollbar_ScrollbarDefaults, defaultOptions.scrollbar, options);\n        scroller.options.margin = Scrollbar_pick(scroller.options.margin, 10);\n        scroller.chart = chart;\n        // Backward compatibility\n        scroller.size = Scrollbar_pick(scroller.options.size, scroller.options.height);\n        // Init\n        if (options.enabled) {\n            scroller.render();\n            scroller.addEvents();\n        }\n    }\n    mouseDownHandler(e) {\n        const scroller = this, normalizedEvent = scroller.chart.pointer?.normalize(e) || e, mousePosition = scroller.cursorToScrollbarPosition(normalizedEvent);\n        scroller.chartX = mousePosition.chartX;\n        scroller.chartY = mousePosition.chartY;\n        scroller.initPositions = [scroller.from, scroller.to];\n        scroller.grabbedCenter = true;\n    }\n    /**\n     * Event handler for the mouse move event.\n     * @private\n     */\n    mouseMoveHandler(e) {\n        const scroller = this, normalizedEvent = scroller.chart.pointer?.normalize(e) || e, options = scroller.options, direction = options.vertical ?\n            'chartY' : 'chartX', initPositions = scroller.initPositions || [];\n        let scrollPosition, chartPosition, change;\n        // In iOS, a mousemove event with e.pageX === 0 is fired when\n        // holding the finger down in the center of the scrollbar. This\n        // should be ignored.\n        if (scroller.grabbedCenter &&\n            // #4696, scrollbar failed on Android\n            (!e.touches || e.touches[0][direction] !== 0)) {\n            chartPosition = scroller.cursorToScrollbarPosition(normalizedEvent)[direction];\n            scrollPosition = scroller[direction];\n            change = chartPosition - scrollPosition;\n            scroller.hasDragged = true;\n            scroller.updatePosition(initPositions[0] + change, initPositions[1] + change);\n            if (scroller.hasDragged) {\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMType: e.type,\n                    DOMEvent: e\n                });\n            }\n        }\n    }\n    /**\n     * Event handler for the mouse up event.\n     * @private\n     */\n    mouseUpHandler(e) {\n        const scroller = this;\n        if (scroller.hasDragged) {\n            fireEvent(scroller, 'changed', {\n                from: scroller.from,\n                to: scroller.to,\n                trigger: 'scrollbar',\n                DOMType: e.type,\n                DOMEvent: e\n            });\n        }\n        scroller.grabbedCenter =\n            scroller.hasDragged =\n                scroller.chartX =\n                    scroller.chartY = null;\n    }\n    /**\n     * Position the scrollbar, method called from a parent with defined\n     * dimensions.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#position\n     * @param {number} x\n     *        x-position on the chart\n     * @param {number} y\n     *        y-position on the chart\n     * @param {number} width\n     *        width of the scrollbar\n     * @param {number} height\n     *        height of the scrollbar\n     */\n    position(x, y, width, height) {\n        const scroller = this, options = scroller.options, { buttonsEnabled, margin = 0, vertical } = options, method = scroller.rendered ? 'animate' : 'attr';\n        let xOffset = height, yOffset = 0;\n        // Make the scrollbar visible when it is repositioned, #15763.\n        scroller.group.show();\n        scroller.x = x;\n        scroller.y = y + this.trackBorderWidth;\n        scroller.width = width; // Width with buttons\n        scroller.height = height;\n        scroller.xOffset = xOffset;\n        scroller.yOffset = yOffset;\n        // If Scrollbar is a vertical type, swap options:\n        if (vertical) {\n            scroller.width = scroller.yOffset = width = yOffset = scroller.size;\n            scroller.xOffset = xOffset = 0;\n            scroller.yOffset = yOffset = buttonsEnabled ? scroller.size : 0;\n            // Width without buttons\n            scroller.barWidth = height - (buttonsEnabled ? width * 2 : 0);\n            scroller.x = x = x + margin;\n        }\n        else {\n            scroller.height = height = scroller.size;\n            scroller.xOffset = xOffset = buttonsEnabled ? scroller.size : 0;\n            // Width without buttons\n            scroller.barWidth = width - (buttonsEnabled ? height * 2 : 0);\n            scroller.y = scroller.y + margin;\n        }\n        // Set general position for a group:\n        scroller.group[method]({\n            translateX: x,\n            translateY: scroller.y\n        });\n        // Resize background/track:\n        scroller.track[method]({\n            width: width,\n            height: height\n        });\n        // Move right/bottom button to its place:\n        scroller.scrollbarButtons[1][method]({\n            translateX: vertical ? 0 : width - xOffset,\n            translateY: vertical ? height - yOffset : 0\n        });\n    }\n    /**\n     * Removes the event handlers attached previously with addEvents.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#removeEvents\n     */\n    removeEvents() {\n        this._events.forEach(function (args) {\n            removeEvent.apply(null, args);\n        });\n        this._events.length = 0;\n    }\n    /**\n     * Render scrollbar with all required items.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#render\n     */\n    render() {\n        const scroller = this, renderer = scroller.renderer, options = scroller.options, size = scroller.size, styledMode = scroller.chart.styledMode, group = renderer.g('scrollbar')\n            .attr({\n            zIndex: options.zIndex\n        })\n            .hide() // Initially hide the scrollbar #15863\n            .add();\n        // Draw the scrollbar group\n        scroller.group = group;\n        // Draw the scrollbar track:\n        scroller.track = renderer.rect()\n            .addClass('highcharts-scrollbar-track')\n            .attr({\n            r: options.trackBorderRadius || 0,\n            height: size,\n            width: size\n        }).add(group);\n        if (!styledMode) {\n            scroller.track.attr({\n                fill: options.trackBackgroundColor,\n                stroke: options.trackBorderColor,\n                'stroke-width': options.trackBorderWidth\n            });\n        }\n        const trackBorderWidth = scroller.trackBorderWidth =\n            scroller.track.strokeWidth();\n        scroller.track.attr({\n            x: -crisp(0, trackBorderWidth),\n            y: -crisp(0, trackBorderWidth)\n        });\n        // Draw the scrollbar itself\n        scroller.scrollbarGroup = renderer.g().add(group);\n        scroller.scrollbar = renderer.rect()\n            .addClass('highcharts-scrollbar-thumb')\n            .attr({\n            height: size - trackBorderWidth,\n            width: size - trackBorderWidth,\n            r: options.barBorderRadius || 0\n        }).add(scroller.scrollbarGroup);\n        scroller.scrollbarRifles = renderer\n            .path(Scrollbar.swapXY([\n            ['M', -3, size / 4],\n            ['L', -3, 2 * size / 3],\n            ['M', 0, size / 4],\n            ['L', 0, 2 * size / 3],\n            ['M', 3, size / 4],\n            ['L', 3, 2 * size / 3]\n        ], options.vertical))\n            .addClass('highcharts-scrollbar-rifles')\n            .add(scroller.scrollbarGroup);\n        if (!styledMode) {\n            scroller.scrollbar.attr({\n                fill: options.barBackgroundColor,\n                stroke: options.barBorderColor,\n                'stroke-width': options.barBorderWidth\n            });\n            scroller.scrollbarRifles.attr({\n                stroke: options.rifleColor,\n                'stroke-width': 1\n            });\n        }\n        scroller.scrollbarStrokeWidth = scroller.scrollbar.strokeWidth();\n        scroller.scrollbarGroup.translate(-crisp(0, scroller.scrollbarStrokeWidth), -crisp(0, scroller.scrollbarStrokeWidth));\n        // Draw the buttons:\n        scroller.drawScrollbarButton(0);\n        scroller.drawScrollbarButton(1);\n    }\n    /**\n     * Set scrollbar size, with a given scale.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#setRange\n     * @param {number} from\n     *        scale (0-1) where bar should start\n     * @param {number} to\n     *        scale (0-1) where bar should end\n     */\n    setRange(from, to) {\n        const scroller = this, options = scroller.options, vertical = options.vertical, minWidth = options.minWidth, fullWidth = scroller.barWidth, method = (this.rendered &&\n            !this.hasDragged &&\n            !(this.chart.navigator && this.chart.navigator.hasDragged)) ? 'animate' : 'attr';\n        if (!Scrollbar_defined(fullWidth)) {\n            return;\n        }\n        const toPX = fullWidth * Math.min(to, 1);\n        let fromPX, newSize;\n        from = Math.max(from, 0);\n        fromPX = Math.ceil(fullWidth * from);\n        scroller.calculatedWidth = newSize = Scrollbar_correctFloat(toPX - fromPX);\n        // We need to recalculate position, if minWidth is used\n        if (newSize < minWidth) {\n            fromPX = (fullWidth - minWidth + newSize) * from;\n            newSize = minWidth;\n        }\n        const newPos = Math.floor(fromPX + scroller.xOffset + scroller.yOffset);\n        const newRiflesPos = newSize / 2 - 0.5; // -0.5 -> rifle line width / 2\n        // Store current position:\n        scroller.from = from;\n        scroller.to = to;\n        if (!vertical) {\n            scroller.scrollbarGroup[method]({\n                translateX: newPos\n            });\n            scroller.scrollbar[method]({\n                width: newSize\n            });\n            scroller.scrollbarRifles[method]({\n                translateX: newRiflesPos\n            });\n            scroller.scrollbarLeft = newPos;\n            scroller.scrollbarTop = 0;\n        }\n        else {\n            scroller.scrollbarGroup[method]({\n                translateY: newPos\n            });\n            scroller.scrollbar[method]({\n                height: newSize\n            });\n            scroller.scrollbarRifles[method]({\n                translateY: newRiflesPos\n            });\n            scroller.scrollbarTop = newPos;\n            scroller.scrollbarLeft = 0;\n        }\n        if (newSize <= 12) {\n            scroller.scrollbarRifles.hide();\n        }\n        else {\n            scroller.scrollbarRifles.show();\n        }\n        // Show or hide the scrollbar based on the showFull setting\n        if (options.showFull === false) {\n            if (from <= 0 && to >= 1) {\n                scroller.group.hide();\n            }\n            else {\n                scroller.group.show();\n            }\n        }\n        scroller.rendered = true;\n    }\n    /**\n     * Checks if the extremes should be updated in response to a scrollbar\n     * change event.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#shouldUpdateExtremes\n     */\n    shouldUpdateExtremes(eventType) {\n        return (Scrollbar_pick(this.options.liveRedraw, (external_highcharts_src_js_default_default()).svg &&\n            !(external_highcharts_src_js_default_default()).isTouchDevice &&\n            !this.chart.boosted) ||\n            // Mouseup always should change extremes\n            eventType === 'mouseup' ||\n            eventType === 'touchend' ||\n            // Internal events\n            !Scrollbar_defined(eventType));\n    }\n    trackClick(e) {\n        const scroller = this;\n        const normalizedEvent = scroller.chart.pointer?.normalize(e) || e, range = scroller.to - scroller.from, top = scroller.y + scroller.scrollbarTop, left = scroller.x + scroller.scrollbarLeft;\n        if ((scroller.options.vertical && normalizedEvent.chartY > top) ||\n            (!scroller.options.vertical && normalizedEvent.chartX > left)) {\n            // On the top or on the left side of the track:\n            scroller.updatePosition(scroller.from + range, scroller.to + range);\n        }\n        else {\n            // On the bottom or the right side of the track:\n            scroller.updatePosition(scroller.from - range, scroller.to - range);\n        }\n        fireEvent(scroller, 'changed', {\n            from: scroller.from,\n            to: scroller.to,\n            trigger: 'scrollbar',\n            DOMEvent: e\n        });\n    }\n    /**\n     * Update the scrollbar with new options\n     *\n     * @private\n     * @function Highcharts.Scrollbar#update\n     * @param  {Highcharts.ScrollbarOptions} options\n     */\n    update(options) {\n        this.destroy();\n        this.init(this.chart.renderer, Scrollbar_merge(true, this.options, options), this.chart);\n    }\n    /**\n     * Update position option in the Scrollbar, with normalized 0-1 scale\n     *\n     * @private\n     * @function Highcharts.Scrollbar#updatePosition\n     * @param  {number} from\n     * @param  {number} to\n     */\n    updatePosition(from, to) {\n        if (to > 1) {\n            from = Scrollbar_correctFloat(1 - Scrollbar_correctFloat(to - from));\n            to = 1;\n        }\n        if (from < 0) {\n            to = Scrollbar_correctFloat(to - from);\n            from = 0;\n        }\n        this.from = from;\n        this.to = to;\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nScrollbar.defaultOptions = Scrollbar_ScrollbarDefaults;\n/* *\n *\n *  Registry\n *\n * */\ndefaultOptions.scrollbar = Scrollbar_merge(true, Scrollbar.defaultOptions, defaultOptions.scrollbar);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Scrollbar_Scrollbar = (Scrollbar);\n\n;// external [\"../highcharts.js\",\"default\",\"SVGRenderer\"]\nconst external_highcharts_src_js_default_SVGRenderer_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].SVGRenderer;\nvar external_highcharts_src_js_default_SVGRenderer_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_SVGRenderer_namespaceObject);\n;// ./code/es-modules/Stock/Navigator/Navigator.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\nconst { defaultOptions: Navigator_defaultOptions } = (external_highcharts_src_js_default_default());\n\nconst { isTouchDevice: Navigator_isTouchDevice } = (external_highcharts_src_js_default_default());\n\n\n\n\nconst { prototype: { symbols } } = (external_highcharts_src_js_default_SVGRenderer_default());\n\nconst { addEvent: Navigator_addEvent, clamp, correctFloat: Navigator_correctFloat, defined: Navigator_defined, destroyObjectProperties: Navigator_destroyObjectProperties, erase, extend: Navigator_extend, find, fireEvent: Navigator_fireEvent, isArray: Navigator_isArray, isNumber: Navigator_isNumber, merge: Navigator_merge, pick: Navigator_pick, removeEvent: Navigator_removeEvent, splat } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Finding the min or max of a set of variables where we don't know if they are\n * defined, is a pattern that is repeated several places in Highcharts. Consider\n * making this a global utility method.\n * @private\n */\nfunction numExt(extreme, ...args) {\n    const numbers = [].filter.call(args, Navigator_isNumber);\n    if (numbers.length) {\n        return Math[extreme].apply(0, numbers);\n    }\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * The Navigator class\n *\n * @private\n * @class\n * @name Highcharts.Navigator\n *\n * @param {Highcharts.Chart} chart\n *        Chart object\n */\nclass Navigator {\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    static compose(ChartClass, AxisClass, SeriesClass) {\n        Navigator_ChartNavigatorComposition.compose(ChartClass, Navigator);\n        Navigator_NavigatorComposition.compose(ChartClass, AxisClass, SeriesClass);\n    }\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(chart) {\n        this.isDirty = false;\n        this.scrollbarHeight = 0;\n        this.init(chart);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Draw one of the handles on the side of the zoomed range in the navigator.\n     *\n     * @private\n     * @function Highcharts.Navigator#drawHandle\n     *\n     * @param {number} x\n     *        The x center for the handle\n     *\n     * @param {number} index\n     *        0 for left and 1 for right\n     *\n     * @param {boolean|undefined} inverted\n     *        Flag for chart.inverted\n     *\n     * @param {string} verb\n     *        Use 'animate' or 'attr'\n     */\n    drawHandle(x, index, inverted, verb) {\n        const navigator = this, height = navigator.navigatorOptions.handles.height;\n        // Place it\n        navigator.handles[index][verb](inverted ? {\n            translateX: Math.round(navigator.left + navigator.height / 2),\n            translateY: Math.round(navigator.top + parseInt(x, 10) + 0.5 - height)\n        } : {\n            translateX: Math.round(navigator.left + parseInt(x, 10)),\n            translateY: Math.round(navigator.top + navigator.height / 2 - height / 2 - 1)\n        });\n    }\n    /**\n     * Render outline around the zoomed range\n     *\n     * @private\n     * @function Highcharts.Navigator#drawOutline\n     *\n     * @param {number} zoomedMin\n     *        in pixels position where zoomed range starts\n     *\n     * @param {number} zoomedMax\n     *        in pixels position where zoomed range ends\n     *\n     * @param {boolean|undefined} inverted\n     *        flag if chart is inverted\n     *\n     * @param {string} verb\n     *        use 'animate' or 'attr'\n     */\n    drawOutline(zoomedMin, zoomedMax, inverted, verb) {\n        const navigator = this, maskInside = navigator.navigatorOptions.maskInside, outlineWidth = navigator.outline.strokeWidth(), halfOutline = outlineWidth / 2, outlineCorrection = (outlineWidth % 2) / 2, // #5800\n        scrollButtonSize = navigator.scrollButtonSize, navigatorSize = navigator.size, navigatorTop = navigator.top, height = navigator.height, lineTop = navigatorTop - halfOutline, lineBtm = navigatorTop + height;\n        let left = navigator.left, verticalMin, path;\n        if (inverted) {\n            verticalMin = navigatorTop + zoomedMax + outlineCorrection;\n            zoomedMax = navigatorTop + zoomedMin + outlineCorrection;\n            path = [\n                [\n                    'M',\n                    left + height,\n                    navigatorTop - scrollButtonSize - outlineCorrection\n                ],\n                // Top right of zoomed range\n                ['L', left + height, verticalMin],\n                ['L', left, verticalMin], // Top left of z.r.\n                ['M', left, zoomedMax], // Bottom left of z.r.\n                ['L', left + height, zoomedMax], // Bottom right of z.r.\n                [\n                    'L',\n                    left + height,\n                    navigatorTop + navigatorSize + scrollButtonSize\n                ]\n            ];\n            if (maskInside) {\n                path.push(\n                // Upper left of zoomed range\n                ['M', left + height, verticalMin - halfOutline], \n                // Upper right of z.r.\n                [\n                    'L',\n                    left + height,\n                    zoomedMax + halfOutline\n                ]);\n            }\n        }\n        else {\n            left -= scrollButtonSize;\n            zoomedMin += left + scrollButtonSize - outlineCorrection;\n            zoomedMax += left + scrollButtonSize - outlineCorrection;\n            path = [\n                // Left\n                ['M', left, lineTop],\n                // Upper left of zoomed range\n                ['L', zoomedMin, lineTop],\n                // Lower left of z.r.\n                ['L', zoomedMin, lineBtm],\n                // Lower right of z.r.\n                ['M', zoomedMax, lineBtm],\n                // Upper right of z.r.\n                ['L', zoomedMax, lineTop],\n                // Right\n                [\n                    'L',\n                    left + navigatorSize + scrollButtonSize * 2,\n                    lineTop\n                ]\n            ];\n            if (maskInside) {\n                path.push(\n                // Upper left of zoomed range\n                ['M', zoomedMin - halfOutline, lineTop], \n                // Upper right of z.r.\n                ['L', zoomedMax + halfOutline, lineTop]);\n            }\n        }\n        navigator.outline[verb]({\n            d: path\n        });\n    }\n    /**\n     * Render outline around the zoomed range\n     *\n     * @private\n     * @function Highcharts.Navigator#drawMasks\n     *\n     * @param {number} zoomedMin\n     *        in pixels position where zoomed range starts\n     *\n     * @param {number} zoomedMax\n     *        in pixels position where zoomed range ends\n     *\n     * @param {boolean|undefined} inverted\n     *        flag if chart is inverted\n     *\n     * @param {string} verb\n     *        use 'animate' or 'attr'\n     */\n    drawMasks(zoomedMin, zoomedMax, inverted, verb) {\n        const navigator = this, left = navigator.left, top = navigator.top, navigatorHeight = navigator.height;\n        let height, width, x, y;\n        // Determine rectangle position & size\n        // According to (non)inverted position:\n        if (inverted) {\n            x = [left, left, left];\n            y = [top, top + zoomedMin, top + zoomedMax];\n            width = [navigatorHeight, navigatorHeight, navigatorHeight];\n            height = [\n                zoomedMin,\n                zoomedMax - zoomedMin,\n                navigator.size - zoomedMax\n            ];\n        }\n        else {\n            x = [left, left + zoomedMin, left + zoomedMax];\n            y = [top, top, top];\n            width = [\n                zoomedMin,\n                zoomedMax - zoomedMin,\n                navigator.size - zoomedMax\n            ];\n            height = [navigatorHeight, navigatorHeight, navigatorHeight];\n        }\n        navigator.shades.forEach((shade, i) => {\n            shade[verb]({\n                x: x[i],\n                y: y[i],\n                width: width[i],\n                height: height[i]\n            });\n        });\n    }\n    /**\n     * Generate and update DOM elements for a navigator:\n     *\n     * - main navigator group\n     *\n     * - all shades\n     *\n     * - outline\n     *\n     * - handles\n     *\n     * @private\n     * @function Highcharts.Navigator#renderElements\n     */\n    renderElements() {\n        const navigator = this, navigatorOptions = navigator.navigatorOptions, maskInside = navigatorOptions.maskInside, chart = navigator.chart, inverted = chart.inverted, renderer = chart.renderer, mouseCursor = {\n            cursor: inverted ? 'ns-resize' : 'ew-resize'\n        }, \n        // Create the main navigator group\n        navigatorGroup = navigator.navigatorGroup ??\n            (navigator.navigatorGroup = renderer\n                .g('navigator')\n                .attr({\n                zIndex: 8,\n                visibility: 'hidden'\n            })\n                .add());\n        // Create masks, each mask will get events and fill:\n        [\n            !maskInside,\n            maskInside,\n            !maskInside\n        ].forEach((hasMask, index) => {\n            const shade = navigator.shades[index] ??\n                (navigator.shades[index] = renderer.rect()\n                    .addClass('highcharts-navigator-mask' +\n                    (index === 1 ? '-inside' : '-outside'))\n                    .add(navigatorGroup));\n            if (!chart.styledMode) {\n                shade.attr({\n                    fill: hasMask ? navigatorOptions.maskFill : 'rgba(0,0,0,0)'\n                });\n                if (index === 1) {\n                    shade.css(mouseCursor);\n                }\n            }\n        });\n        // Create the outline:\n        if (!navigator.outline) {\n            navigator.outline = renderer.path()\n                .addClass('highcharts-navigator-outline')\n                .add(navigatorGroup);\n        }\n        if (!chart.styledMode) {\n            navigator.outline.attr({\n                'stroke-width': navigatorOptions.outlineWidth,\n                stroke: navigatorOptions.outlineColor\n            });\n        }\n        // Create the handlers:\n        if (navigatorOptions.handles?.enabled) {\n            const handlesOptions = navigatorOptions.handles, { height, width } = handlesOptions;\n            [0, 1].forEach((index) => {\n                const symbolName = handlesOptions.symbols[index];\n                if (!navigator.handles[index] ||\n                    navigator.handles[index].symbolUrl !== symbolName) {\n                    // Generate symbol from scratch if we're dealing with an URL\n                    navigator.handles[index]?.destroy();\n                    navigator.handles[index] = renderer.symbol(symbolName, -width / 2 - 1, 0, width, height, handlesOptions);\n                    // Z index is 6 for right handle, 7 for left. Can't be 10,\n                    // because of the tooltip in inverted chart (#2908).\n                    navigator.handles[index].attr({ zIndex: 7 - index })\n                        .addClass('highcharts-navigator-handle ' +\n                        'highcharts-navigator-handle-' +\n                        ['left', 'right'][index]).add(navigatorGroup);\n                    navigator.addMouseEvents();\n                    // If the navigator symbol changed, update its path and name\n                }\n                else if (!navigator.handles[index].isImg &&\n                    navigator.handles[index].symbolName !== symbolName) {\n                    const symbolFn = symbols[symbolName], path = symbolFn.call(symbols, -width / 2 - 1, 0, width, height);\n                    navigator.handles[index].attr({\n                        d: path\n                    });\n                    navigator.handles[index].symbolName = symbolName;\n                }\n                if (chart.inverted) {\n                    navigator.handles[index].attr({\n                        rotation: 90,\n                        rotationOriginX: Math.floor(-width / 2),\n                        rotationOriginY: (height + width) / 2\n                    });\n                }\n                if (!chart.styledMode) {\n                    navigator.handles[index]\n                        .attr({\n                        fill: handlesOptions.backgroundColor,\n                        stroke: handlesOptions.borderColor,\n                        'stroke-width': handlesOptions.lineWidth,\n                        width: handlesOptions.width,\n                        height: handlesOptions.height,\n                        x: -width / 2 - 1,\n                        y: 0\n                    })\n                        .css(mouseCursor);\n                }\n            });\n        }\n    }\n    /**\n     * Update navigator\n     *\n     * @private\n     * @function Highcharts.Navigator#update\n     *\n     * @param {Highcharts.NavigatorOptions} options\n     *        Options to merge in when updating navigator\n     */\n    update(options, redraw = false) {\n        const chart = this.chart, invertedUpdate = chart.options.chart.inverted !==\n            chart.scrollbar?.options.vertical;\n        Navigator_merge(true, chart.options.navigator, options);\n        this.navigatorOptions = chart.options.navigator || {};\n        this.setOpposite();\n        // Revert to destroy/init for navigator/scrollbar enabled toggle\n        if (Navigator_defined(options.enabled) || invertedUpdate) {\n            this.destroy();\n            this.navigatorEnabled = options.enabled || this.navigatorEnabled;\n            return this.init(chart);\n        }\n        if (this.navigatorEnabled) {\n            this.isDirty = true;\n            if (options.adaptToUpdatedData === false) {\n                this.baseSeries.forEach((series) => {\n                    Navigator_removeEvent(series, 'updatedData', this.updatedDataHandler);\n                }, this);\n            }\n            if (options.adaptToUpdatedData) {\n                this.baseSeries.forEach((series) => {\n                    series.eventsToUnbind.push(Navigator_addEvent(series, 'updatedData', this.updatedDataHandler));\n                }, this);\n            }\n            // Update navigator series\n            if (options.series || options.baseSeries) {\n                this.setBaseSeries(void 0, false);\n            }\n            // Update navigator axis\n            if (options.height || options.xAxis || options.yAxis) {\n                this.height = options.height ?? this.height;\n                const offsets = this.getXAxisOffsets();\n                this.xAxis.update({\n                    ...options.xAxis,\n                    offsets,\n                    [chart.inverted ? 'width' : 'height']: this.height,\n                    [chart.inverted ? 'height' : 'width']: void 0\n                }, false);\n                this.yAxis.update({\n                    ...options.yAxis,\n                    [chart.inverted ? 'width' : 'height']: this.height\n                }, false);\n            }\n        }\n        if (redraw) {\n            chart.redraw();\n        }\n    }\n    /**\n     * Render the navigator\n     *\n     * @private\n     * @function Highcharts.Navigator#render\n     * @param {number} min\n     *        X axis value minimum\n     * @param {number} max\n     *        X axis value maximum\n     * @param {number} [pxMin]\n     *        Pixel value minimum\n     * @param {number} [pxMax]\n     *        Pixel value maximum\n     */\n    render(min, max, pxMin, pxMax) {\n        const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, pointRange = xAxis.pointRange || 0, scrollbarXAxis = xAxis.navigatorAxis.fake ? chart.xAxis[0] : xAxis, navigatorEnabled = navigator.navigatorEnabled, rendered = navigator.rendered, inverted = chart.inverted, minRange = chart.xAxis[0].minRange, maxRange = chart.xAxis[0].options.maxRange, scrollButtonSize = navigator.scrollButtonSize;\n        let navigatorWidth, scrollbarLeft, scrollbarTop, scrollbarHeight = navigator.scrollbarHeight, navigatorSize, verb;\n        // Don't redraw while moving the handles (#4703).\n        if (this.hasDragged && !Navigator_defined(pxMin)) {\n            return;\n        }\n        if (this.isDirty) {\n            // Update DOM navigator elements\n            this.renderElements();\n        }\n        min = Navigator_correctFloat(min - pointRange / 2);\n        max = Navigator_correctFloat(max + pointRange / 2);\n        // Don't render the navigator until we have data (#486, #4202, #5172).\n        if (!Navigator_isNumber(min) || !Navigator_isNumber(max)) {\n            // However, if navigator was already rendered, we may need to resize\n            // it. For example hidden series, but visible navigator (#6022).\n            if (rendered) {\n                pxMin = 0;\n                pxMax = Navigator_pick(xAxis.width, scrollbarXAxis.width);\n            }\n            else {\n                return;\n            }\n        }\n        navigator.left = Navigator_pick(xAxis.left, \n        // In case of scrollbar only, without navigator\n        chart.plotLeft + scrollButtonSize +\n            (inverted ? chart.plotWidth : 0));\n        let zoomedMax = navigator.size = navigatorSize = Navigator_pick(xAxis.len, (inverted ? chart.plotHeight : chart.plotWidth) -\n            2 * scrollButtonSize);\n        if (inverted) {\n            navigatorWidth = scrollbarHeight;\n        }\n        else {\n            navigatorWidth = navigatorSize + 2 * scrollButtonSize;\n        }\n        // Get the pixel position of the handles\n        pxMin = Navigator_pick(pxMin, xAxis.toPixels(min, true));\n        pxMax = Navigator_pick(pxMax, xAxis.toPixels(max, true));\n        // Verify (#1851, #2238)\n        if (!Navigator_isNumber(pxMin) || Math.abs(pxMin) === Infinity) {\n            pxMin = 0;\n            pxMax = navigatorWidth;\n        }\n        // Are we below the minRange? (#2618, #6191)\n        const newMin = xAxis.toValue(pxMin, true), newMax = xAxis.toValue(pxMax, true), currentRange = Math.abs(Navigator_correctFloat(newMax - newMin));\n        if (currentRange < minRange) {\n            if (this.grabbedLeft) {\n                pxMin = xAxis.toPixels(newMax - minRange - pointRange, true);\n            }\n            else if (this.grabbedRight) {\n                pxMax = xAxis.toPixels(newMin + minRange + pointRange, true);\n            }\n        }\n        else if (Navigator_defined(maxRange) &&\n            Navigator_correctFloat(currentRange - pointRange) > maxRange) {\n            if (this.grabbedLeft) {\n                pxMin = xAxis.toPixels(newMax - maxRange - pointRange, true);\n            }\n            else if (this.grabbedRight) {\n                pxMax = xAxis.toPixels(newMin + maxRange + pointRange, true);\n            }\n        }\n        // Handles are allowed to cross, but never exceed the plot area\n        navigator.zoomedMax = clamp(Math.max(pxMin, pxMax), 0, zoomedMax);\n        navigator.zoomedMin = clamp(navigator.fixedWidth ?\n            navigator.zoomedMax - navigator.fixedWidth :\n            Math.min(pxMin, pxMax), 0, zoomedMax);\n        navigator.range = navigator.zoomedMax - navigator.zoomedMin;\n        zoomedMax = Math.round(navigator.zoomedMax);\n        const zoomedMin = Math.round(navigator.zoomedMin);\n        if (navigatorEnabled) {\n            navigator.navigatorGroup.attr({\n                visibility: 'inherit'\n            });\n            // Place elements\n            verb = rendered && !navigator.hasDragged ? 'animate' : 'attr';\n            navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n            navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n            if (navigator.navigatorOptions.handles.enabled) {\n                navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                navigator.drawHandle(zoomedMax, 1, inverted, verb);\n            }\n        }\n        if (navigator.scrollbar) {\n            if (inverted) {\n                scrollbarTop = navigator.top - scrollButtonSize;\n                scrollbarLeft = navigator.left - scrollbarHeight +\n                    (navigatorEnabled || !scrollbarXAxis.opposite ? 0 :\n                        // Multiple axes has offsets:\n                        (scrollbarXAxis.titleOffset || 0) +\n                            // Self margin from the axis.title\n                            scrollbarXAxis.axisTitleMargin);\n                scrollbarHeight = navigatorSize + 2 * scrollButtonSize;\n            }\n            else {\n                scrollbarTop = navigator.top + (navigatorEnabled ?\n                    navigator.height :\n                    -scrollbarHeight);\n                scrollbarLeft = navigator.left - scrollButtonSize;\n            }\n            // Reposition scrollbar\n            navigator.scrollbar.position(scrollbarLeft, scrollbarTop, navigatorWidth, scrollbarHeight);\n            // Keep scale 0-1\n            navigator.scrollbar.setRange(\n            // Use real value, not rounded because range can be very small\n            // (#1716)\n            navigator.zoomedMin / (navigatorSize || 1), navigator.zoomedMax / (navigatorSize || 1));\n        }\n        navigator.rendered = true;\n        this.isDirty = false;\n        Navigator_fireEvent(this, 'afterRender');\n    }\n    /**\n     * Set up the mouse and touch events for the navigator\n     *\n     * @private\n     * @function Highcharts.Navigator#addMouseEvents\n     */\n    addMouseEvents() {\n        const navigator = this, chart = navigator.chart, container = chart.container;\n        let eventsToUnbind = [], mouseMoveHandler, mouseUpHandler;\n        /**\n         * Create mouse events' handlers.\n         * Make them as separate functions to enable wrapping them:\n         */\n        navigator.mouseMoveHandler = mouseMoveHandler = function (e) {\n            navigator.onMouseMove(e);\n        };\n        navigator.mouseUpHandler = mouseUpHandler = function (e) {\n            navigator.onMouseUp(e);\n        };\n        // Add shades and handles mousedown events\n        eventsToUnbind = navigator.getPartsEvents('mousedown');\n        eventsToUnbind.push(\n        // Add mouse move and mouseup events. These are bind to doc/div,\n        // because Navigator.grabbedSomething flags are stored in mousedown\n        // events\n        Navigator_addEvent(chart.renderTo, 'mousemove', mouseMoveHandler), Navigator_addEvent(container.ownerDocument, 'mouseup', mouseUpHandler), \n        // Touch events\n        Navigator_addEvent(chart.renderTo, 'touchmove', mouseMoveHandler), Navigator_addEvent(container.ownerDocument, 'touchend', mouseUpHandler));\n        eventsToUnbind.concat(navigator.getPartsEvents('touchstart'));\n        navigator.eventsToUnbind = eventsToUnbind;\n        // Data events\n        if (navigator.series && navigator.series[0]) {\n            eventsToUnbind.push(Navigator_addEvent(navigator.series[0].xAxis, 'foundExtremes', function () {\n                chart.navigator.modifyNavigatorAxisExtremes();\n            }));\n        }\n    }\n    /**\n     * Generate events for handles and masks\n     *\n     * @private\n     * @function Highcharts.Navigator#getPartsEvents\n     *\n     * @param {string} eventName\n     *        Event name handler, 'mousedown' or 'touchstart'\n     *\n     * @return {Array<Function>}\n     *         An array of functions to remove navigator functions from the\n     *         events again.\n     */\n    getPartsEvents(eventName) {\n        const navigator = this, events = [];\n        ['shades', 'handles'].forEach(function (name) {\n            navigator[name].forEach(function (navigatorItem, index) {\n                events.push(Navigator_addEvent(navigatorItem.element, eventName, function (e) {\n                    navigator[name + 'Mousedown'](e, index);\n                }));\n            });\n        });\n        return events;\n    }\n    /**\n     * Mousedown on a shaded mask, either:\n     *\n     * - will be stored for future drag&drop\n     *\n     * - will directly shift to a new range\n     *\n     * @private\n     * @function Highcharts.Navigator#shadesMousedown\n     *\n     * @param {Highcharts.PointerEventObject} e\n     *        Mouse event\n     *\n     * @param {number} index\n     *        Index of a mask in Navigator.shades array\n     */\n    shadesMousedown(e, index) {\n        e = this.chart.pointer?.normalize(e) || e;\n        const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, zoomedMin = navigator.zoomedMin, navigatorSize = navigator.size, range = navigator.range;\n        let navigatorPosition = navigator.left, chartX = e.chartX, fixedMax, fixedMin, ext, left;\n        // For inverted chart, swap some options:\n        if (chart.inverted) {\n            chartX = e.chartY;\n            navigatorPosition = navigator.top;\n        }\n        if (index === 1) {\n            // Store information for drag&drop\n            navigator.grabbedCenter = chartX;\n            navigator.fixedWidth = range;\n            navigator.dragOffset = chartX - zoomedMin;\n        }\n        else {\n            // Shift the range by clicking on shaded areas\n            left = chartX - navigatorPosition - range / 2;\n            if (index === 0) {\n                left = Math.max(0, left);\n            }\n            else if (index === 2 && left + range >= navigatorSize) {\n                left = navigatorSize - range;\n                if (navigator.reversedExtremes) {\n                    // #7713\n                    left -= range;\n                    fixedMin = navigator.getUnionExtremes().dataMin;\n                }\n                else {\n                    // #2293, #3543\n                    fixedMax = navigator.getUnionExtremes().dataMax;\n                }\n            }\n            if (left !== zoomedMin) { // It has actually moved\n                navigator.fixedWidth = range; // #1370\n                ext = xAxis.navigatorAxis.toFixedRange(left, left + range, fixedMin, fixedMax);\n                if (Navigator_defined(ext.min)) { // #7411\n                    Navigator_fireEvent(this, 'setRange', {\n                        min: Math.min(ext.min, ext.max),\n                        max: Math.max(ext.min, ext.max),\n                        redraw: true,\n                        eventArguments: {\n                            trigger: 'navigator'\n                        }\n                    });\n                }\n            }\n        }\n    }\n    /**\n     * Mousedown on a handle mask.\n     * Will store necessary information for drag&drop.\n     *\n     * @private\n     * @function Highcharts.Navigator#handlesMousedown\n     * @param {Highcharts.PointerEventObject} e\n     *        Mouse event\n     * @param {number} index\n     *        Index of a handle in Navigator.handles array\n     */\n    handlesMousedown(e, index) {\n        e = this.chart.pointer?.normalize(e) || e;\n        const navigator = this, chart = navigator.chart, baseXAxis = chart.xAxis[0], \n        // For reversed axes, min and max are changed,\n        // so the other extreme should be stored\n        reverse = navigator.reversedExtremes;\n        if (index === 0) {\n            // Grab the left handle\n            navigator.grabbedLeft = true;\n            navigator.otherHandlePos = navigator.zoomedMax;\n            navigator.fixedExtreme = reverse ? baseXAxis.min : baseXAxis.max;\n        }\n        else {\n            // Grab the right handle\n            navigator.grabbedRight = true;\n            navigator.otherHandlePos = navigator.zoomedMin;\n            navigator.fixedExtreme = reverse ? baseXAxis.max : baseXAxis.min;\n        }\n        chart.setFixedRange(void 0);\n    }\n    /**\n     * Mouse move event based on x/y mouse position.\n     *\n     * @private\n     * @function Highcharts.Navigator#onMouseMove\n     *\n     * @param {Highcharts.PointerEventObject} e\n     *        Mouse event\n     */\n    onMouseMove(e) {\n        const navigator = this, chart = navigator.chart, navigatorSize = navigator.navigatorSize, range = navigator.range, dragOffset = navigator.dragOffset, inverted = chart.inverted;\n        let left = navigator.left, chartX;\n        // In iOS, a mousemove event with e.pageX === 0 is fired when holding\n        // the finger down in the center of the scrollbar. This should be\n        // ignored.\n        if (!e.touches || e.touches[0].pageX !== 0) { // #4696\n            e = chart.pointer?.normalize(e) || e;\n            chartX = e.chartX;\n            // Swap some options for inverted chart\n            if (inverted) {\n                left = navigator.top;\n                chartX = e.chartY;\n            }\n            // Drag left handle or top handle\n            if (navigator.grabbedLeft) {\n                navigator.hasDragged = true;\n                navigator.render(0, 0, chartX - left, navigator.otherHandlePos);\n                // Drag right handle or bottom handle\n            }\n            else if (navigator.grabbedRight) {\n                navigator.hasDragged = true;\n                navigator.render(0, 0, navigator.otherHandlePos, chartX - left);\n                // Drag scrollbar or open area in navigator\n            }\n            else if (navigator.grabbedCenter) {\n                navigator.hasDragged = true;\n                if (chartX < dragOffset) { // Outside left\n                    chartX = dragOffset;\n                    // Outside right\n                }\n                else if (chartX >\n                    navigatorSize + dragOffset - range) {\n                    chartX = navigatorSize + dragOffset - range;\n                }\n                navigator.render(0, 0, chartX - dragOffset, chartX - dragOffset + range);\n            }\n            if (navigator.hasDragged &&\n                navigator.scrollbar &&\n                Navigator_pick(navigator.scrollbar.options.liveRedraw, \n                // By default, don't run live redraw on touch\n                // devices or if the chart is in boost.\n                !Navigator_isTouchDevice &&\n                    !this.chart.boosted)) {\n                e.DOMType = e.type;\n                setTimeout(function () {\n                    navigator.onMouseUp(e);\n                }, 0);\n            }\n        }\n    }\n    /**\n     * Mouse up event based on x/y mouse position.\n     *\n     * @private\n     * @function Highcharts.Navigator#onMouseUp\n     * @param {Highcharts.PointerEventObject} e\n     *        Mouse event\n     */\n    onMouseUp(e) {\n        const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, scrollbar = navigator.scrollbar, DOMEvent = e.DOMEvent || e, inverted = chart.inverted, verb = navigator.rendered && !navigator.hasDragged ?\n            'animate' : 'attr';\n        let zoomedMax, zoomedMin, unionExtremes, fixedMin, fixedMax, ext;\n        if (\n        // MouseUp is called for both, navigator and scrollbar (that order),\n        // which causes calling afterSetExtremes twice. Prevent first call\n        // by checking if scrollbar is going to set new extremes (#6334)\n        (navigator.hasDragged && (!scrollbar || !scrollbar.hasDragged)) ||\n            e.trigger === 'scrollbar') {\n            unionExtremes = navigator.getUnionExtremes();\n            // When dragging one handle, make sure the other one doesn't change\n            if (navigator.zoomedMin === navigator.otherHandlePos) {\n                fixedMin = navigator.fixedExtreme;\n            }\n            else if (navigator.zoomedMax === navigator.otherHandlePos) {\n                fixedMax = navigator.fixedExtreme;\n            }\n            // Snap to right edge (#4076)\n            if (navigator.zoomedMax === navigator.size) {\n                fixedMax = navigator.reversedExtremes ?\n                    unionExtremes.dataMin :\n                    unionExtremes.dataMax;\n            }\n            // Snap to left edge (#7576)\n            if (navigator.zoomedMin === 0) {\n                fixedMin = navigator.reversedExtremes ?\n                    unionExtremes.dataMax :\n                    unionExtremes.dataMin;\n            }\n            ext = xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin, navigator.zoomedMax, fixedMin, fixedMax);\n            if (Navigator_defined(ext.min)) {\n                Navigator_fireEvent(this, 'setRange', {\n                    min: Math.min(ext.min, ext.max),\n                    max: Math.max(ext.min, ext.max),\n                    redraw: true,\n                    animation: navigator.hasDragged ? false : null,\n                    eventArguments: {\n                        trigger: 'navigator',\n                        triggerOp: 'navigator-drag',\n                        DOMEvent: DOMEvent // #1838\n                    }\n                });\n            }\n        }\n        if (e.DOMType !== 'mousemove' &&\n            e.DOMType !== 'touchmove') {\n            navigator.grabbedLeft = navigator.grabbedRight =\n                navigator.grabbedCenter = navigator.fixedWidth =\n                    navigator.fixedExtreme = navigator.otherHandlePos =\n                        navigator.hasDragged = navigator.dragOffset = null;\n        }\n        // Update position of navigator shades, outline and handles (#12573)\n        if (navigator.navigatorEnabled &&\n            Navigator_isNumber(navigator.zoomedMin) &&\n            Navigator_isNumber(navigator.zoomedMax)) {\n            zoomedMin = Math.round(navigator.zoomedMin);\n            zoomedMax = Math.round(navigator.zoomedMax);\n            if (navigator.shades) {\n                navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n            }\n            if (navigator.outline) {\n                navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n            }\n            if (navigator.navigatorOptions.handles.enabled &&\n                Object.keys(navigator.handles).length ===\n                    navigator.handles.length) {\n                navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                navigator.drawHandle(zoomedMax, 1, inverted, verb);\n            }\n        }\n    }\n    /**\n     * Removes the event handlers attached previously with addEvents.\n     *\n     * @private\n     * @function Highcharts.Navigator#removeEvents\n     */\n    removeEvents() {\n        if (this.eventsToUnbind) {\n            this.eventsToUnbind.forEach(function (unbind) {\n                unbind();\n            });\n            this.eventsToUnbind = void 0;\n        }\n        this.removeBaseSeriesEvents();\n    }\n    /**\n     * Remove data events.\n     *\n     * @private\n     * @function Highcharts.Navigator#removeBaseSeriesEvents\n     */\n    removeBaseSeriesEvents() {\n        const baseSeries = this.baseSeries || [];\n        if (this.navigatorEnabled && baseSeries[0]) {\n            if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                baseSeries.forEach(function (series) {\n                    Navigator_removeEvent(series, 'updatedData', this.updatedDataHandler);\n                }, this);\n            }\n            // We only listen for extremes-events on the first baseSeries\n            if (baseSeries[0].xAxis) {\n                Navigator_removeEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes);\n            }\n        }\n    }\n    /**\n     * Calculate the navigator xAxis offsets\n     *\n     * @private\n     */\n    getXAxisOffsets() {\n        return (this.chart.inverted ?\n            [this.scrollButtonSize, 0, -this.scrollButtonSize, 0] :\n            [0, -this.scrollButtonSize, 0, this.scrollButtonSize]);\n    }\n    /**\n     * Initialize the Navigator object\n     *\n     * @private\n     * @function Highcharts.Navigator#init\n     */\n    init(chart) {\n        const chartOptions = chart.options, navigatorOptions = chartOptions.navigator || {}, navigatorEnabled = navigatorOptions.enabled, scrollbarOptions = chartOptions.scrollbar || {}, scrollbarEnabled = scrollbarOptions.enabled, height = navigatorEnabled && navigatorOptions.height || 0, scrollbarHeight = scrollbarEnabled && scrollbarOptions.height || 0, scrollButtonSize = scrollbarOptions.buttonsEnabled && scrollbarHeight || 0;\n        this.handles = [];\n        this.shades = [];\n        this.chart = chart;\n        this.setBaseSeries();\n        this.height = height;\n        this.scrollbarHeight = scrollbarHeight;\n        this.scrollButtonSize = scrollButtonSize;\n        this.scrollbarEnabled = scrollbarEnabled;\n        this.navigatorEnabled = navigatorEnabled;\n        this.navigatorOptions = navigatorOptions;\n        this.scrollbarOptions = scrollbarOptions;\n        this.setOpposite();\n        const navigator = this, baseSeries = navigator.baseSeries, xAxisIndex = chart.xAxis.length, yAxisIndex = chart.yAxis.length, baseXaxis = baseSeries && baseSeries[0] && baseSeries[0].xAxis ||\n            chart.xAxis[0] || { options: {} };\n        chart.isDirtyBox = true;\n        if (navigator.navigatorEnabled) {\n            const offsets = this.getXAxisOffsets();\n            // An x axis is required for scrollbar also\n            navigator.xAxis = new (external_highcharts_src_js_default_Axis_default())(chart, Navigator_merge({\n                // Inherit base xAxis' break, ordinal options and overscroll\n                breaks: baseXaxis.options.breaks,\n                ordinal: baseXaxis.options.ordinal,\n                overscroll: baseXaxis.options.overscroll\n            }, navigatorOptions.xAxis, {\n                type: 'datetime',\n                yAxis: navigatorOptions.yAxis?.id,\n                index: xAxisIndex,\n                isInternal: true,\n                offset: 0,\n                keepOrdinalPadding: true, // #2436\n                startOnTick: false,\n                endOnTick: false,\n                // Inherit base xAxis' padding when ordinal is false (#16915).\n                minPadding: baseXaxis.options.ordinal ? 0 :\n                    baseXaxis.options.minPadding,\n                maxPadding: baseXaxis.options.ordinal ? 0 :\n                    baseXaxis.options.maxPadding,\n                zoomEnabled: false\n            }, chart.inverted ? {\n                offsets,\n                width: height\n            } : {\n                offsets,\n                height\n            }), 'xAxis');\n            navigator.yAxis = new (external_highcharts_src_js_default_Axis_default())(chart, Navigator_merge(navigatorOptions.yAxis, {\n                alignTicks: false,\n                offset: 0,\n                index: yAxisIndex,\n                isInternal: true,\n                reversed: Navigator_pick((navigatorOptions.yAxis &&\n                    navigatorOptions.yAxis.reversed), (chart.yAxis[0] && chart.yAxis[0].reversed), false), // #14060\n                zoomEnabled: false\n            }, chart.inverted ? {\n                width: height\n            } : {\n                height: height\n            }), 'yAxis');\n            // If we have a base series, initialize the navigator series\n            if (baseSeries || navigatorOptions.series.data) {\n                navigator.updateNavigatorSeries(false);\n                // If not, set up an event to listen for added series\n            }\n            else if (chart.series.length === 0) {\n                navigator.unbindRedraw = Navigator_addEvent(chart, 'beforeRedraw', function () {\n                    // We've got one, now add it as base\n                    if (chart.series.length > 0 && !navigator.series) {\n                        navigator.setBaseSeries();\n                        navigator.unbindRedraw(); // Reset\n                    }\n                });\n            }\n            navigator.reversedExtremes = (chart.inverted && !navigator.xAxis.reversed) || (!chart.inverted && navigator.xAxis.reversed);\n            // Render items, so we can bind events to them:\n            navigator.renderElements();\n            // Add mouse events\n            navigator.addMouseEvents();\n            // In case of scrollbar only, fake an x axis to get translation\n        }\n        else {\n            navigator.xAxis = {\n                chart,\n                navigatorAxis: {\n                    fake: true\n                },\n                translate: function (value, reverse) {\n                    const axis = chart.xAxis[0], ext = axis.getExtremes(), scrollTrackWidth = axis.len - 2 * scrollButtonSize, min = numExt('min', axis.options.min, ext.dataMin), valueRange = numExt('max', axis.options.max, ext.dataMax) - min;\n                    return reverse ?\n                        // From pixel to value\n                        (value * valueRange / scrollTrackWidth) + min :\n                        // From value to pixel\n                        scrollTrackWidth * (value - min) / valueRange;\n                },\n                toPixels: function (value) {\n                    return this.translate(value);\n                },\n                toValue: function (value) {\n                    return this.translate(value, true);\n                }\n            };\n            navigator.xAxis.navigatorAxis.axis = navigator.xAxis;\n            navigator.xAxis.navigatorAxis.toFixedRange = (NavigatorAxisComposition.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis));\n        }\n        // Initialize the scrollbar\n        if (chart.options.scrollbar?.enabled) {\n            const options = Navigator_merge(chart.options.scrollbar, { vertical: chart.inverted });\n            if (!Navigator_isNumber(options.margin)) {\n                options.margin = chart.inverted ? -3 : 3;\n            }\n            chart.scrollbar = navigator.scrollbar = new Scrollbar_Scrollbar(chart.renderer, options, chart);\n            Navigator_addEvent(navigator.scrollbar, 'changed', function (e) {\n                const range = navigator.size, to = range * this.to, from = range * this.from;\n                navigator.hasDragged = navigator.scrollbar.hasDragged;\n                navigator.render(0, 0, from, to);\n                if (this.shouldUpdateExtremes(e.DOMType)) {\n                    setTimeout(function () {\n                        navigator.onMouseUp(e);\n                    });\n                }\n            });\n        }\n        // Add data events\n        navigator.addBaseSeriesEvents();\n        // Add redraw events\n        navigator.addChartEvents();\n    }\n    /**\n     * Set the opposite property on navigator\n     *\n     * @private\n     */\n    setOpposite() {\n        const navigatorOptions = this.navigatorOptions, navigatorEnabled = this.navigatorEnabled, chart = this.chart;\n        this.opposite = Navigator_pick(navigatorOptions.opposite, Boolean(!navigatorEnabled && chart.inverted)); // #6262\n    }\n    /**\n     * Get the union data extremes of the chart - the outer data extremes of the\n     * base X axis and the navigator axis.\n     *\n     * @private\n     * @function Highcharts.Navigator#getUnionExtremes\n     */\n    getUnionExtremes(returnFalseOnNoBaseSeries) {\n        const baseAxis = this.chart.xAxis[0], time = this.chart.time, navAxis = this.xAxis, navAxisOptions = navAxis.options, baseAxisOptions = baseAxis.options;\n        let ret;\n        if (!returnFalseOnNoBaseSeries || baseAxis.dataMin !== null) {\n            ret = {\n                dataMin: Navigator_pick(// #4053\n                time.parse(navAxisOptions?.min), numExt('min', time.parse(baseAxisOptions.min), baseAxis.dataMin, navAxis.dataMin, navAxis.min)),\n                dataMax: Navigator_pick(time.parse(navAxisOptions?.max), numExt('max', time.parse(baseAxisOptions.max), baseAxis.dataMax, navAxis.dataMax, navAxis.max))\n            };\n        }\n        return ret;\n    }\n    /**\n     * Set the base series and update the navigator series from this. With a bit\n     * of modification we should be able to make this an API method to be called\n     * from the outside\n     *\n     * @private\n     * @function Highcharts.Navigator#setBaseSeries\n     * @param {Highcharts.SeriesOptionsType} [baseSeriesOptions]\n     *        Additional series options for a navigator\n     * @param {boolean} [redraw]\n     *        Whether to redraw after update.\n     */\n    setBaseSeries(baseSeriesOptions, redraw) {\n        const chart = this.chart, baseSeries = this.baseSeries = [];\n        baseSeriesOptions = (baseSeriesOptions ||\n            chart.options && chart.options.navigator.baseSeries ||\n            (chart.series.length ?\n                // Find the first non-navigator series (#8430)\n                find(chart.series, (s) => (!s.options.isInternal)).index :\n                0));\n        // Iterate through series and add the ones that should be shown in\n        // navigator.\n        (chart.series || []).forEach((series, i) => {\n            if (\n            // Don't include existing nav series\n            !series.options.isInternal &&\n                (series.options.showInNavigator ||\n                    (i === baseSeriesOptions ||\n                        series.options.id === baseSeriesOptions) &&\n                        series.options.showInNavigator !== false)) {\n                baseSeries.push(series);\n            }\n        });\n        // When run after render, this.xAxis already exists\n        if (this.xAxis && !this.xAxis.navigatorAxis.fake) {\n            this.updateNavigatorSeries(true, redraw);\n        }\n    }\n    /**\n     * Update series in the navigator from baseSeries, adding new if does not\n     * exist.\n     *\n     * @private\n     * @function Highcharts.Navigator.updateNavigatorSeries\n     */\n    updateNavigatorSeries(addEvents, redraw) {\n        const navigator = this, chart = navigator.chart, baseSeries = navigator.baseSeries, navSeriesMixin = {\n            enableMouseTracking: false,\n            index: null, // #6162\n            linkedTo: null, // #6734\n            group: 'nav', // For columns\n            padXAxis: false,\n            xAxis: this.navigatorOptions.xAxis?.id,\n            yAxis: this.navigatorOptions.yAxis?.id,\n            showInLegend: false,\n            stacking: void 0, // #4823\n            isInternal: true,\n            states: {\n                inactive: {\n                    opacity: 1\n                }\n            }\n        }, \n        // Remove navigator series that are no longer in the baseSeries\n        navigatorSeries = navigator.series =\n            (navigator.series || []).filter((navSeries) => {\n                const base = navSeries.baseSeries;\n                if (baseSeries.indexOf(base) < 0) { // Not in array\n                    // If there is still a base series connected to this\n                    // series, remove event handler and reference.\n                    if (base) {\n                        Navigator_removeEvent(base, 'updatedData', navigator.updatedDataHandler);\n                        delete base.navigatorSeries;\n                    }\n                    // Kill the nav series. It may already have been\n                    // destroyed (#8715).\n                    if (navSeries.chart) {\n                        navSeries.destroy();\n                    }\n                    return false;\n                }\n                return true;\n            });\n        let baseOptions, mergedNavSeriesOptions, chartNavigatorSeriesOptions = navigator.navigatorOptions.series, baseNavigatorOptions;\n        // Go through each base series and merge the options to create new\n        // series\n        if (baseSeries && baseSeries.length) {\n            baseSeries.forEach((base) => {\n                const linkedNavSeries = base.navigatorSeries, userNavOptions = Navigator_extend(\n                // Grab color and visibility from base as default\n                {\n                    color: base.color,\n                    visible: base.visible\n                }, !Navigator_isArray(chartNavigatorSeriesOptions) ?\n                    chartNavigatorSeriesOptions :\n                    Navigator_defaultOptions.navigator.series);\n                // Don't update if the series exists in nav and we have disabled\n                // adaptToUpdatedData.\n                if (linkedNavSeries &&\n                    navigator.navigatorOptions.adaptToUpdatedData === false) {\n                    return;\n                }\n                navSeriesMixin.name = 'Navigator ' + baseSeries.length;\n                baseOptions = base.options || {};\n                baseNavigatorOptions = baseOptions.navigatorOptions || {};\n                // The dataLabels options are not merged correctly\n                // if the settings are an array, #13847.\n                userNavOptions.dataLabels = splat(userNavOptions.dataLabels);\n                mergedNavSeriesOptions = Navigator_merge(baseOptions, navSeriesMixin, userNavOptions, baseNavigatorOptions);\n                // Once nav series type is resolved, pick correct pointRange\n                mergedNavSeriesOptions.pointRange = Navigator_pick(\n                // Stricte set pointRange in options\n                userNavOptions.pointRange, baseNavigatorOptions.pointRange, \n                // Fallback to default values, e.g. `null` for column\n                Navigator_defaultOptions.plotOptions[mergedNavSeriesOptions.type || 'line'].pointRange);\n                // Merge data separately. Do a slice to avoid mutating the\n                // navigator options from base series (#4923).\n                const navigatorSeriesData = baseNavigatorOptions.data || userNavOptions.data;\n                navigator.hasNavigatorData =\n                    navigator.hasNavigatorData || !!navigatorSeriesData;\n                mergedNavSeriesOptions.data = (navigatorSeriesData ||\n                    baseOptions.data?.slice(0));\n                // Update or add the series\n                if (linkedNavSeries && linkedNavSeries.options) {\n                    linkedNavSeries.update(mergedNavSeriesOptions, redraw);\n                }\n                else {\n                    base.navigatorSeries = chart.initSeries(mergedNavSeriesOptions);\n                    // Set data on initial run with dataSorting enabled (#20318)\n                    chart.setSortedData();\n                    base.navigatorSeries.baseSeries = base; // Store ref\n                    navigatorSeries.push(base.navigatorSeries);\n                }\n            });\n        }\n        // If user has defined data (and no base series) or explicitly defined\n        // navigator.series as an array, we create these series on top of any\n        // base series.\n        if (chartNavigatorSeriesOptions.data &&\n            !(baseSeries && baseSeries.length) ||\n            Navigator_isArray(chartNavigatorSeriesOptions)) {\n            navigator.hasNavigatorData = false;\n            // Allow navigator.series to be an array\n            chartNavigatorSeriesOptions =\n                splat(chartNavigatorSeriesOptions);\n            chartNavigatorSeriesOptions.forEach((userSeriesOptions, i) => {\n                navSeriesMixin.name =\n                    'Navigator ' + (navigatorSeries.length + 1);\n                mergedNavSeriesOptions = Navigator_merge(Navigator_defaultOptions.navigator.series, {\n                    // Since we don't have a base series to pull color from,\n                    // try to fake it by using color from series with same\n                    // index. Otherwise pull from the colors array. We need\n                    // an explicit color as otherwise updates will increment\n                    // color counter and we'll get a new color for each\n                    // update of the nav series.\n                    color: chart.series[i] &&\n                        !chart.series[i].options.isInternal &&\n                        chart.series[i].color ||\n                        chart.options.colors[i] ||\n                        chart.options.colors[0]\n                }, navSeriesMixin, userSeriesOptions);\n                mergedNavSeriesOptions.data = userSeriesOptions.data;\n                if (mergedNavSeriesOptions.data) {\n                    navigator.hasNavigatorData = true;\n                    navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions));\n                }\n            });\n        }\n        if (addEvents) {\n            this.addBaseSeriesEvents();\n        }\n    }\n    /**\n     * Add data events.\n     * For example when main series is updated we need to recalculate extremes\n     *\n     * @private\n     * @function Highcharts.Navigator#addBaseSeriesEvent\n     */\n    addBaseSeriesEvents() {\n        const navigator = this, baseSeries = navigator.baseSeries || [];\n        // Bind modified extremes event to first base's xAxis only.\n        // In event of > 1 base-xAxes, the navigator will ignore those.\n        // Adding this multiple times to the same axis is no problem, as\n        // duplicates should be discarded by the browser.\n        if (baseSeries[0] && baseSeries[0].xAxis) {\n            baseSeries[0].eventsToUnbind.push(Navigator_addEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes));\n        }\n        baseSeries.forEach((base) => {\n            // Link base series show/hide to navigator series visibility\n            base.eventsToUnbind.push(Navigator_addEvent(base, 'show', function () {\n                if (this.navigatorSeries) {\n                    this.navigatorSeries.setVisible(true, false);\n                }\n            }));\n            base.eventsToUnbind.push(Navigator_addEvent(base, 'hide', function () {\n                if (this.navigatorSeries) {\n                    this.navigatorSeries.setVisible(false, false);\n                }\n            }));\n            // Respond to updated data in the base series, unless explicitly\n            // not adapting to data changes.\n            if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                if (base.xAxis) {\n                    base.eventsToUnbind.push(Navigator_addEvent(base, 'updatedData', this.updatedDataHandler));\n                }\n            }\n            // Handle series removal\n            base.eventsToUnbind.push(Navigator_addEvent(base, 'remove', function () {\n                if (baseSeries) {\n                    erase(baseSeries, base); // #21043\n                }\n                if (this.navigatorSeries && navigator.series) {\n                    erase(navigator.series, this.navigatorSeries);\n                    if (Navigator_defined(this.navigatorSeries.options)) {\n                        this.navigatorSeries.remove(false);\n                    }\n                    delete this.navigatorSeries;\n                }\n            }));\n        });\n    }\n    /**\n     * Get minimum from all base series connected to the navigator\n     * @private\n     * @param {number} currentSeriesMin\n     *        Minium from the current series\n     * @return {number}\n     *         Minimum from all series\n     */\n    getBaseSeriesMin(currentSeriesMin) {\n        return this.baseSeries.reduce(function (min, series) {\n            // #10193\n            return Math.min(min, series.getColumn('x')[0] ?? min);\n        }, currentSeriesMin);\n    }\n    /**\n     * Set the navigator x axis extremes to reflect the total. The navigator\n     * extremes should always be the extremes of the union of all series in the\n     * chart as well as the navigator series.\n     *\n     * @private\n     * @function Highcharts.Navigator#modifyNavigatorAxisExtremes\n     */\n    modifyNavigatorAxisExtremes() {\n        const xAxis = this.xAxis;\n        if (typeof xAxis.getExtremes !== 'undefined') {\n            const unionExtremes = this.getUnionExtremes(true);\n            if (unionExtremes &&\n                (unionExtremes.dataMin !== xAxis.min ||\n                    unionExtremes.dataMax !== xAxis.max)) {\n                xAxis.min = unionExtremes.dataMin;\n                xAxis.max = unionExtremes.dataMax;\n            }\n        }\n    }\n    /**\n     * Hook to modify the base axis extremes with information from the Navigator\n     *\n     * @private\n     * @function Highcharts.Navigator#modifyBaseAxisExtremes\n     */\n    modifyBaseAxisExtremes() {\n        const baseXAxis = this, navigator = baseXAxis.chart.navigator, baseExtremes = baseXAxis.getExtremes(), baseMin = baseExtremes.min, baseMax = baseExtremes.max, baseDataMin = baseExtremes.dataMin, baseDataMax = baseExtremes.dataMax, range = baseMax - baseMin, stickToMin = navigator.stickToMin, stickToMax = navigator.stickToMax, overscroll = Navigator_pick(baseXAxis.ordinal?.convertOverscroll(baseXAxis.options.overscroll), 0), navigatorSeries = navigator.series && navigator.series[0], hasSetExtremes = !!baseXAxis.setExtremes, \n        // When the extremes have been set by range selector button, don't\n        // stick to min or max. The range selector buttons will handle the\n        // extremes. (#5489)\n        unmutable = baseXAxis.eventArgs &&\n            baseXAxis.eventArgs.trigger === 'rangeSelectorButton';\n        let newMax, newMin;\n        if (!unmutable) {\n            // If the zoomed range is already at the min, move it to the right\n            // as new data comes in\n            if (stickToMin) {\n                newMin = baseDataMin;\n                newMax = newMin + range;\n            }\n            // If the zoomed range is already at the max, move it to the right\n            // as new data comes in\n            if (stickToMax) {\n                newMax = baseDataMax + overscroll;\n                // If stickToMin is true, the new min value is set above\n                if (!stickToMin) {\n                    newMin = Math.max(baseDataMin, // Don't go below data extremes (#13184)\n                    newMax - range, navigator.getBaseSeriesMin(navigatorSeries && navigatorSeries.xData ?\n                        navigatorSeries.xData[0] :\n                        -Number.MAX_VALUE));\n                }\n            }\n            // Update the extremes\n            if (hasSetExtremes && (stickToMin || stickToMax)) {\n                if (Navigator_isNumber(newMin)) {\n                    baseXAxis.min = baseXAxis.userMin = newMin;\n                    baseXAxis.max = baseXAxis.userMax = newMax;\n                }\n            }\n        }\n        // Reset\n        navigator.stickToMin =\n            navigator.stickToMax = null;\n    }\n    /**\n     * Handler for updated data on the base series. When data is modified, the\n     * navigator series must reflect it. This is called from the Chart.redraw\n     * function before axis and series extremes are computed.\n     *\n     * @private\n     * @function Highcharts.Navigator#updateDataHandler\n     */\n    updatedDataHandler() {\n        const navigator = this.chart.navigator, baseSeries = this, navigatorSeries = this.navigatorSeries, shouldStickToMax = navigator.reversedExtremes ?\n            Math.round(navigator.zoomedMin) === 0 :\n            Math.round(navigator.zoomedMax) >= Math.round(navigator.size);\n        // If the scrollbar is scrolled all the way to the right, keep right as\n        // new data comes in, unless user set navigator.stickToMax to false.\n        navigator.stickToMax = Navigator_pick(this.chart.options.navigator &&\n            this.chart.options.navigator.stickToMax, shouldStickToMax);\n        navigator.stickToMin = navigator.shouldStickToMin(baseSeries, navigator);\n        // Set the navigator series data to the new data of the base series\n        if (navigatorSeries && !navigator.hasNavigatorData) {\n            navigatorSeries.options.pointStart = baseSeries.getColumn('x')[0];\n            navigatorSeries.setData(baseSeries.options.data, false, null, false); // #5414\n        }\n    }\n    /**\n     * Detect if the zoomed area should stick to the minimum, #14742.\n     *\n     * @private\n     * @function Highcharts.Navigator#shouldStickToMin\n     */\n    shouldStickToMin(baseSeries, navigator) {\n        const xDataMin = navigator.getBaseSeriesMin(baseSeries.getColumn('x')[0]), xAxis = baseSeries.xAxis, max = xAxis.max, min = xAxis.min, range = xAxis.options.range;\n        let stickToMin = true;\n        if (Navigator_isNumber(max) && Navigator_isNumber(min)) {\n            // If range declared, stick to the minimum only if the range\n            // is smaller than the data set range.\n            if (range && max - xDataMin > 0) {\n                stickToMin = max - xDataMin < range;\n            }\n            else {\n                // If the current axis minimum falls outside the new\n                // updated dataset, we must adjust.\n                stickToMin = min <= xDataMin;\n            }\n        }\n        else {\n            stickToMin = false; // #15864\n        }\n        return stickToMin;\n    }\n    /**\n     * Add chart events, like redrawing navigator, when chart requires that.\n     *\n     * @private\n     * @function Highcharts.Navigator#addChartEvents\n     */\n    addChartEvents() {\n        if (!this.eventsToUnbind) {\n            this.eventsToUnbind = [];\n        }\n        this.eventsToUnbind.push(\n        // Move the scrollbar after redraw, like after data updata even if\n        // axes don't redraw\n        Navigator_addEvent(this.chart, 'redraw', function () {\n            const navigator = this.navigator, xAxis = navigator && (navigator.baseSeries &&\n                navigator.baseSeries[0] &&\n                navigator.baseSeries[0].xAxis ||\n                this.xAxis[0]); // #5709, #13114\n            if (xAxis) {\n                navigator.render(xAxis.min, xAxis.max);\n            }\n        }), \n        // Make room for the navigator, can be placed around the chart:\n        Navigator_addEvent(this.chart, 'getMargins', function () {\n            const chart = this, navigator = chart.navigator;\n            let marginName = navigator.opposite ?\n                'plotTop' : 'marginBottom';\n            if (chart.inverted) {\n                marginName = navigator.opposite ?\n                    'marginRight' : 'plotLeft';\n            }\n            chart[marginName] = (chart[marginName] || 0) + (navigator.navigatorEnabled || !chart.inverted ?\n                navigator.height +\n                    (this.scrollbar?.options.margin || 0) +\n                    navigator.scrollbarHeight : 0) + (navigator.navigatorOptions.margin || 0);\n        }), Navigator_addEvent(Navigator, 'setRange', function (e) {\n            this.chart.xAxis[0].setExtremes(e.min, e.max, e.redraw, e.animation, e.eventArguments);\n        }));\n    }\n    /**\n     * Destroys allocated elements.\n     *\n     * @private\n     * @function Highcharts.Navigator#destroy\n     */\n    destroy() {\n        // Disconnect events added in addEvents\n        this.removeEvents();\n        if (this.xAxis) {\n            erase(this.chart.xAxis, this.xAxis);\n            erase(this.chart.axes, this.xAxis);\n        }\n        if (this.yAxis) {\n            erase(this.chart.yAxis, this.yAxis);\n            erase(this.chart.axes, this.yAxis);\n        }\n        // Destroy series\n        (this.series || []).forEach((s) => {\n            if (s.destroy) {\n                s.destroy();\n            }\n        });\n        // Destroy properties\n        [\n            'series', 'xAxis', 'yAxis', 'shades', 'outline', 'scrollbarTrack',\n            'scrollbarRifles', 'scrollbarGroup', 'scrollbar', 'navigatorGroup',\n            'rendered'\n        ].forEach((prop) => {\n            if (this[prop] && this[prop].destroy) {\n                this[prop].destroy();\n            }\n            this[prop] = null;\n        });\n        // Destroy elements in collection\n        [this.handles].forEach((coll) => {\n            Navigator_destroyObjectProperties(coll);\n        });\n        // Clean up linked series\n        this.baseSeries.forEach((s) => {\n            s.navigatorSeries = void 0;\n        });\n        this.navigatorEnabled = false;\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Navigator_Navigator = (Navigator);\n\n;// ./code/es-modules/Data/ColumnUtils.js\n/* *\n *\n *  (c) 2020-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Dawid Dragula\n *\n * */\n/**\n * Utility functions for columns that can be either arrays or typed arrays.\n * @private\n */\nvar ColumnUtils;\n(function (ColumnUtils) {\n    /* *\n    *\n    *  Declarations\n    *\n    * */\n    /* *\n    *\n    * Functions\n    *\n    * */\n    /**\n     * Sets the length of the column array.\n     *\n     * @param {DataTable.Column} column\n     * Column to be modified.\n     *\n     * @param {number} length\n     * New length of the column.\n     *\n     * @param {boolean} asSubarray\n     * If column is a typed array, return a subarray instead of a new array. It\n     * is faster `O(1)`, but the entire buffer will be kept in memory until all\n     * views to it are destroyed. Default is `false`.\n     *\n     * @return {DataTable.Column}\n     * Modified column.\n     *\n     * @private\n     */\n    function setLength(column, length, asSubarray) {\n        if (Array.isArray(column)) {\n            column.length = length;\n            return column;\n        }\n        return column[asSubarray ? 'subarray' : 'slice'](0, length);\n    }\n    ColumnUtils.setLength = setLength;\n    /**\n     * Splices a column array.\n     *\n     * @param {DataTable.Column} column\n     * Column to be modified.\n     *\n     * @param {number} start\n     * Index at which to start changing the array.\n     *\n     * @param {number} deleteCount\n     * An integer indicating the number of old array elements to remove.\n     *\n     * @param {boolean} removedAsSubarray\n     * If column is a typed array, return a subarray instead of a new array. It\n     * is faster `O(1)`, but the entire buffer will be kept in memory until all\n     * views to it are destroyed. Default is `true`.\n     *\n     * @param {Array<number>|TypedArray} items\n     * The elements to add to the array, beginning at the start index. If you\n     * don't specify any elements, `splice()` will only remove elements from the\n     * array.\n     *\n     * @return {SpliceResult}\n     * Object containing removed elements and the modified column.\n     *\n     * @private\n     */\n    function splice(column, start, deleteCount, removedAsSubarray, items = []) {\n        if (Array.isArray(column)) {\n            if (!Array.isArray(items)) {\n                items = Array.from(items);\n            }\n            return {\n                removed: column.splice(start, deleteCount, ...items),\n                array: column\n            };\n        }\n        const Constructor = Object.getPrototypeOf(column)\n            .constructor;\n        const removed = column[removedAsSubarray ? 'subarray' : 'slice'](start, start + deleteCount);\n        const newLength = column.length - deleteCount + items.length;\n        const result = new Constructor(newLength);\n        result.set(column.subarray(0, start), 0);\n        result.set(items, start);\n        result.set(column.subarray(start + deleteCount), start + items.length);\n        return {\n            removed: removed,\n            array: result\n        };\n    }\n    ColumnUtils.splice = splice;\n})(ColumnUtils || (ColumnUtils = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Data_ColumnUtils = (ColumnUtils);\n\n;// ./code/es-modules/Data/DataTableCore.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *  - Gøran Slettemark\n *  - Torstein Hønsi\n *\n * */\n\n\nconst { setLength, splice } = Data_ColumnUtils;\n\nconst { fireEvent: DataTableCore_fireEvent, objectEach, uniqueKey } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * Class to manage columns and rows in a table structure. It provides methods\n * to add, remove, and manipulate columns and rows, as well as to retrieve data\n * from specific cells.\n *\n * @class\n * @name Highcharts.DataTable\n *\n * @param {Highcharts.DataTableOptions} [options]\n * Options to initialize the new DataTable instance.\n */\nclass DataTableCore {\n    /**\n     * Constructs an instance of the DataTable class.\n     *\n     * @example\n     * const dataTable = new Highcharts.DataTableCore({\n     *   columns: {\n     *     year: [2020, 2021, 2022, 2023],\n     *     cost: [11, 13, 12, 14],\n     *     revenue: [12, 15, 14, 18]\n     *   }\n     * });\n\n     *\n     * @param {Highcharts.DataTableOptions} [options]\n     * Options to initialize the new DataTable instance.\n     */\n    constructor(options = {}) {\n        /**\n         * Whether the ID was automatic generated or given in the constructor.\n         *\n         * @name Highcharts.DataTable#autoId\n         * @type {boolean}\n         */\n        this.autoId = !options.id;\n        this.columns = {};\n        /**\n         * ID of the table for identification purposes.\n         *\n         * @name Highcharts.DataTable#id\n         * @type {string}\n         */\n        this.id = (options.id || uniqueKey());\n        this.modified = this;\n        this.rowCount = 0;\n        this.versionTag = uniqueKey();\n        let rowCount = 0;\n        objectEach(options.columns || {}, (column, columnName) => {\n            this.columns[columnName] = column.slice();\n            rowCount = Math.max(rowCount, column.length);\n        });\n        this.applyRowCount(rowCount);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Applies a row count to the table by setting the `rowCount` property and\n     * adjusting the length of all columns.\n     *\n     * @private\n     * @param {number} rowCount The new row count.\n     */\n    applyRowCount(rowCount) {\n        this.rowCount = rowCount;\n        objectEach(this.columns, (column, columnName) => {\n            if (column.length !== rowCount) {\n                this.columns[columnName] = setLength(column, rowCount);\n            }\n        });\n    }\n    /**\n     * Delete rows. Simplified version of the full\n     * `DataTable.deleteRows` method.\n     *\n     * @param {number} rowIndex\n     * The start row index\n     *\n     * @param {number} [rowCount=1]\n     * The number of rows to delete\n     *\n     * @return {void}\n     *\n     * @emits #afterDeleteRows\n     */\n    deleteRows(rowIndex, rowCount = 1) {\n        if (rowCount > 0 && rowIndex < this.rowCount) {\n            let length = 0;\n            objectEach(this.columns, (column, columnName) => {\n                this.columns[columnName] =\n                    splice(column, rowIndex, rowCount).array;\n                length = column.length;\n            });\n            this.rowCount = length;\n        }\n        DataTableCore_fireEvent(this, 'afterDeleteRows', { rowIndex, rowCount });\n        this.versionTag = uniqueKey();\n    }\n    /**\n     * Fetches the given column by the canonical column name. Simplified version\n     * of the full `DataTable.getRow` method, always returning by reference.\n     *\n     * @param {string} columnName\n     * Name of the column to get.\n     *\n     * @return {Highcharts.DataTableColumn|undefined}\n     * A copy of the column, or `undefined` if not found.\n     */\n    getColumn(columnName, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    asReference) {\n        return this.columns[columnName];\n    }\n    /**\n     * Retrieves all or the given columns. Simplified version of the full\n     * `DataTable.getColumns` method, always returning by reference.\n     *\n     * @param {Array<string>} [columnNames]\n     * Column names to retrieve.\n     *\n     * @return {Highcharts.DataTableColumnCollection}\n     * Collection of columns. If a requested column was not found, it is\n     * `undefined`.\n     */\n    getColumns(columnNames, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    asReference) {\n        return (columnNames || Object.keys(this.columns)).reduce((columns, columnName) => {\n            columns[columnName] = this.columns[columnName];\n            return columns;\n        }, {});\n    }\n    /**\n     * Retrieves the row at a given index.\n     *\n     * @param {number} rowIndex\n     * Row index to retrieve. First row has index 0.\n     *\n     * @param {Array<string>} [columnNames]\n     * Column names to retrieve.\n     *\n     * @return {Record<string, number|string|undefined>|undefined}\n     * Returns the row values, or `undefined` if not found.\n     */\n    getRow(rowIndex, columnNames) {\n        return (columnNames || Object.keys(this.columns)).map((key) => this.columns[key]?.[rowIndex]);\n    }\n    /**\n     * Sets cell values for a column. Will insert a new column, if not found.\n     *\n     * @param {string} columnName\n     * Column name to set.\n     *\n     * @param {Highcharts.DataTableColumn} [column]\n     * Values to set in the column.\n     *\n     * @param {number} [rowIndex]\n     * Index of the first row to change. (Default: 0)\n     *\n     * @param {Record<string, (boolean|number|string|null|undefined)>} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits #setColumns\n     * @emits #afterSetColumns\n     */\n    setColumn(columnName, column = [], rowIndex = 0, eventDetail) {\n        this.setColumns({ [columnName]: column }, rowIndex, eventDetail);\n    }\n    /**\n     * Sets cell values for multiple columns. Will insert new columns, if not\n     * found. Simplified version of the full `DataTableCore.setColumns`, limited\n     * to full replacement of the columns (undefined `rowIndex`).\n     *\n     * @param {Highcharts.DataTableColumnCollection} columns\n     * Columns as a collection, where the keys are the column names.\n     *\n     * @param {number} [rowIndex]\n     * Index of the first row to change. Ignored in the `DataTableCore`, as it\n     * always replaces the full column.\n     *\n     * @param {Record<string, (boolean|number|string|null|undefined)>} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits #setColumns\n     * @emits #afterSetColumns\n     */\n    setColumns(columns, rowIndex, eventDetail) {\n        let rowCount = this.rowCount;\n        objectEach(columns, (column, columnName) => {\n            this.columns[columnName] = column.slice();\n            rowCount = column.length;\n        });\n        this.applyRowCount(rowCount);\n        if (!eventDetail?.silent) {\n            DataTableCore_fireEvent(this, 'afterSetColumns');\n            this.versionTag = uniqueKey();\n        }\n    }\n    /**\n     * Sets cell values of a row. Will insert a new row if no index was\n     * provided, or if the index is higher than the total number of table rows.\n     * A simplified version of the full `DateTable.setRow`, limited to objects.\n     *\n     * @param {Record<string, number|string|undefined>} row\n     * Cell values to set.\n     *\n     * @param {number} [rowIndex]\n     * Index of the row to set. Leave `undefined` to add as a new row.\n     *\n     * @param {boolean} [insert]\n     * Whether to insert the row at the given index, or to overwrite the row.\n     *\n     * @param {Record<string, (boolean|number|string|null|undefined)>} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits #afterSetRows\n     */\n    setRow(row, rowIndex = this.rowCount, insert, eventDetail) {\n        const { columns } = this, indexRowCount = insert ? this.rowCount + 1 : rowIndex + 1;\n        objectEach(row, (cellValue, columnName) => {\n            let column = columns[columnName] ||\n                eventDetail?.addColumns !== false && new Array(indexRowCount);\n            if (column) {\n                if (insert) {\n                    column = splice(column, rowIndex, 0, true, [cellValue]).array;\n                }\n                else {\n                    column[rowIndex] = cellValue;\n                }\n                columns[columnName] = column;\n            }\n        });\n        if (indexRowCount > this.rowCount) {\n            this.applyRowCount(indexRowCount);\n        }\n        if (!eventDetail?.silent) {\n            DataTableCore_fireEvent(this, 'afterSetRows');\n            this.versionTag = uniqueKey();\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Data_DataTableCore = (DataTableCore);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * A typed array.\n * @typedef {Int8Array|Uint8Array|Uint8ClampedArray|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array} Highcharts.TypedArray\n * //**\n * A column of values in a data table.\n * @typedef {Array<boolean|null|number|string|undefined>|Highcharts.TypedArray} Highcharts.DataTableColumn\n */ /**\n* A collection of data table columns defined by a object where the key is the\n* column name and the value is an array of the column values.\n* @typedef {Record<string, Highcharts.DataTableColumn>} Highcharts.DataTableColumnCollection\n*/\n/**\n * Options for the `DataTable` or `DataTableCore` classes.\n * @interface Highcharts.DataTableOptions\n */ /**\n* The column options for the data table. The columns are defined by an object\n* where the key is the column ID and the value is an array of the column\n* values.\n*\n* @name Highcharts.DataTableOptions.columns\n* @type {Highcharts.DataTableColumnCollection|undefined}\n*/ /**\n* Custom ID to identify the new DataTable instance.\n*\n* @name Highcharts.DataTableOptions.id\n* @type {string|undefined}\n*/\n(''); // Keeps doclets above in JS file\n\n;// ./code/es-modules/Core/Axis/OrdinalAxis.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\n\nconst { addEvent: OrdinalAxis_addEvent, correctFloat: OrdinalAxis_correctFloat, css, defined: OrdinalAxis_defined, error, isNumber: OrdinalAxis_isNumber, pick: OrdinalAxis_pick, timeUnits, isString: OrdinalAxis_isString } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Composition\n *\n * */\n/**\n * Extends the axis with ordinal support.\n * @private\n */\nvar OrdinalAxis;\n(function (OrdinalAxis) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Extends the axis with ordinal support.\n     *\n     * @private\n     *\n     * @param AxisClass\n     * Axis class to extend.\n     *\n     * @param ChartClass\n     * Chart class to use.\n     *\n     * @param SeriesClass\n     * Series class to use.\n     */\n    function compose(AxisClass, SeriesClass, ChartClass) {\n        const axisProto = AxisClass.prototype;\n        if (!axisProto.ordinal2lin) {\n            axisProto.getTimeTicks = getTimeTicks;\n            axisProto.index2val = index2val;\n            axisProto.lin2val = lin2val;\n            axisProto.val2lin = val2lin;\n            // Record this to prevent overwriting by broken-axis module (#5979)\n            axisProto.ordinal2lin = axisProto.val2lin;\n            OrdinalAxis_addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n            OrdinalAxis_addEvent(AxisClass, 'foundExtremes', onAxisFoundExtremes);\n            OrdinalAxis_addEvent(AxisClass, 'afterSetScale', onAxisAfterSetScale);\n            OrdinalAxis_addEvent(AxisClass, 'initialAxisTranslation', onAxisInitialAxisTranslation);\n            OrdinalAxis_addEvent(ChartClass, 'pan', onChartPan);\n            OrdinalAxis_addEvent(ChartClass, 'touchpan', onChartPan);\n            OrdinalAxis_addEvent(SeriesClass, 'updatedData', onSeriesUpdatedData);\n        }\n        return AxisClass;\n    }\n    OrdinalAxis.compose = compose;\n    /**\n     * In an ordinal axis, there might be areas with dense concentrations of\n     * points, then large gaps between some. Creating equally distributed\n     * ticks over this entire range may lead to a huge number of ticks that\n     * will later be removed. So instead, break the positions up in\n     * segments, find the tick positions for each segment then concatenize\n     * them. This method is used from both data grouping logic and X axis\n     * tick position logic.\n     * @private\n     */\n    function getTimeTicks(normalizedInterval, min, max, startOfWeek, positions = [], closestDistance = 0, findHigherRanks) {\n        const higherRanks = {}, tickPixelIntervalOption = this.options.tickPixelInterval, time = this.chart.time, \n        // Record all the start positions of a segment, to use when\n        // deciding what's a gap in the data.\n        segmentStarts = [];\n        let end, segmentPositions, hasCrossedHigherRank, info, outsideMax, start = 0, groupPositions = [], lastGroupPosition = -Number.MAX_VALUE;\n        // The positions are not always defined, for example for ordinal\n        // positions when data has regular interval (#1557, #2090)\n        if ((!this.options.ordinal && !this.options.breaks) ||\n            !positions ||\n            positions.length < 3 ||\n            typeof min === 'undefined') {\n            return time.getTimeTicks.apply(time, arguments);\n        }\n        // Analyze the positions array to split it into segments on gaps\n        // larger than 5 times the closest distance. The closest distance is\n        // already found at this point, so we reuse that instead of\n        // computing it again.\n        const posLength = positions.length;\n        for (end = 0; end < posLength; end++) {\n            outsideMax = end && positions[end - 1] > max;\n            if (positions[end] < min) { // Set the last position before min\n                start = end;\n            }\n            if (end === posLength - 1 ||\n                positions[end + 1] - positions[end] > closestDistance * 5 ||\n                outsideMax) {\n                // For each segment, calculate the tick positions from the\n                // getTimeTicks utility function. The interval will be the\n                // same regardless of how long the segment is.\n                if (positions[end] > lastGroupPosition) { // #1475\n                    segmentPositions = time.getTimeTicks(normalizedInterval, positions[start], positions[end], startOfWeek);\n                    // Prevent duplicate groups, for example for multiple\n                    // segments within one larger time frame (#1475)\n                    while (segmentPositions.length &&\n                        segmentPositions[0] <= lastGroupPosition) {\n                        segmentPositions.shift();\n                    }\n                    if (segmentPositions.length) {\n                        lastGroupPosition =\n                            segmentPositions[segmentPositions.length - 1];\n                    }\n                    segmentStarts.push(groupPositions.length);\n                    groupPositions = groupPositions.concat(segmentPositions);\n                }\n                // Set start of next segment\n                start = end + 1;\n            }\n            if (outsideMax) {\n                break;\n            }\n        }\n        // Get the grouping info from the last of the segments. The info is\n        // the same for all segments.\n        if (segmentPositions) {\n            info = segmentPositions.info;\n            // Optionally identify ticks with higher rank, for example\n            // when the ticks have crossed midnight.\n            if (findHigherRanks && info.unitRange <= timeUnits.hour) {\n                end = groupPositions.length - 1;\n                // Compare points two by two\n                for (start = 1; start < end; start++) {\n                    if (time.dateFormat('%d', groupPositions[start]) !==\n                        time.dateFormat('%d', groupPositions[start - 1])) {\n                        higherRanks[groupPositions[start]] = 'day';\n                        hasCrossedHigherRank = true;\n                    }\n                }\n                // If the complete array has crossed midnight, we want\n                // to mark the first positions also as higher rank\n                if (hasCrossedHigherRank) {\n                    higherRanks[groupPositions[0]] = 'day';\n                }\n                info.higherRanks = higherRanks;\n            }\n            // Save the info\n            info.segmentStarts = segmentStarts;\n            groupPositions.info = info;\n        }\n        else {\n            error(12, false, this.chart);\n        }\n        // Don't show ticks within a gap in the ordinal axis, where the\n        // space between two points is greater than a portion of the tick\n        // pixel interval\n        if (findHigherRanks && OrdinalAxis_defined(tickPixelIntervalOption)) {\n            const length = groupPositions.length, translatedArr = [], distances = [];\n            let itemToRemove, translated, lastTranslated, medianDistance, distance, i = length;\n            // Find median pixel distance in order to keep a reasonably even\n            // distance between ticks (#748)\n            while (i--) {\n                translated = this.translate(groupPositions[i]);\n                if (lastTranslated) {\n                    distances[i] = lastTranslated - translated;\n                }\n                translatedArr[i] = lastTranslated = translated;\n            }\n            distances.sort((a, b) => a - b);\n            medianDistance = distances[Math.floor(distances.length / 2)];\n            if (medianDistance < tickPixelIntervalOption * 0.6) {\n                medianDistance = null;\n            }\n            // Now loop over again and remove ticks where needed\n            i = groupPositions[length - 1] > max ? length - 1 : length; // #817\n            lastTranslated = void 0;\n            while (i--) {\n                translated = translatedArr[i];\n                distance = Math.abs(lastTranslated - translated);\n                // #4175 - when axis is reversed, the distance, is negative but\n                // tickPixelIntervalOption positive, so we need to compare the\n                // same values\n                // Remove ticks that are closer than 0.6 times the pixel\n                // interval from the one to the right, but not if it is close to\n                // the median distance (#748).\n                if (lastTranslated &&\n                    distance < tickPixelIntervalOption * 0.8 &&\n                    (medianDistance === null || distance < medianDistance * 0.8)) {\n                    // Is this a higher ranked position with a normal\n                    // position to the right?\n                    if (higherRanks[groupPositions[i]] &&\n                        !higherRanks[groupPositions[i + 1]]) {\n                        // Yes: remove the lower ranked neighbour to the\n                        // right\n                        itemToRemove = i + 1;\n                        lastTranslated = translated; // #709\n                    }\n                    else {\n                        // No: remove this one\n                        itemToRemove = i;\n                    }\n                    groupPositions.splice(itemToRemove, 1);\n                }\n                else {\n                    lastTranslated = translated;\n                }\n            }\n        }\n        return groupPositions;\n    }\n    /**\n     * Get axis position of given index of the extended ordinal positions.\n     * Used only when panning an ordinal axis.\n     *\n     * @private\n     * @function Highcharts.Axis#index2val\n     * @param {number} index\n     * The index value of searched point\n     */\n    function index2val(index) {\n        const axis = this, ordinal = axis.ordinal, \n        // Context could be changed to extendedOrdinalPositions.\n        ordinalPositions = ordinal.positions;\n        // The visible range contains only equally spaced values.\n        if (!ordinalPositions) {\n            return index;\n        }\n        let i = ordinalPositions.length - 1, distance;\n        if (index < 0) { // Out of range, in effect panning to the left\n            index = ordinalPositions[0];\n        }\n        else if (index > i) { // Out of range, panning to the right\n            index = ordinalPositions[i];\n        }\n        else { // Split it up\n            i = Math.floor(index);\n            distance = index - i; // The decimal\n        }\n        if (typeof distance !== 'undefined' &&\n            typeof ordinalPositions[i] !== 'undefined') {\n            return ordinalPositions[i] + (distance ?\n                distance *\n                    (ordinalPositions[i + 1] - ordinalPositions[i]) :\n                0);\n        }\n        return index;\n    }\n    /**\n     * Translate from linear (internal) to axis value.\n     *\n     * @private\n     * @function Highcharts.Axis#lin2val\n     * @param {number} val\n     * The linear abstracted value.\n     */\n    function lin2val(val) {\n        const axis = this, ordinal = axis.ordinal, localMin = axis.old ? axis.old.min : axis.min, localA = axis.old ? axis.old.transA : axis.transA;\n        // Always use extendedPositions (#19816)\n        const positions = ordinal.getExtendedPositions();\n        // In some cases (especially in early stages of the chart creation) the\n        // getExtendedPositions might return undefined.\n        if (positions?.length) {\n            // Convert back from modivied value to pixels. // #15970\n            const pixelVal = OrdinalAxis_correctFloat((val - localMin) * localA +\n                axis.minPixelPadding), index = OrdinalAxis_correctFloat(ordinal.getIndexOfPoint(pixelVal, positions)), mantissa = OrdinalAxis_correctFloat(index % 1);\n            // Check if the index is inside position array. If true,\n            // read/approximate value for that exact index.\n            if (index >= 0 && index <= positions.length - 1) {\n                const leftNeighbour = positions[Math.floor(index)], rightNeighbour = positions[Math.ceil(index)], distance = rightNeighbour - leftNeighbour;\n                return positions[Math.floor(index)] + mantissa * distance;\n            }\n        }\n        // If the value is outside positions array, return initial value\n        return val; // #16784\n    }\n    /**\n     * Internal function to calculate the precise index in ordinalPositions\n     * array.\n     * @private\n     */\n    function getIndexInArray(ordinalPositions, val) {\n        const index = OrdinalAxis.Additions.findIndexOf(ordinalPositions, val, true);\n        if (ordinalPositions[index] === val) {\n            return index;\n        }\n        const percent = (val - ordinalPositions[index]) /\n            (ordinalPositions[index + 1] - ordinalPositions[index]);\n        return index + percent;\n    }\n    /**\n    * @private\n    */\n    function onAxisAfterInit() {\n        const axis = this;\n        if (!axis.ordinal) {\n            axis.ordinal = new OrdinalAxis.Additions(axis);\n        }\n    }\n    /**\n     * @private\n     */\n    function onAxisFoundExtremes() {\n        const axis = this, { eventArgs, options } = axis;\n        if (axis.isXAxis &&\n            OrdinalAxis_defined(options.overscroll) &&\n            options.overscroll !== 0 &&\n            OrdinalAxis_isNumber(axis.max) &&\n            OrdinalAxis_isNumber(axis.min)) {\n            if (axis.options.ordinal && !axis.ordinal.originalOrdinalRange) {\n                // Calculate the original ordinal range\n                axis.ordinal.getExtendedPositions(false);\n            }\n            if (axis.max === axis.dataMax &&\n                (\n                // Panning is an exception. We don't want to apply\n                // overscroll when panning over the dataMax\n                eventArgs?.trigger !== 'pan' ||\n                    axis.isInternal) &&\n                // Scrollbar buttons are the other execption\n                eventArgs?.trigger !== 'navigator') {\n                const overscroll = axis.ordinal.convertOverscroll(options.overscroll);\n                axis.max += overscroll;\n                // Live data and buttons require translation for the min:\n                if (!axis.isInternal &&\n                    OrdinalAxis_defined(axis.userMin) &&\n                    eventArgs?.trigger !== 'mousewheel') {\n                    axis.min += overscroll;\n                }\n            }\n        }\n    }\n    /**\n     * For ordinal axis, that loads data async, redraw axis after data is\n     * loaded. If we don't do that, axis will have the same extremes as\n     * previously, but ordinal positions won't be calculated. See #10290\n     * @private\n     */\n    function onAxisAfterSetScale() {\n        const axis = this;\n        if (axis.horiz && !axis.isDirty) {\n            axis.isDirty = axis.isOrdinal &&\n                axis.chart.navigator &&\n                !axis.chart.navigator.adaptToUpdatedData;\n        }\n    }\n    /**\n     * @private\n     */\n    function onAxisInitialAxisTranslation() {\n        const axis = this;\n        if (axis.ordinal) {\n            axis.ordinal.beforeSetTickPositions();\n            axis.tickInterval = axis.ordinal.postProcessTickInterval(axis.tickInterval);\n        }\n    }\n    /**\n     * Extending the Chart.pan method for ordinal axes\n     * @private\n     */\n    function onChartPan(e) {\n        const chart = this, xAxis = chart.xAxis[0], overscroll = xAxis.ordinal.convertOverscroll(xAxis.options.overscroll), chartX = e.originalEvent.chartX, panning = chart.options.chart.panning;\n        let runBase = false;\n        if (panning &&\n            panning.type !== 'y' &&\n            xAxis.options.ordinal &&\n            xAxis.series.length &&\n            // On touch devices, let default function handle the pinching\n            (!e.touches || e.touches.length <= 1)) {\n            const mouseDownX = chart.mouseDownX, extremes = xAxis.getExtremes(), dataMin = extremes.dataMin, dataMax = extremes.dataMax, min = extremes.min, max = extremes.max, hoverPoints = chart.hoverPoints, closestPointRange = (xAxis.closestPointRange ||\n                xAxis.ordinal?.overscrollPointsRange), pointPixelWidth = (xAxis.translationSlope *\n                (xAxis.ordinal.slope || closestPointRange)), \n            // How many ordinal units did we move?\n            movedUnits = Math.round((mouseDownX - chartX) / pointPixelWidth), \n            // Get index of all the chart's points\n            extendedOrdinalPositions = xAxis.ordinal.getExtendedPositions(), extendedAxis = {\n                ordinal: {\n                    positions: extendedOrdinalPositions,\n                    extendedOrdinalPositions: extendedOrdinalPositions\n                }\n            }, index2val = xAxis.index2val, val2lin = xAxis.val2lin;\n            let trimmedRange, ordinalPositions;\n            // Make sure panning to the edges does not decrease the zoomed range\n            if ((min <= dataMin && movedUnits < 0) ||\n                (max + overscroll >= dataMax && movedUnits > 0)) {\n                return;\n            }\n            // We have an ordinal axis, but the data is equally spaced\n            if (!extendedAxis.ordinal.positions) {\n                runBase = true;\n            }\n            else if (Math.abs(movedUnits) > 1) {\n                // Remove active points for shared tooltip\n                if (hoverPoints) {\n                    hoverPoints.forEach(function (point) {\n                        point.setState();\n                    });\n                }\n                // In grouped data series, the last ordinal position represents\n                // the grouped data, which is to the left of the real data max.\n                // If we don't compensate for this, we will be allowed to pan\n                // grouped data series passed the right of the plot area.\n                ordinalPositions = extendedAxis.ordinal.positions;\n                if (dataMax >\n                    ordinalPositions[ordinalPositions.length - 1]) {\n                    ordinalPositions.push(dataMax);\n                }\n                // Get the new min and max values by getting the ordinal index\n                // for the current extreme, then add the moved units and\n                // translate back to values. This happens on the extended\n                // ordinal positions if the new position is out of range, else\n                // it happens on the current x axis which is smaller and faster.\n                chart.setFixedRange(max - min);\n                trimmedRange = xAxis.navigatorAxis\n                    .toFixedRange(void 0, void 0, index2val.apply(extendedAxis, [\n                    val2lin.apply(extendedAxis, [min, true]) +\n                        movedUnits\n                ]), index2val.apply(extendedAxis, [\n                    val2lin.apply(extendedAxis, [max, true]) +\n                        movedUnits\n                ]));\n                // Apply it if it is within the available data range\n                if (trimmedRange.min >= Math.min(ordinalPositions[0], min) &&\n                    trimmedRange.max <= Math.max(ordinalPositions[ordinalPositions.length - 1], max) + overscroll) {\n                    xAxis.setExtremes(trimmedRange.min, trimmedRange.max, true, false, { trigger: 'pan' });\n                }\n                chart.mouseDownX = chartX; // Set new reference for next run\n                css(chart.container, { cursor: 'move' });\n            }\n        }\n        else {\n            runBase = true;\n        }\n        // Revert to the linear chart.pan version\n        if (runBase || (panning && /y/.test(panning.type))) {\n            if (overscroll) {\n                xAxis.max = xAxis.dataMax + overscroll;\n            }\n        }\n        else {\n            e.preventDefault();\n        }\n    }\n    /**\n     * @private\n     */\n    function onSeriesUpdatedData() {\n        const xAxis = this.xAxis;\n        // Destroy the extended ordinal index on updated data\n        // and destroy extendedOrdinalPositions, #16055.\n        if (xAxis?.options.ordinal) {\n            delete xAxis.ordinal.index;\n            delete xAxis.ordinal.originalOrdinalRange;\n        }\n    }\n    /**\n     * Translate from a linear axis value to the corresponding ordinal axis\n     * position. If there are no gaps in the ordinal axis this will be the\n     * same. The translated value is the value that the point would have if\n     * the axis was linear, using the same min and max.\n     *\n     * @private\n     * @function Highcharts.Axis#val2lin\n     * @param {number} val\n     * The axis value.\n     * @param {boolean} [toIndex]\n     * Whether to return the index in the ordinalPositions or the new value.\n     */\n    function val2lin(val, toIndex) {\n        const axis = this, ordinal = axis.ordinal, ordinalPositions = ordinal.positions;\n        let slope = ordinal.slope, extendedOrdinalPositions;\n        if (!ordinalPositions) {\n            return val;\n        }\n        const ordinalLength = ordinalPositions.length;\n        let ordinalIndex;\n        // If the searched value is inside visible plotArea, ivastigate the\n        // value basing on ordinalPositions.\n        if (ordinalPositions[0] <= val &&\n            ordinalPositions[ordinalLength - 1] >= val) {\n            ordinalIndex = getIndexInArray(ordinalPositions, val);\n            // Final return value is based on ordinalIndex\n        }\n        else {\n            extendedOrdinalPositions = ordinal.getExtendedPositions?.();\n            if (!extendedOrdinalPositions?.length) {\n                return val;\n            }\n            const length = extendedOrdinalPositions.length;\n            if (!slope) {\n                slope =\n                    (extendedOrdinalPositions[length - 1] -\n                        extendedOrdinalPositions[0]) /\n                        length;\n            }\n            // `originalPointReference` is equal to the index of first point of\n            // ordinalPositions in extendedOrdinalPositions.\n            const originalPositionsReference = getIndexInArray(extendedOrdinalPositions, ordinalPositions[0]);\n            // If the searched value is outside the visiblePlotArea,\n            // check if it is inside extendedOrdinalPositions.\n            if (val >= extendedOrdinalPositions[0] &&\n                val <=\n                    extendedOrdinalPositions[length - 1]) {\n                // Return Value\n                ordinalIndex = getIndexInArray(extendedOrdinalPositions, val) -\n                    originalPositionsReference;\n            }\n            else {\n                if (!toIndex) {\n                    // If the value is outside positions array,\n                    // return initial value, #16784\n                    return val;\n                }\n                // Since ordinal.slope is the average distance between 2\n                // points on visible plotArea, this can be used to calculate\n                // the approximate position of the point, which is outside\n                // the extendedOrdinalPositions.\n                if (val < extendedOrdinalPositions[0]) {\n                    const diff = extendedOrdinalPositions[0] - val, approximateIndexOffset = diff / slope;\n                    ordinalIndex =\n                        -originalPositionsReference -\n                            approximateIndexOffset;\n                }\n                else {\n                    const diff = val -\n                        extendedOrdinalPositions[length - 1], approximateIndexOffset = diff / slope;\n                    ordinalIndex =\n                        approximateIndexOffset +\n                            length -\n                            originalPositionsReference;\n                }\n            }\n        }\n        return toIndex ? ordinalIndex : slope * (ordinalIndex || 0) +\n            ordinal.offset;\n    }\n    /* *\n     *\n     *  Classes\n     *\n     * */\n    /**\n     * @private\n     */\n    class Additions {\n        /* *\n         *\n         *  Constructors\n         *\n         * */\n        /**\n         * @private\n         */\n        constructor(axis) {\n            this.index = {};\n            this.axis = axis;\n        }\n        /* *\n        *\n        *  Functions\n        *\n        * */\n        /**\n         * Calculate the ordinal positions before tick positions are calculated.\n         * @private\n         */\n        beforeSetTickPositions() {\n            const axis = this.axis, ordinal = axis.ordinal, extremes = axis.getExtremes(), min = extremes.min, max = extremes.max, hasBreaks = axis.brokenAxis?.hasBreaks, isOrdinal = axis.options.ordinal;\n            let len, uniqueOrdinalPositions, dist, minIndex, maxIndex, slope, i, ordinalPositions = [], overscrollPointsRange = Number.MAX_VALUE, useOrdinal = false, adjustOrdinalExtremesPoints = false, isBoosted = false;\n            // Apply the ordinal logic\n            if (isOrdinal || hasBreaks) { // #4167 YAxis is never ordinal ?\n                let distanceBetweenPoint = 0;\n                axis.series.forEach(function (series, i) {\n                    const xData = series.getColumn('x', true);\n                    uniqueOrdinalPositions = [];\n                    // For an axis with multiple series, check if the distance\n                    // between points is identical throughout all series.\n                    if (i > 0 &&\n                        series.options.id !== 'highcharts-navigator-series' &&\n                        xData.length > 1) {\n                        adjustOrdinalExtremesPoints = (distanceBetweenPoint !== xData[1] - xData[0]);\n                    }\n                    distanceBetweenPoint = xData[1] - xData[0];\n                    if (series.boosted) {\n                        isBoosted = series.boosted;\n                    }\n                    if (series.reserveSpace() &&\n                        (series\n                            .takeOrdinalPosition !== false || hasBreaks)) {\n                        // Concatenate the processed X data into the existing\n                        // positions, or the empty array\n                        ordinalPositions = ordinalPositions.concat(xData);\n                        len = ordinalPositions.length;\n                        // Remove duplicates (#1588)\n                        ordinalPositions.sort(function (a, b) {\n                            // Without a custom function it is sorted as strings\n                            return a - b;\n                        });\n                        overscrollPointsRange = Math.min(overscrollPointsRange, OrdinalAxis_pick(\n                        // Check for a single-point series:\n                        series.closestPointRange, overscrollPointsRange));\n                        if (len) {\n                            i = 0;\n                            while (i < len - 1) {\n                                if (ordinalPositions[i] !==\n                                    ordinalPositions[i + 1]) {\n                                    uniqueOrdinalPositions.push(ordinalPositions[i + 1]);\n                                }\n                                i++;\n                            }\n                            // Check first item:\n                            if (uniqueOrdinalPositions[0] !==\n                                ordinalPositions[0]) {\n                                uniqueOrdinalPositions.unshift(ordinalPositions[0]);\n                            }\n                            ordinalPositions = uniqueOrdinalPositions;\n                        }\n                    }\n                });\n                if (!axis.ordinal.originalOrdinalRange) {\n                    // Calculate current originalOrdinalRange\n                    axis.ordinal.originalOrdinalRange =\n                        (ordinalPositions.length - 1) * overscrollPointsRange;\n                }\n                // If the distance between points is not identical throughout\n                // all series, remove the first and last ordinal position to\n                // avoid enabling ordinal logic when it is not needed, #17405.\n                // Only for boosted series because changes are negligible.\n                if (adjustOrdinalExtremesPoints && isBoosted) {\n                    ordinalPositions.pop();\n                    ordinalPositions.shift();\n                }\n                // Cache the length\n                len = ordinalPositions.length;\n                // Check if we really need the overhead of mapping axis data\n                // against the ordinal positions. If the series consist of\n                // evenly spaced data any way, we don't need any ordinal logic.\n                if (len > 2) { // Two points have equal distance by default\n                    dist = ordinalPositions[1] - ordinalPositions[0];\n                    i = len - 1;\n                    while (i-- && !useOrdinal) {\n                        if (ordinalPositions[i + 1] - ordinalPositions[i] !==\n                            dist) {\n                            useOrdinal = true;\n                        }\n                    }\n                    // When zooming in on a week, prevent axis padding for\n                    // weekends even though the data within the week is evenly\n                    // spaced.\n                    if (!axis.options.keepOrdinalPadding &&\n                        (ordinalPositions[0] - min > dist ||\n                            (max -\n                                ordinalPositions[ordinalPositions.length - 1]) > dist)) {\n                        useOrdinal = true;\n                    }\n                }\n                else if (axis.options.overscroll) {\n                    if (len === 2) {\n                        // Exactly two points, distance for overscroll is fixed:\n                        overscrollPointsRange =\n                            ordinalPositions[1] - ordinalPositions[0];\n                    }\n                    else if (len === 1) {\n                        // We have just one point, closest distance is unknown.\n                        // Assume then it is last point and overscrolled range:\n                        overscrollPointsRange = axis.ordinal.convertOverscroll(axis.options.overscroll);\n                        ordinalPositions = [\n                            ordinalPositions[0],\n                            ordinalPositions[0] + overscrollPointsRange\n                        ];\n                    }\n                    else {\n                        // In case of zooming in on overscrolled range, stick to\n                        // the old range:\n                        overscrollPointsRange = ordinal.overscrollPointsRange;\n                    }\n                }\n                // Record the slope and offset to compute the linear values from\n                // the array index. Since the ordinal positions may exceed the\n                // current range, get the start and end positions within it\n                // (#719, #665b)\n                if (useOrdinal || axis.forceOrdinal) {\n                    if (axis.options.overscroll) {\n                        ordinal.overscrollPointsRange = overscrollPointsRange;\n                        ordinalPositions = ordinalPositions.concat(ordinal.getOverscrollPositions());\n                    }\n                    // Register\n                    ordinal.positions = ordinalPositions;\n                    // This relies on the ordinalPositions being set. Use\n                    // Math.max and Math.min to prevent padding on either sides\n                    // of the data.\n                    minIndex = axis.ordinal2lin(// #5979\n                    Math.max(min, ordinalPositions[0]), true);\n                    maxIndex = Math.max(axis.ordinal2lin(Math.min(max, ordinalPositions[ordinalPositions.length - 1]), true), 1); // #3339\n                    // Set the slope and offset of the values compared to the\n                    // indices in the ordinal positions.\n                    ordinal.slope = slope =\n                        (max - min) / (maxIndex - minIndex);\n                    ordinal.offset = min - (minIndex * slope);\n                }\n                else {\n                    ordinal.overscrollPointsRange = OrdinalAxis_pick(axis.closestPointRange, ordinal.overscrollPointsRange);\n                    ordinal.positions = axis.ordinal.slope = ordinal.offset =\n                        void 0;\n                }\n            }\n            axis.isOrdinal = isOrdinal && useOrdinal; // #3818, #4196, #4926\n            ordinal.groupIntervalFactor = null; // Reset for next run\n        }\n        /**\n         * Faster way of using the Array.indexOf method.\n         * Works for sorted arrays only with unique values.\n         *\n         * @param {Array} sortedArray\n         *        The sorted array inside which we are looking for.\n         * @param {number} key\n         *        The key to being found.\n         * @param {boolean} indirectSearch\n         *        In case of lack of the point in the array, should return\n         *        value be equal to -1 or the closest smaller index.\n         *  @private\n         */\n        static findIndexOf(sortedArray, key, indirectSearch) {\n            let start = 0, end = sortedArray.length - 1, middle;\n            while (start < end) {\n                middle = Math.ceil((start + end) / 2);\n                // Key found as the middle element.\n                if (sortedArray[middle] <= key) {\n                    // Continue searching to the right.\n                    start = middle;\n                }\n                else {\n                    // Continue searching to the left.\n                    end = middle - 1;\n                }\n            }\n            if (sortedArray[start] === key) {\n                return start;\n            }\n            // Key could not be found.\n            return !indirectSearch ? -1 : start;\n        }\n        /**\n         * Get the ordinal positions for the entire data set. This is necessary\n         * in chart panning because we need to find out what points or data\n         * groups are available outside the visible range. When a panning\n         * operation starts, if an index for the given grouping does not exists,\n         * it is created and cached. This index is deleted on updated data, so\n         * it will be regenerated the next time a panning operation starts.\n         * @private\n         */\n        getExtendedPositions(withOverscroll = true) {\n            const ordinal = this, axis = ordinal.axis, axisProto = axis.constructor.prototype, chart = axis.chart, key = axis.series.reduce((k, series) => {\n                const grouping = series.currentDataGrouping;\n                return (k +\n                    (grouping ? grouping.count + grouping.unitName : 'raw'));\n            }, ''), overscroll = withOverscroll ?\n                axis.ordinal.convertOverscroll(axis.options.overscroll) : 0, extremes = axis.getExtremes();\n            let fakeAxis, fakeSeries = void 0, ordinalIndex = ordinal.index;\n            // If this is the first time, or the ordinal index is deleted by\n            // updatedData,\n            // create it.\n            if (!ordinalIndex) {\n                ordinalIndex = ordinal.index = {};\n            }\n            if (!ordinalIndex[key]) {\n                // Create a fake axis object where the extended ordinal\n                // positions are emulated\n                fakeAxis = {\n                    series: [],\n                    chart: chart,\n                    forceOrdinal: false,\n                    getExtremes: function () {\n                        return {\n                            min: extremes.dataMin,\n                            max: extremes.dataMax + overscroll\n                        };\n                    },\n                    applyGrouping: axisProto.applyGrouping,\n                    getGroupPixelWidth: axisProto.getGroupPixelWidth,\n                    getTimeTicks: axisProto.getTimeTicks,\n                    options: {\n                        ordinal: true\n                    },\n                    ordinal: {\n                        getGroupIntervalFactor: this.getGroupIntervalFactor\n                    },\n                    ordinal2lin: axisProto.ordinal2lin, // #6276\n                    getIndexOfPoint: axisProto.getIndexOfPoint,\n                    val2lin: axisProto.val2lin // #2590\n                };\n                fakeAxis.ordinal.axis = fakeAxis;\n                // Add the fake series to hold the full data, then apply\n                // processData to it\n                axis.series.forEach((series) => {\n                    fakeSeries = {\n                        xAxis: fakeAxis,\n                        chart: chart,\n                        groupPixelWidth: series.groupPixelWidth,\n                        destroyGroupedData: (external_highcharts_src_js_default_default()).noop,\n                        getColumn: series.getColumn,\n                        applyGrouping: series.applyGrouping,\n                        getProcessedData: series.getProcessedData,\n                        reserveSpace: series.reserveSpace,\n                        visible: series.visible\n                    };\n                    const xData = series.getColumn('x').concat(withOverscroll ?\n                        ordinal.getOverscrollPositions() :\n                        []);\n                    fakeSeries.dataTable = new Data_DataTableCore({\n                        columns: {\n                            x: xData\n                        }\n                    });\n                    fakeSeries.options = {\n                        ...series.options,\n                        dataGrouping: series.currentDataGrouping ? {\n                            firstAnchor: series.options.dataGrouping?.firstAnchor,\n                            anchor: series.options.dataGrouping?.anchor,\n                            lastAnchor: series.options.dataGrouping?.firstAnchor,\n                            enabled: true,\n                            forced: true,\n                            approximation: 'open',\n                            units: [[\n                                    series.currentDataGrouping.unitName,\n                                    [series.currentDataGrouping.count]\n                                ]]\n                        } : {\n                            enabled: false\n                        }\n                    };\n                    fakeAxis.series.push(fakeSeries);\n                    series.processData.apply(fakeSeries);\n                });\n                fakeAxis.applyGrouping({ hasExtremesChanged: true });\n                // Force to use the ordinal when points are evenly spaced (e.g.\n                // weeks), #3825.\n                if ((fakeSeries?.closestPointRange !==\n                    fakeSeries?.basePointRange) &&\n                    fakeSeries.currentDataGrouping) {\n                    fakeAxis.forceOrdinal = true;\n                }\n                // Run beforeSetTickPositions to compute the ordinalPositions\n                axis.ordinal.beforeSetTickPositions.apply({ axis: fakeAxis });\n                if (!axis.ordinal.originalOrdinalRange &&\n                    fakeAxis.ordinal.originalOrdinalRange) {\n                    axis.ordinal.originalOrdinalRange =\n                        fakeAxis.ordinal.originalOrdinalRange;\n                }\n                // Cache it\n                if (fakeAxis.ordinal.positions) {\n                    ordinalIndex[key] = fakeAxis.ordinal.positions;\n                }\n            }\n            return ordinalIndex[key];\n        }\n        /**\n         * Find the factor to estimate how wide the plot area would have been if\n         * ordinal gaps were included. This value is used to compute an imagined\n         * plot width in order to establish the data grouping interval.\n         *\n         * A real world case is the intraday-candlestick example. Without this\n         * logic, it would show the correct data grouping when viewing a range\n         * within each day, but once moving the range to include the gap between\n         * two days, the interval would include the cut-away night hours and the\n         * data grouping would be wrong. So the below method tries to compensate\n         * by identifying the most common point interval, in this case days.\n         *\n         * An opposite case is presented in issue #718. We have a long array of\n         * daily data, then one point is appended one hour after the last point.\n         * We expect the data grouping not to change.\n         *\n         * In the future, if we find cases where this estimation doesn't work\n         * optimally, we might need to add a second pass to the data grouping\n         * logic, where we do another run with a greater interval if the number\n         * of data groups is more than a certain fraction of the desired group\n         * count.\n         * @private\n         */\n        getGroupIntervalFactor(xMin, xMax, series) {\n            const ordinal = this, processedXData = series.getColumn('x', true), len = processedXData.length, distances = [];\n            let median, i, groupIntervalFactor = ordinal.groupIntervalFactor;\n            // Only do this computation for the first series, let the other\n            // inherit it (#2416)\n            if (!groupIntervalFactor) {\n                // Register all the distances in an array\n                for (i = 0; i < len - 1; i++) {\n                    distances[i] = (processedXData[i + 1] -\n                        processedXData[i]);\n                }\n                // Sort them and find the median\n                distances.sort(function (a, b) {\n                    return a - b;\n                });\n                median = distances[Math.floor(len / 2)];\n                // Compensate for series that don't extend through the entire\n                // axis extent. #1675.\n                xMin = Math.max(xMin, processedXData[0]);\n                xMax = Math.min(xMax, processedXData[len - 1]);\n                ordinal.groupIntervalFactor = groupIntervalFactor =\n                    (len * median) / (xMax - xMin);\n            }\n            // Return the factor needed for data grouping\n            return groupIntervalFactor;\n        }\n        /**\n         * Get index of point inside the ordinal positions array.\n         *\n         * @private\n         * @param {number} pixelVal\n         * The pixel value of a point.\n         *\n         * @param {Array<number>} [ordinalArray]\n         * An array of all points available on the axis for the given data set.\n         * Either ordinalPositions if the value is inside the plotArea or\n         * extendedOrdinalPositions if not.\n         */\n        getIndexOfPoint(pixelVal, ordinalArray) {\n            const ordinal = this, axis = ordinal.axis, min = axis.min, minX = axis.minPixelPadding, indexOfMin = getIndexInArray(ordinalArray, min);\n            const ordinalPointPixelInterval = axis.translationSlope *\n                (ordinal.slope ||\n                    axis.closestPointRange ||\n                    ordinal.overscrollPointsRange);\n            const shiftIndex = OrdinalAxis_correctFloat((pixelVal - minX) / ordinalPointPixelInterval);\n            return indexOfMin + shiftIndex;\n        }\n        /**\n         * Get ticks for an ordinal axis within a range where points don't\n         * exist. It is required when overscroll is enabled. We can't base on\n         * points, because we may not have any, so we use approximated\n         * pointRange and generate these ticks between Axis.dataMax,\n         * Axis.dataMax + Axis.overscroll evenly spaced. Used in panning and\n         * navigator scrolling.\n         * @private\n         */\n        getOverscrollPositions() {\n            const ordinal = this, axis = ordinal.axis, extraRange = ordinal.convertOverscroll(axis.options.overscroll), distance = ordinal.overscrollPointsRange, positions = [];\n            let max = axis.dataMax;\n            if (OrdinalAxis_defined(distance)) {\n                // Max + pointRange because we need to scroll to the last\n                while (max < axis.dataMax + extraRange) {\n                    max += distance;\n                    positions.push(max);\n                }\n            }\n            return positions;\n        }\n        /**\n         * Make the tick intervals closer because the ordinal gaps make the\n         * ticks spread out or cluster.\n         * @private\n         */\n        postProcessTickInterval(tickInterval) {\n            // Problem: https://jsfiddle.net/highcharts/FQm4E/1/. This is a case\n            // where this algorithm doesn't work optimally. In this case, the\n            // tick labels are spread out per week, but all the gaps reside\n            // within weeks. So we have a situation where the labels are courser\n            // than the ordinal gaps, and thus the tick interval should not be\n            // altered.\n            const ordinal = this, axis = ordinal.axis, ordinalSlope = ordinal.slope, closestPointRange = axis.closestPointRange;\n            let ret;\n            if (ordinalSlope && closestPointRange) {\n                if (!axis.options.breaks) {\n                    ret = (tickInterval /\n                        (ordinalSlope / closestPointRange));\n                }\n                else {\n                    ret = closestPointRange || tickInterval; // #7275\n                }\n            }\n            else {\n                ret = tickInterval;\n            }\n            return ret;\n        }\n        /**\n         * If overscroll is pixel or percentage value, convert it to axis range.\n         *\n         * @private\n         * @param {number | string} overscroll\n         * Overscroll value in axis range, pixels or percentage value.\n         * @return {number}\n         * Overscroll value in axis range.\n         */\n        convertOverscroll(overscroll = 0) {\n            const ordinal = this, axis = ordinal.axis, calculateOverscroll = function (overscrollPercentage) {\n                return OrdinalAxis_pick(ordinal.originalOrdinalRange, OrdinalAxis_defined(axis.dataMax) && OrdinalAxis_defined(axis.dataMin) ?\n                    axis.dataMax - axis.dataMin : 0) * overscrollPercentage;\n            };\n            if (OrdinalAxis_isString(overscroll)) {\n                const overscrollValue = parseInt(overscroll, 10);\n                let isFullRange;\n                // #22334\n                if (OrdinalAxis_defined(axis.min) && OrdinalAxis_defined(axis.max) &&\n                    OrdinalAxis_defined(axis.dataMin) && OrdinalAxis_defined(axis.dataMax)) {\n                    isFullRange =\n                        axis.max - axis.min === axis.dataMax - axis.dataMin;\n                    if (!isFullRange) {\n                        this.originalOrdinalRange = axis.max - axis.min;\n                    }\n                }\n                if (/%$/.test(overscroll)) {\n                    // If overscroll is percentage\n                    return calculateOverscroll(overscrollValue / 100);\n                }\n                if (/px/.test(overscroll)) {\n                    // If overscroll is pixels, it is limited to 90% of the axis\n                    // length to prevent division by zero\n                    const limitedOverscrollValue = Math.min(overscrollValue, axis.len * 0.9), pixelToPercent = limitedOverscrollValue / axis.len;\n                    return calculateOverscroll(pixelToPercent /\n                        (isFullRange ? (1 - pixelToPercent) : 1));\n                }\n                // If overscroll is a string but not pixels or percentage,\n                // return 0 as no overscroll\n                return 0;\n            }\n            return overscroll;\n        }\n    }\n    OrdinalAxis.Additions = Additions;\n})(OrdinalAxis || (OrdinalAxis = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Axis_OrdinalAxis = (OrdinalAxis);\n\n;// ./code/es-modules/Stock/RangeSelector/RangeSelectorDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Declarations\n *\n * */\n/**\n * An object containing language-related strings and settings. A typical setup\n * uses `Highcharts.setOptions` to make the options apply to all charts in the\n * same page.\n *\n * ```js\n * Highcharts.setOptions({\n *     lang: {\n *         locale: 'fr'\n *     }\n * });\n * ```\n *\n * @optionparent lang\n */\nconst lang = {\n    /**\n     * The text for the label for the range selector buttons.\n     *\n     * @product highstock gantt\n     */\n    rangeSelectorZoom: 'Zoom',\n    /**\n     * The text for the label for the \"from\" input box in the range\n     * selector. Since v9.0, this string is empty as the label is not\n     * rendered by default.\n     *\n     * @product highstock gantt\n     */\n    rangeSelectorFrom: '',\n    /**\n     * The text for the label for the \"to\" input box in the range selector.\n     *\n     * @product highstock gantt\n     */\n    rangeSelectorTo: '→',\n    /**\n     * The default text for the rangeselector buttons.\n     *\n     * @since 12.2.0\n     */\n    rangeSelector: {\n        allText: 'All',\n        allTitle: 'View all',\n        monthText: '{count}m',\n        monthTitle: 'View {count} {#eq count 1}month{else}months{/eq}',\n        yearText: '{count}y',\n        yearTitle: 'View {count} {#eq count 1}year{else}years{/eq}',\n        ytdText: 'YTD',\n        ytdTitle: 'View year to date'\n    }\n};\n/**\n * The range selector is a tool for selecting ranges to display within\n * the chart. It provides buttons to select preconfigured ranges in\n * the chart, like 1 day, 1 week, 1 month etc. It also provides input\n * boxes where min and max dates can be manually input.\n *\n * @product      highstock gantt\n * @optionparent rangeSelector\n */\nconst rangeSelector = {\n    /**\n     * Whether to enable all buttons from the start. By default buttons are\n     * only enabled if the corresponding time range exists on the X axis,\n     * but enabling all buttons allows for dynamically loading different\n     * time ranges.\n     *\n     * @sample {highstock} stock/rangeselector/allbuttonsenabled-true/\n     *         All buttons enabled\n     *\n     * @since     2.0.3\n     */\n    allButtonsEnabled: false,\n    /**\n     * An array of configuration objects for the buttons.\n     *\n     * Defaults to:\n     * ```js\n     * buttons: [{\n     *     type: 'month',\n     *     count: 1,\n     *     text: '1m',\n     *     title: 'View 1 month'\n     * }, {\n     *     type: 'month',\n     *     count: 3,\n     *     text: '3m',\n     *     title: 'View 3 months'\n     * }, {\n     *     type: 'month',\n     *     count: 6,\n     *     text: '6m',\n     *     title: 'View 6 months'\n     * }, {\n     *     type: 'ytd',\n     *     text: 'YTD',\n     *     title: 'View year to date'\n     * }, {\n     *     type: 'year',\n     *     count: 1,\n     *     text: '1y',\n     *     title: 'View 1 year'\n     * }, {\n     *     type: 'all',\n     *     text: 'All',\n     *     title: 'View all'\n     * }]\n     * ```\n     *\n     * @sample {highstock} stock/demo/rangeselector-datagrouping/\n     *         Data grouping by buttons\n     *\n     * @type      {Array<*>}\n     */\n    buttons: [{\n            type: 'month',\n            count: 1\n        }, {\n            type: 'month',\n            count: 3\n        }, {\n            type: 'month',\n            count: 6\n        }, {\n            type: 'ytd'\n        }, {\n            type: 'year',\n            count: 1\n        }, {\n            type: 'all'\n        }],\n    /**\n     * How many units of the defined type the button should span. If `type`\n     * is \"month\" and `count` is 3, the button spans three months.\n     *\n     * @type      {number}\n     * @default   1\n     * @apioption rangeSelector.buttons.count\n     */\n    /**\n     * Fires when clicking on the rangeSelector button. One parameter,\n     * event, is passed to the function, containing common event\n     * information.\n     *\n     * ```js\n     * click: function(e) {\n     *   console.log(this);\n     * }\n     * ```\n     *\n     * Return false to stop default button's click action.\n     *\n     * @sample {highstock} stock/rangeselector/button-click/\n     *         Click event on the button\n     *\n     * @type      {Highcharts.RangeSelectorClickCallbackFunction}\n     * @apioption rangeSelector.buttons.events.click\n     */\n    /**\n     * Additional range (in milliseconds) added to the end of the calculated\n     * time span.\n     *\n     * @sample {highstock} stock/rangeselector/min-max-offsets/\n     *         Button offsets\n     *\n     * @type      {number}\n     * @default   0\n     * @since     6.0.0\n     * @apioption rangeSelector.buttons.offsetMax\n     */\n    /**\n     * Additional range (in milliseconds) added to the start of the\n     * calculated time span.\n     *\n     * @sample {highstock} stock/rangeselector/min-max-offsets/\n     *         Button offsets\n     *\n     * @type      {number}\n     * @default   0\n     * @since     6.0.0\n     * @apioption rangeSelector.buttons.offsetMin\n     */\n    /**\n     * When buttons apply dataGrouping on a series, by default zooming\n     * in/out will deselect buttons and unset dataGrouping. Enable this\n     * option to keep buttons selected when extremes change.\n     *\n     * @sample {highstock} stock/rangeselector/preserve-datagrouping/\n     *         Different preserveDataGrouping settings\n     *\n     * @type      {boolean}\n     * @default   false\n     * @since     6.1.2\n     * @apioption rangeSelector.buttons.preserveDataGrouping\n     */\n    /**\n     * A custom data grouping object for each button.\n     *\n     * @see [series.dataGrouping](#plotOptions.series.dataGrouping)\n     *\n     * @sample {highstock} stock/demo/rangeselector-datagrouping/\n     *         Data grouping by range selector buttons\n     *\n     * @type      {*}\n     * @extends   plotOptions.series.dataGrouping\n     * @apioption rangeSelector.buttons.dataGrouping\n     */\n    /**\n     * The text for the button itself.\n     *\n     * @type      {string}\n     * @apioption rangeSelector.buttons.text\n     */\n    /**\n     * Explanation for the button, shown as a tooltip on hover, and used by\n     * assistive technology.\n     *\n     * @type      {string}\n     * @apioption rangeSelector.buttons.title\n     */\n    /**\n     * Defined the time span for the button. Can be one of `millisecond`,\n     * `second`, `minute`, `hour`, `day`, `week`, `month`, `year`, `ytd`,\n     * and `all`.\n     *\n     * @type       {Highcharts.RangeSelectorButtonTypeValue}\n     * @apioption  rangeSelector.buttons.type\n     */\n    /**\n     * The space in pixels between the buttons in the range selector.\n     */\n    buttonSpacing: 5,\n    /**\n     * Whether to collapse the range selector buttons into a dropdown when\n     * there is not enough room to show everything in a single row, instead\n     * of dividing the range selector into multiple rows.\n     * Can be one of the following:\n     *  - `always`: Always collapse\n     *  - `responsive`: Only collapse when there is not enough room\n     *  - `never`: Never collapse\n     *\n     * @sample {highstock} stock/rangeselector/dropdown/\n     *         Dropdown option\n     *\n     * @validvalue [\"always\", \"responsive\", \"never\"]\n     * @since 9.0.0\n     */\n    dropdown: 'responsive',\n    /**\n     * Enable or disable the range selector. Default to `true` for stock\n     * charts, using the `stockChart` factory.\n     *\n     * @sample {highstock} stock/rangeselector/enabled/\n     *         Disable the range selector\n     *\n     * @type {boolean|undefined}\n     * @default {highstock} true\n     */\n    enabled: void 0,\n    /**\n     * The vertical alignment of the rangeselector box. Allowed properties\n     * are `top`, `middle`, `bottom`.\n     *\n     * @sample {highstock} stock/rangeselector/vertical-align-middle/\n     *         Middle\n     * @sample {highstock} stock/rangeselector/vertical-align-bottom/\n     *         Bottom\n     *\n     * @type  {Highcharts.VerticalAlignValue}\n     * @since 6.0.0\n     */\n    verticalAlign: 'top',\n    /**\n     * A collection of attributes for the buttons. The object takes SVG\n     * attributes like `fill`, `stroke`, `stroke-width`, as well as `style`,\n     * a collection of CSS properties for the text.\n     *\n     * The object can also be extended with states, so you can set\n     * presentational options for `hover`, `select` or `disabled` button\n     * states.\n     *\n     * CSS styles for the text label.\n     *\n     * In styled mode, the buttons are styled by the\n     * `.highcharts-range-selector-buttons .highcharts-button` rule with its\n     * different states.\n     *\n     * @sample {highstock} stock/rangeselector/styling/\n     *         Styling the buttons and inputs\n     *\n     * @type {Highcharts.SVGAttributes}\n     */\n    buttonTheme: {\n        /** @ignore */\n        width: 28,\n        /** @ignore */\n        height: 18,\n        /** @ignore */\n        padding: 2,\n        /** @ignore */\n        zIndex: 7 // #484, #852\n    },\n    /**\n     * When the rangeselector is floating, the plot area does not reserve\n     * space for it. This opens for positioning anywhere on the chart.\n     *\n     * @sample {highstock} stock/rangeselector/floating/\n     *         Placing the range selector between the plot area and the\n     *         navigator\n     *\n     * @since 6.0.0\n     */\n    floating: false,\n    /**\n     * The x offset of the range selector relative to its horizontal\n     * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n     *\n     * @since 6.0.0\n     */\n    x: 0,\n    /**\n     * The y offset of the range selector relative to its horizontal\n     * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n     *\n     * @since 6.0.0\n     */\n    y: 0,\n    /**\n     * Deprecated. The height of the range selector. Currently it is\n     * calculated dynamically.\n     *\n     * @deprecated\n     * @type  {number|undefined}\n     * @since 2.1.9\n     */\n    height: void 0, // Reserved space for buttons and input\n    /**\n     * The border color of the date input boxes.\n     *\n     * @sample {highstock} stock/rangeselector/styling/\n     *         Styling the buttons and inputs\n     *\n     * @type      {Highcharts.ColorString}\n     * @since     1.3.7\n     */\n    inputBoxBorderColor: 'none',\n    /**\n     * The pixel height of the date input boxes.\n     *\n     * @sample {highstock} stock/rangeselector/styling/\n     *         Styling the buttons and inputs\n     *\n     * @since     1.3.7\n     */\n    inputBoxHeight: 17,\n    /**\n     * The pixel width of the date input boxes. When `undefined`, the width\n     * is fitted to the rendered content.\n     *\n     * @sample {highstock} stock/rangeselector/styling/\n     *         Styling the buttons and inputs\n     *\n     * @type   {number|undefined}\n     * @since  1.3.7\n     */\n    inputBoxWidth: void 0,\n    /**\n     * The date format in the input boxes when not selected for editing.\n     * Defaults to `%e %b %Y`.\n     *\n     * This is used to determine which type of input to show,\n     * `datetime-local`, `date` or `time` and falling back to `text` when\n     * the browser does not support the input type or the format contains\n     * milliseconds.\n     *\n     * @sample {highstock} stock/rangeselector/input-type/\n     *         Input types\n     * @sample {highstock} stock/rangeselector/input-format/\n     *         Milliseconds in the range selector\n     *\n     */\n    inputDateFormat: '%[ebY]',\n    /**\n     * A custom callback function to parse values entered in the input boxes and\n     * return a valid JavaScript time as milliseconds since 1970. The first\n     * argument passed is the value to parse, second is a boolean indicating use\n     * of UTC time. The third is a reference to the `time` object. Time zone can\n     * be read from `time.timezone`.\n     *\n     * This will only get called for inputs of type `text`. Since v8.2.3, the\n     * input type is dynamically determined based on the granularity of the\n     * `inputDateFormat` and the browser support.\n     *\n     * @sample {highstock} stock/rangeselector/input-format/\n     *         Milliseconds in the range selector\n     *\n     * @type      {Highcharts.RangeSelectorParseCallbackFunction}\n     * @since     1.3.3\n     */\n    inputDateParser: void 0,\n    /**\n     * The date format in the input boxes when they are selected for\n     * editing. This must be a format that is recognized by JavaScript\n     * Date.parse.\n     *\n     * This will only be used for inputs of type `text`. Since v8.2.3,\n     * the input type is dynamically determined based on the granularity\n     * of the `inputDateFormat` and the browser support.\n     *\n     * @sample {highstock} stock/rangeselector/input-format/\n     *         Milliseconds in the range selector\n     *\n     */\n    inputEditDateFormat: '%Y-%m-%d',\n    /**\n     * Enable or disable the date input boxes.\n     */\n    inputEnabled: true,\n    /**\n     * Positioning for the input boxes. Allowed properties are `align`,\n     *  `x` and `y`.\n     *\n     * @since 1.2.4\n     */\n    inputPosition: {\n        /**\n         * The alignment of the input box. Allowed properties are `left`,\n         * `center`, `right`.\n         *\n         * @sample {highstock} stock/rangeselector/input-button-opposite-alignment/\n         *         Opposite alignment\n         *\n         * @sample {highstock} stock/rangeselector/input-button-same-alignment/\n         *         Same alignment for buttons and input\n         *\n         * @type  {Highcharts.AlignValue}\n         * @since 6.0.0\n         */\n        align: 'right',\n        /**\n         * X offset of the input row.\n         */\n        x: 0,\n        /**\n         * Y offset of the input row.\n         */\n        y: 0\n    },\n    /**\n     * The space in pixels between the labels and the date input boxes in\n     * the range selector.\n     *\n     * @since 9.0.0\n     */\n    inputSpacing: 5,\n    /**\n     * The index of the button to appear pre-selected. If the selected range\n     * exceeds the total data range and the 'all' option is available,\n     * the 'all' option, showing the full range, is automatically selected.\n     *\n     * @type      {number}\n     */\n    selected: void 0,\n    /**\n     * Positioning for the button row.\n     *\n     * @since 1.2.4\n     */\n    buttonPosition: {\n        /**\n         * The alignment of the input box. Allowed properties are `left`,\n         * `center`, `right`.\n         *\n         * @sample {highstock} stock/rangeselector/input-button-opposite-alignment/\n         *         Opposite alignment\n         *\n         * @sample {highstock} stock/rangeselector/input-button-same-alignment/\n         *         Same alignment for buttons and input\n         *\n         * @type  {Highcharts.AlignValue}\n         * @since 6.0.0\n         */\n        align: 'left',\n        /**\n         * X offset of the button row.\n         */\n        x: 0,\n        /**\n         * Y offset of the button row.\n         */\n        y: 0\n    },\n    /**\n     * CSS for the HTML inputs in the range selector.\n     *\n     * In styled mode, the inputs are styled by the\n     * `.highcharts-range-input text` rule in SVG mode, and\n     * `input.highcharts-range-selector` when active.\n     *\n     * @sample {highstock} stock/rangeselector/styling/\n     *         Styling the buttons and inputs\n     *\n     * @type      {Highcharts.CSSObject}\n     * @apioption rangeSelector.inputStyle\n     */\n    inputStyle: {\n        /** @ignore */\n        color: \"#334eff\" /* Palette.highlightColor80 */,\n        /** @ignore */\n        cursor: 'pointer',\n        /** @ignore */\n        fontSize: '0.8em'\n    },\n    /**\n     * CSS styles for the labels - the Zoom, From and To texts.\n     *\n     * In styled mode, the labels are styled by the\n     * `.highcharts-range-label` class.\n     *\n     * @sample {highstock} stock/rangeselector/styling/\n     *         Styling the buttons and inputs\n     *\n     * @type {Highcharts.CSSObject}\n     */\n    labelStyle: {\n        /** @ignore */\n        color: \"#666666\" /* Palette.neutralColor60 */,\n        /** @ignore */\n        fontSize: '0.8em'\n    }\n};\n/* *\n *\n *  Default Export\n *\n * */\nconst RangeSelectorDefaults = {\n    lang,\n    rangeSelector\n};\n/* harmony default export */ const RangeSelector_RangeSelectorDefaults = (RangeSelectorDefaults);\n\n;// ./code/es-modules/Stock/RangeSelector/RangeSelectorComposition.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { defaultOptions: RangeSelectorComposition_defaultOptions } = (external_highcharts_src_js_default_default());\n\nconst { composed: RangeSelectorComposition_composed } = (external_highcharts_src_js_default_default());\n\n\nconst { addEvent: RangeSelectorComposition_addEvent, defined: RangeSelectorComposition_defined, extend: RangeSelectorComposition_extend, isNumber: RangeSelectorComposition_isNumber, merge: RangeSelectorComposition_merge, pick: RangeSelectorComposition_pick, pushUnique: RangeSelectorComposition_pushUnique } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\nconst chartDestroyEvents = [];\n/* *\n *\n *  Variables\n *\n * */\nlet RangeSelectorConstructor;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Get the axis min value based on the range option and the current max. For\n * stock charts this is extended via the {@link RangeSelector} so that if the\n * selected range is a multiple of months or years, it is compensated for\n * various month lengths.\n *\n * @private\n * @function Highcharts.Axis#minFromRange\n * @return {number|undefined}\n *         The new minimum value.\n */\nfunction axisMinFromRange() {\n    const rangeOptions = this.range, type = rangeOptions.type, max = this.max, time = this.chart.time, \n    // Get the true range from a start date\n    getTrueRange = function (base, count) {\n        const original = time.toParts(base), modified = original.slice();\n        if (type === 'year') {\n            modified[0] += count;\n        }\n        else {\n            modified[1] += count;\n        }\n        let d = time.makeTime.apply(time, modified);\n        const numbers = time.toParts(d);\n        // When subtracting a month still places us in the same month, like\n        // subtracting one month from March 31 places us on February 31,\n        // which translates to March 3 (#6537)\n        if (type === 'month' &&\n            original[1] === numbers[1] &&\n            Math.abs(count) === 1) {\n            modified[0] = original[0];\n            modified[1] = original[1];\n            // 0 is the last day of the previous month\n            modified[2] = 0;\n        }\n        d = time.makeTime.apply(time, modified);\n        return d - base;\n    };\n    let min, range;\n    if (RangeSelectorComposition_isNumber(rangeOptions)) {\n        min = max - rangeOptions;\n        range = rangeOptions;\n    }\n    else if (rangeOptions) {\n        min = max + getTrueRange(max, -(rangeOptions.count || 1));\n        // Let the fixedRange reflect initial settings (#5930)\n        if (this.chart) {\n            this.chart.setFixedRange(max - min);\n        }\n    }\n    const dataMin = RangeSelectorComposition_pick(this.dataMin, Number.MIN_VALUE);\n    if (!RangeSelectorComposition_isNumber(min)) {\n        min = dataMin;\n    }\n    if (min <= dataMin) {\n        min = dataMin;\n        if (typeof range === 'undefined') { // #4501\n            range = getTrueRange(min, rangeOptions.count);\n        }\n        this.newMax = Math.min(min + range, RangeSelectorComposition_pick(this.dataMax, Number.MAX_VALUE));\n    }\n    if (!RangeSelectorComposition_isNumber(max)) {\n        min = void 0;\n    }\n    else if (!RangeSelectorComposition_isNumber(rangeOptions) &&\n        rangeOptions &&\n        rangeOptions._offsetMin) {\n        min += rangeOptions._offsetMin;\n    }\n    return min;\n}\n/**\n * @private\n */\nfunction updateRangeSelectorButtons() {\n    this.rangeSelector?.redrawElements();\n}\n/**\n * @private\n */\nfunction RangeSelectorComposition_compose(AxisClass, ChartClass, RangeSelectorClass) {\n    RangeSelectorConstructor = RangeSelectorClass;\n    if (RangeSelectorComposition_pushUnique(RangeSelectorComposition_composed, 'RangeSelector')) {\n        const chartProto = ChartClass.prototype;\n        AxisClass.prototype.minFromRange = axisMinFromRange;\n        RangeSelectorComposition_addEvent(ChartClass, 'afterGetContainer', createRangeSelector);\n        RangeSelectorComposition_addEvent(ChartClass, 'beforeRender', RangeSelectorComposition_onChartBeforeRender);\n        RangeSelectorComposition_addEvent(ChartClass, 'destroy', onChartDestroy);\n        RangeSelectorComposition_addEvent(ChartClass, 'getMargins', onChartGetMargins);\n        RangeSelectorComposition_addEvent(ChartClass, 'redraw', redrawRangeSelector);\n        RangeSelectorComposition_addEvent(ChartClass, 'update', RangeSelectorComposition_onChartUpdate);\n        RangeSelectorComposition_addEvent(ChartClass, 'beforeRedraw', updateRangeSelectorButtons);\n        chartProto.callbacks.push(redrawRangeSelector);\n        RangeSelectorComposition_extend(RangeSelectorComposition_defaultOptions, { rangeSelector: RangeSelector_RangeSelectorDefaults.rangeSelector });\n        RangeSelectorComposition_extend(RangeSelectorComposition_defaultOptions.lang, RangeSelector_RangeSelectorDefaults.lang);\n    }\n}\n/**\n * Initialize rangeselector for stock charts\n * @private\n */\nfunction createRangeSelector() {\n    if (this.options.rangeSelector &&\n        this.options.rangeSelector.enabled) {\n        this.rangeSelector = new RangeSelectorConstructor(this);\n    }\n}\n/**\n * @private\n */\nfunction RangeSelectorComposition_onChartBeforeRender() {\n    const chart = this, rangeSelector = chart.rangeSelector;\n    if (rangeSelector) {\n        if (RangeSelectorComposition_isNumber(rangeSelector.deferredYTDClick)) {\n            rangeSelector.clickButton(rangeSelector.deferredYTDClick);\n            delete rangeSelector.deferredYTDClick;\n        }\n        const verticalAlign = rangeSelector.options.verticalAlign;\n        if (!rangeSelector.options.floating) {\n            if (verticalAlign === 'bottom') {\n                this.extraBottomMargin = true;\n            }\n            else if (verticalAlign === 'top') {\n                this.extraTopMargin = true;\n            }\n        }\n    }\n}\nfunction redrawRangeSelector() {\n    const chart = this;\n    const rangeSelector = this.rangeSelector;\n    if (!rangeSelector) {\n        return;\n    }\n    let alignTo;\n    const extremes = chart.xAxis[0].getExtremes();\n    const legend = chart.legend;\n    const verticalAlign = (rangeSelector &&\n        rangeSelector.options.verticalAlign);\n    if (RangeSelectorComposition_isNumber(extremes.min)) {\n        rangeSelector.render(extremes.min, extremes.max);\n    }\n    // Re-align the legend so that it's below the rangeselector\n    if (legend.display &&\n        verticalAlign === 'top' &&\n        verticalAlign === legend.options.verticalAlign) {\n        // Create a new alignment box for the legend.\n        alignTo = RangeSelectorComposition_merge(chart.spacingBox);\n        if (legend.options.layout === 'vertical') {\n            alignTo.y = chart.plotTop;\n        }\n        else {\n            alignTo.y += rangeSelector.getHeight();\n        }\n        legend.group.placed = false; // Don't animate the alignment.\n        legend.align(alignTo);\n    }\n}\n/**\n * Remove resize/afterSetExtremes at chart destroy.\n * @private\n */\nfunction onChartDestroy() {\n    for (let i = 0, iEnd = chartDestroyEvents.length; i < iEnd; ++i) {\n        const events = chartDestroyEvents[i];\n        if (events[0] === this) {\n            events[1].forEach((unbind) => unbind());\n            chartDestroyEvents.splice(i, 1);\n            return;\n        }\n    }\n}\n/**\n *\n */\nfunction onChartGetMargins() {\n    const rangeSelector = this.rangeSelector;\n    if (rangeSelector?.options?.enabled) {\n        const rangeSelectorHeight = rangeSelector.getHeight();\n        const verticalAlign = rangeSelector.options.verticalAlign;\n        if (!rangeSelector.options.floating) {\n            if (verticalAlign === 'bottom') {\n                this.marginBottom += rangeSelectorHeight;\n            }\n            else if (verticalAlign !== 'middle') {\n                this.plotTop += rangeSelectorHeight;\n            }\n        }\n    }\n}\n/**\n * @private\n */\nfunction RangeSelectorComposition_onChartUpdate(e) {\n    const chart = this, options = e.options, optionsRangeSelector = options.rangeSelector, extraBottomMarginWas = this.extraBottomMargin, extraTopMarginWas = this.extraTopMargin;\n    let rangeSelector = chart.rangeSelector;\n    if (optionsRangeSelector &&\n        optionsRangeSelector.enabled &&\n        !RangeSelectorComposition_defined(rangeSelector) &&\n        this.options.rangeSelector) {\n        this.options.rangeSelector.enabled = true;\n        this.rangeSelector = rangeSelector = new RangeSelectorConstructor(this);\n    }\n    this.extraBottomMargin = false;\n    this.extraTopMargin = false;\n    if (rangeSelector) {\n        const verticalAlign = (optionsRangeSelector &&\n            optionsRangeSelector.verticalAlign) || (rangeSelector.options && rangeSelector.options.verticalAlign);\n        if (!rangeSelector.options.floating) {\n            if (verticalAlign === 'bottom') {\n                this.extraBottomMargin = true;\n            }\n            else if (verticalAlign !== 'middle') {\n                this.extraTopMargin = true;\n            }\n        }\n        if (this.extraBottomMargin !== extraBottomMarginWas ||\n            this.extraTopMargin !== extraTopMarginWas) {\n            this.isDirtyBox = true;\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst RangeSelectorComposition = {\n    compose: RangeSelectorComposition_compose\n};\n/* harmony default export */ const RangeSelector_RangeSelectorComposition = (RangeSelectorComposition);\n\n;// external [\"../highcharts.js\",\"default\",\"SVGElement\"]\nconst external_highcharts_src_js_default_SVGElement_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].SVGElement;\nvar external_highcharts_src_js_default_SVGElement_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_SVGElement_namespaceObject);\n;// external [\"../highcharts.js\",\"default\",\"Templating\"]\nconst external_highcharts_src_js_default_Templating_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Templating;\nvar external_highcharts_src_js_default_Templating_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Templating_namespaceObject);\n;// ./code/es-modules/Stock/RangeSelector/RangeSelector.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { defaultOptions: RangeSelector_defaultOptions } = (external_highcharts_src_js_default_default());\n\n\n\n\nconst { format } = (external_highcharts_src_js_default_Templating_default());\n\n\nconst { addEvent: RangeSelector_addEvent, createElement, css: RangeSelector_css, defined: RangeSelector_defined, destroyObjectProperties: RangeSelector_destroyObjectProperties, diffObjects, discardElement, extend: RangeSelector_extend, fireEvent: RangeSelector_fireEvent, isNumber: RangeSelector_isNumber, isString: RangeSelector_isString, merge: RangeSelector_merge, objectEach: RangeSelector_objectEach, pick: RangeSelector_pick, splat: RangeSelector_splat } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Get the preferred input type based on a date format string.\n *\n * @private\n * @function preferredInputType\n */\nfunction preferredInputType(format) {\n    const hasTimeKey = (char) => new RegExp(`%[[a-zA-Z]*${char}`).test(format);\n    const ms = RangeSelector_isString(format) ?\n        format.indexOf('%L') !== -1 :\n        // Implemented but not typed as of 2024\n        format.fractionalSecondDigits;\n    if (ms) {\n        return 'text';\n    }\n    const date = RangeSelector_isString(format) ?\n        ['a', 'A', 'd', 'e', 'w', 'b', 'B', 'm', 'o', 'y', 'Y']\n            .some(hasTimeKey) :\n        format.dateStyle || format.day || format.month || format.year;\n    const time = RangeSelector_isString(format) ?\n        ['H', 'k', 'I', 'l', 'M', 'S'].some(hasTimeKey) :\n        format.timeStyle || format.hour || format.minute || format.second;\n    if (date && time) {\n        return 'datetime-local';\n    }\n    if (date) {\n        return 'date';\n    }\n    if (time) {\n        return 'time';\n    }\n    return 'text';\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * The range selector.\n *\n * @private\n * @class\n * @name Highcharts.RangeSelector\n * @param {Highcharts.Chart} chart\n */\nclass RangeSelector {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    static compose(AxisClass, ChartClass) {\n        RangeSelector_RangeSelectorComposition.compose(AxisClass, ChartClass, RangeSelector);\n    }\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(chart) {\n        this.isDirty = false;\n        this.buttonOptions = [];\n        this.initialButtonGroupWidth = 0;\n        this.maxButtonWidth = () => {\n            let buttonWidth = 0;\n            this.buttons.forEach((button) => {\n                const bBox = button.getBBox();\n                if (bBox.width > buttonWidth) {\n                    buttonWidth = bBox.width;\n                }\n            });\n            return buttonWidth;\n        };\n        this.init(chart);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * The method to run when one of the buttons in the range selectors is\n     * clicked\n     *\n     * @private\n     * @function Highcharts.RangeSelector#clickButton\n     * @param {number} i\n     *        The index of the button\n     * @param {boolean} [redraw]\n     */\n    clickButton(i, redraw) {\n        const rangeSelector = this, chart = rangeSelector.chart, rangeOptions = rangeSelector.buttonOptions[i], baseAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || baseAxis || {}, type = rangeOptions.type, dataGrouping = rangeOptions.dataGrouping;\n        let dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, newMin, newMax = RangeSelector_isNumber(baseAxis?.max) ? Math.round(Math.min(baseAxis.max, dataMax ?? baseAxis.max)) : void 0, // #1568\n        baseXAxisOptions, range = rangeOptions._range, rangeMin, ctx, ytdExtremes, addOffsetMin = true;\n        // Chart has no data, base series is removed\n        if (dataMin === null || dataMax === null) {\n            return;\n        }\n        rangeSelector.setSelected(i);\n        // Apply dataGrouping associated to button\n        if (dataGrouping) {\n            this.forcedDataGrouping = true;\n            external_highcharts_src_js_default_Axis_default().prototype.setDataGrouping.call(baseAxis || { chart: this.chart }, dataGrouping, false);\n            this.frozenStates = rangeOptions.preserveDataGrouping;\n        }\n        // Apply range\n        if (type === 'month' || type === 'year') {\n            if (!baseAxis) {\n                // This is set to the user options and picked up later when the\n                // axis is instantiated so that we know the min and max.\n                range = rangeOptions;\n            }\n            else {\n                ctx = {\n                    range: rangeOptions,\n                    max: newMax,\n                    chart: chart,\n                    dataMin: dataMin,\n                    dataMax: dataMax\n                };\n                newMin = baseAxis.minFromRange.call(ctx);\n                if (RangeSelector_isNumber(ctx.newMax)) {\n                    newMax = ctx.newMax;\n                }\n                // #15799: offsetMin is added in minFromRange so that it works\n                // with pre-selected buttons as well\n                addOffsetMin = false;\n            }\n            // Fixed times like minutes, hours, days\n        }\n        else if (range) {\n            if (RangeSelector_isNumber(newMax)) {\n                newMin = Math.max(newMax - range, dataMin);\n                newMax = Math.min(newMin + range, dataMax);\n                addOffsetMin = false;\n            }\n        }\n        else if (type === 'ytd') {\n            // On user clicks on the buttons, or a delayed action running from\n            // the beforeRender event (below), the baseAxis is defined.\n            if (baseAxis) {\n                // When \"ytd\" is the pre-selected button for the initial view,\n                // its calculation is delayed and rerun in the beforeRender\n                // event (below). When the series are initialized, but before\n                // the chart is rendered, we have access to the xData array\n                // (#942).\n                if (baseAxis.hasData() && (!RangeSelector_isNumber(dataMax) ||\n                    !RangeSelector_isNumber(dataMin))) {\n                    dataMin = Number.MAX_VALUE;\n                    dataMax = -Number.MAX_VALUE;\n                    chart.series.forEach((series) => {\n                        // Reassign it to the last item\n                        const xData = series.getColumn('x');\n                        if (xData.length) {\n                            dataMin = Math.min(xData[0], dataMin);\n                            dataMax = Math.max(xData[xData.length - 1], dataMax);\n                        }\n                    });\n                    redraw = false;\n                }\n                if (RangeSelector_isNumber(dataMax) && RangeSelector_isNumber(dataMin)) {\n                    ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin);\n                    newMin = rangeMin = ytdExtremes.min;\n                    newMax = ytdExtremes.max;\n                }\n                // \"ytd\" is pre-selected. We don't yet have access to processed\n                // point and extremes data (things like pointStart and pointInterval\n                // are missing), so we delay the process (#942)\n            }\n            else {\n                rangeSelector.deferredYTDClick = i;\n                return;\n            }\n        }\n        else if (type === 'all' && baseAxis) {\n            // If the navigator exist and the axis range is declared reset that\n            // range and from now on only use the range set by a user, #14742.\n            if (chart.navigator && chart.navigator.baseSeries[0]) {\n                chart.navigator.baseSeries[0].xAxis.options.range = void 0;\n            }\n            newMin = dataMin;\n            newMax = dataMax;\n        }\n        if (addOffsetMin && rangeOptions._offsetMin && RangeSelector_defined(newMin)) {\n            newMin += rangeOptions._offsetMin;\n        }\n        if (rangeOptions._offsetMax && RangeSelector_defined(newMax)) {\n            newMax += rangeOptions._offsetMax;\n        }\n        if (this.dropdown) {\n            this.dropdown.selectedIndex = i + 1;\n        }\n        // Update the chart\n        if (!baseAxis) {\n            // Axis not yet instantiated. Temporarily set min and range\n            // options and axes once defined and remove them on\n            // chart load (#4317 & #20529).\n            baseXAxisOptions = RangeSelector_splat(chart.options.xAxis || {})[0];\n            const axisRangeUpdateEvent = RangeSelector_addEvent(chart, 'afterCreateAxes', function () {\n                const xAxis = chart.xAxis[0];\n                xAxis.range = xAxis.options.range = range;\n                xAxis.min = xAxis.options.min = rangeMin;\n            });\n            RangeSelector_addEvent(chart, 'load', function resetMinAndRange() {\n                const xAxis = chart.xAxis[0];\n                chart.setFixedRange(rangeOptions._range);\n                xAxis.options.range = baseXAxisOptions.range;\n                xAxis.options.min = baseXAxisOptions.min;\n                axisRangeUpdateEvent(); // Remove event\n            });\n        }\n        else if (RangeSelector_isNumber(newMin) && RangeSelector_isNumber(newMax)) {\n            // Existing axis object. Set extremes after render time.\n            baseAxis.setExtremes(newMin, newMax, RangeSelector_pick(redraw, true), void 0, // Auto animation\n            {\n                trigger: 'rangeSelectorButton',\n                rangeSelectorButton: rangeOptions\n            });\n            chart.setFixedRange(rangeOptions._range);\n        }\n        RangeSelector_fireEvent(this, 'afterBtnClick');\n    }\n    /**\n     * Set the selected option. This method only sets the internal flag, it\n     * doesn't update the buttons or the actual zoomed range.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#setSelected\n     * @param {number} [selected]\n     */\n    setSelected(selected) {\n        this.selected = this.options.selected = selected;\n    }\n    /**\n     * Initialize the range selector\n     *\n     * @private\n     * @function Highcharts.RangeSelector#init\n     * @param {Highcharts.Chart} chart\n     */\n    init(chart) {\n        const rangeSelector = this, options = chart.options.rangeSelector, langOptions = chart.options.lang, buttonOptions = options.buttons, selectedOption = options.selected, blurInputs = function () {\n            const minInput = rangeSelector.minInput, maxInput = rangeSelector.maxInput;\n            // #3274 in some case blur is not defined\n            if (minInput && !!minInput.blur) {\n                RangeSelector_fireEvent(minInput, 'blur');\n            }\n            if (maxInput && !!maxInput.blur) {\n                RangeSelector_fireEvent(maxInput, 'blur');\n            }\n        };\n        rangeSelector.chart = chart;\n        rangeSelector.options = options;\n        rangeSelector.buttons = [];\n        rangeSelector.buttonOptions = buttonOptions\n            .map((opt) => {\n            if (opt.type && langOptions.rangeSelector) {\n                opt.text ?? (opt.text = langOptions.rangeSelector[`${opt.type}Text`]);\n                opt.title ?? (opt.title = langOptions.rangeSelector[`${opt.type}Title`]);\n            }\n            opt.text = format(opt.text, {\n                count: opt.count || 1\n            });\n            opt.title = format(opt.title, {\n                count: opt.count || 1\n            });\n            return opt;\n        });\n        this.eventsToUnbind = [];\n        this.eventsToUnbind.push(RangeSelector_addEvent(chart.container, 'mousedown', blurInputs));\n        this.eventsToUnbind.push(RangeSelector_addEvent(chart, 'resize', blurInputs));\n        // Extend the buttonOptions with actual range\n        buttonOptions.forEach(rangeSelector.computeButtonRange);\n        // Zoomed range based on a pre-selected button index\n        if (typeof selectedOption !== 'undefined' &&\n            buttonOptions[selectedOption]) {\n            this.clickButton(selectedOption, false);\n        }\n        this.eventsToUnbind.push(RangeSelector_addEvent(chart, 'load', function () {\n            // If a data grouping is applied to the current button, release it\n            // when extremes change\n            if (chart.xAxis && chart.xAxis[0]) {\n                RangeSelector_addEvent(chart.xAxis[0], 'setExtremes', function (e) {\n                    if (RangeSelector_isNumber(this.max) &&\n                        RangeSelector_isNumber(this.min) &&\n                        this.max - this.min !== chart.fixedRange &&\n                        e.trigger !== 'rangeSelectorButton' &&\n                        e.trigger !== 'updatedData' &&\n                        rangeSelector.forcedDataGrouping &&\n                        !rangeSelector.frozenStates) {\n                        this.setDataGrouping(false, false);\n                    }\n                });\n            }\n        }));\n        this.createElements();\n    }\n    /**\n     * Dynamically update the range selector buttons after a new range has been\n     * set\n     *\n     * @private\n     * @function Highcharts.RangeSelector#updateButtonStates\n     */\n    updateButtonStates() {\n        const rangeSelector = this, chart = this.chart, dropdown = this.dropdown, dropdownLabel = this.dropdownLabel, baseAxis = chart.xAxis[0], actualRange = Math.round(baseAxis.max - baseAxis.min), hasNoData = !baseAxis.hasVisibleSeries, day = 24 * 36e5, // A single day in milliseconds\n        unionExtremes = (chart.scroller &&\n            chart.scroller.getUnionExtremes()) || baseAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin), ytdMin = ytdExtremes.min, ytdMax = ytdExtremes.max, selected = rangeSelector.selected, allButtonsEnabled = rangeSelector.options.allButtonsEnabled, buttonStates = new Array(rangeSelector.buttonOptions.length)\n            .fill(0), selectedExists = RangeSelector_isNumber(selected), buttons = rangeSelector.buttons;\n        let isSelectedTooGreat = false, selectedIndex = null;\n        rangeSelector.buttonOptions.forEach((rangeOptions, i) => {\n            const range = rangeOptions._range, type = rangeOptions.type, count = rangeOptions.count || 1, offsetRange = rangeOptions._offsetMax -\n                rangeOptions._offsetMin, isSelected = i === selected, \n            // Disable buttons where the range exceeds what is allowed i;\n            // the current view\n            isTooGreatRange = range >\n                dataMax - dataMin, \n            // Disable buttons where the range is smaller than the minimum\n            // range\n            isTooSmallRange = range < baseAxis.minRange;\n            // Do not select the YTD button if not explicitly told so\n            let isYTDButNotSelected = false, \n            // Disable the All button if we're already showing all\n            isSameRange = range === actualRange;\n            if (isSelected && isTooGreatRange) {\n                isSelectedTooGreat = true;\n            }\n            if (baseAxis.isOrdinal &&\n                baseAxis.ordinal?.positions &&\n                range &&\n                actualRange < range) {\n                // Handle ordinal ranges\n                const positions = baseAxis.ordinal.positions, prevOrdinalPosition = Axis_OrdinalAxis.Additions.findIndexOf(positions, baseAxis.min, true), nextOrdinalPosition = Math.min(Axis_OrdinalAxis.Additions.findIndexOf(positions, baseAxis.max, true) + 1, positions.length - 1);\n                if (positions[nextOrdinalPosition] -\n                    positions[prevOrdinalPosition] > range) {\n                    isSameRange = true;\n                }\n            }\n            else if (\n            // Months and years have variable range so we check the extremes\n            (type === 'month' || type === 'year') &&\n                (actualRange + 36e5 >=\n                    { month: 28, year: 365 }[type] * day * count - offsetRange) &&\n                (actualRange - 36e5 <=\n                    { month: 31, year: 366 }[type] * day * count + offsetRange)) {\n                isSameRange = true;\n            }\n            else if (type === 'ytd') {\n                isSameRange = (ytdMax - ytdMin + offsetRange) === actualRange;\n                isYTDButNotSelected = !isSelected;\n            }\n            else if (type === 'all') {\n                isSameRange = (baseAxis.max - baseAxis.min >=\n                    dataMax - dataMin);\n            }\n            // The new zoom area happens to match the range for a button - mark\n            // it selected. This happens when scrolling across an ordinal gap.\n            // It can be seen in the intraday demos when selecting 1h and scroll\n            // across the night gap.\n            const disable = (!allButtonsEnabled &&\n                !(isSelectedTooGreat && type === 'all') &&\n                (isTooGreatRange ||\n                    isTooSmallRange ||\n                    hasNoData));\n            const select = ((isSelectedTooGreat && type === 'all') ||\n                (isYTDButNotSelected ? false : isSameRange) ||\n                (isSelected && rangeSelector.frozenStates));\n            if (disable) {\n                buttonStates[i] = 3;\n            }\n            else if (select) {\n                if (!selectedExists || i === selected) {\n                    selectedIndex = i;\n                }\n            }\n        });\n        if (selectedIndex !== null) {\n            buttonStates[selectedIndex] = 2;\n            rangeSelector.setSelected(selectedIndex);\n            if (this.dropdown) {\n                this.dropdown.selectedIndex = selectedIndex + 1;\n            }\n        }\n        else {\n            rangeSelector.setSelected();\n            if (this.dropdown) {\n                this.dropdown.selectedIndex = -1;\n            }\n            if (dropdownLabel) {\n                dropdownLabel.setState(0);\n                dropdownLabel.attr({\n                    text: (RangeSelector_defaultOptions.lang.rangeSelectorZoom || '') + ' ▾'\n                });\n            }\n        }\n        for (let i = 0; i < buttonStates.length; i++) {\n            const state = buttonStates[i];\n            const button = buttons[i];\n            if (button.state !== state) {\n                button.setState(state);\n                if (dropdown) {\n                    dropdown.options[i + 1].disabled = (state === 3);\n                    if (state === 2) {\n                        if (dropdownLabel) {\n                            dropdownLabel.setState(2);\n                            dropdownLabel.attr({\n                                text: rangeSelector.buttonOptions[i].text + ' ▾'\n                            });\n                        }\n                        dropdown.selectedIndex = i + 1;\n                    }\n                    const bbox = dropdownLabel.getBBox();\n                    RangeSelector_css(dropdown, {\n                        width: `${bbox.width}px`,\n                        height: `${bbox.height}px`\n                    });\n                }\n            }\n        }\n    }\n    /**\n     * Compute and cache the range for an individual button\n     *\n     * @private\n     * @function Highcharts.RangeSelector#computeButtonRange\n     * @param {Highcharts.RangeSelectorButtonsOptions} rangeOptions\n     */\n    computeButtonRange(rangeOptions) {\n        const type = rangeOptions.type, count = rangeOptions.count || 1, \n        // These time intervals have a fixed number of milliseconds, as\n        // opposed to month, ytd and year\n        fixedTimes = {\n            millisecond: 1,\n            second: 1000,\n            minute: 60 * 1000,\n            hour: 3600 * 1000,\n            day: 24 * 3600 * 1000,\n            week: 7 * 24 * 3600 * 1000\n        };\n        // Store the range on the button object\n        if (fixedTimes[type]) {\n            rangeOptions._range = fixedTimes[type] * count;\n        }\n        else if (type === 'month' || type === 'year') {\n            rangeOptions._range = {\n                month: 30,\n                year: 365\n            }[type] * 24 * 36e5 * count;\n        }\n        rangeOptions._offsetMin = RangeSelector_pick(rangeOptions.offsetMin, 0);\n        rangeOptions._offsetMax = RangeSelector_pick(rangeOptions.offsetMax, 0);\n        rangeOptions._range +=\n            rangeOptions._offsetMax - rangeOptions._offsetMin;\n    }\n    /**\n     * Get the unix timestamp of a HTML input for the dates\n     *\n     * @private\n     * @function Highcharts.RangeSelector#getInputValue\n     */\n    getInputValue(name) {\n        const input = name === 'min' ? this.minInput : this.maxInput;\n        const options = this.chart.options\n            .rangeSelector;\n        const time = this.chart.time;\n        if (input) {\n            return ((input.type === 'text' && options.inputDateParser) ||\n                this.defaultInputDateParser)(input.value, time.timezone === 'UTC', time);\n        }\n        return 0;\n    }\n    /**\n     * Set the internal and displayed value of a HTML input for the dates\n     *\n     * @private\n     * @function Highcharts.RangeSelector#setInputValue\n     */\n    setInputValue(name, inputTime) {\n        const options = this.options, time = this.chart.time, input = name === 'min' ? this.minInput : this.maxInput, dateBox = name === 'min' ? this.minDateBox : this.maxDateBox;\n        if (input) {\n            input.setAttribute('type', preferredInputType(options.inputDateFormat || '%e %b %Y'));\n            const hcTimeAttr = input.getAttribute('data-hc-time');\n            let updatedTime = RangeSelector_defined(hcTimeAttr) ? Number(hcTimeAttr) : void 0;\n            if (RangeSelector_defined(inputTime)) {\n                const previousTime = updatedTime;\n                if (RangeSelector_defined(previousTime)) {\n                    input.setAttribute('data-hc-time-previous', previousTime);\n                }\n                input.setAttribute('data-hc-time', inputTime);\n                updatedTime = inputTime;\n            }\n            input.value = time.dateFormat((this.inputTypeFormats[input.type] ||\n                options.inputEditDateFormat), updatedTime);\n            if (dateBox) {\n                dateBox.attr({\n                    text: time.dateFormat(options.inputDateFormat, updatedTime)\n                });\n            }\n        }\n    }\n    /**\n     * Set the min and max value of a HTML input for the dates\n     *\n     * @private\n     * @function Highcharts.RangeSelector#setInputExtremes\n     */\n    setInputExtremes(name, min, max) {\n        const input = name === 'min' ? this.minInput : this.maxInput;\n        if (input) {\n            const format = this.inputTypeFormats[input.type];\n            const time = this.chart.time;\n            if (format) {\n                const newMin = time.dateFormat(format, min);\n                if (input.min !== newMin) {\n                    input.min = newMin;\n                }\n                const newMax = time.dateFormat(format, max);\n                if (input.max !== newMax) {\n                    input.max = newMax;\n                }\n            }\n        }\n    }\n    /**\n     * @private\n     * @function Highcharts.RangeSelector#showInput\n     * @param {string} name\n     */\n    showInput(name) {\n        const dateBox = name === 'min' ? this.minDateBox : this.maxDateBox, input = name === 'min' ? this.minInput : this.maxInput;\n        if (input && dateBox && this.inputGroup) {\n            const isTextInput = input.type === 'text', { translateX = 0, translateY = 0 } = this.inputGroup, { x = 0, width = 0, height = 0 } = dateBox, { inputBoxWidth } = this.options;\n            RangeSelector_css(input, {\n                width: isTextInput ?\n                    ((width + (inputBoxWidth ? -2 : 20)) + 'px') :\n                    'auto',\n                height: (height - 2) + 'px',\n                border: '2px solid silver'\n            });\n            if (isTextInput && inputBoxWidth) {\n                RangeSelector_css(input, {\n                    left: (translateX + x) + 'px',\n                    top: translateY + 'px'\n                });\n                // Inputs of types date, time or datetime-local should be centered\n                // on top of the dateBox\n            }\n            else {\n                RangeSelector_css(input, {\n                    left: Math.min(Math.round(x +\n                        translateX -\n                        (input.offsetWidth - width) / 2), this.chart.chartWidth - input.offsetWidth) + 'px',\n                    top: (translateY - (input.offsetHeight - height) / 2) + 'px'\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @function Highcharts.RangeSelector#hideInput\n     * @param {string} name\n     */\n    hideInput(name) {\n        const input = name === 'min' ? this.minInput : this.maxInput;\n        if (input) {\n            RangeSelector_css(input, {\n                top: '-9999em',\n                border: 0,\n                width: '1px',\n                height: '1px'\n            });\n        }\n    }\n    /**\n     * @private\n     * @function Highcharts.RangeSelector#defaultInputDateParser\n     */\n    defaultInputDateParser(inputDate, useUTC, time) {\n        return time?.parse(inputDate) || 0;\n    }\n    /**\n     * Draw either the 'from' or the 'to' HTML input box of the range selector\n     *\n     * @private\n     * @function Highcharts.RangeSelector#drawInput\n     */\n    drawInput(name) {\n        const { chart, div, inputGroup } = this;\n        const rangeSelector = this, chartStyle = chart.renderer.style || {}, renderer = chart.renderer, options = chart.options.rangeSelector, lang = RangeSelector_defaultOptions.lang, isMin = name === 'min';\n        /**\n         * @private\n         */\n        function updateExtremes(name) {\n            const { maxInput, minInput } = rangeSelector, chartAxis = chart.xAxis[0], unionExtremes = chart.scroller?.getUnionExtremes() || chartAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, currentExtreme = chart.xAxis[0].getExtremes()[name];\n            let value = rangeSelector.getInputValue(name);\n            if (RangeSelector_isNumber(value) && value !== currentExtreme) {\n                // Validate the extremes. If it goes beyond the data min or\n                // max, use the actual data extreme (#2438).\n                if (isMin && maxInput && RangeSelector_isNumber(dataMin)) {\n                    if (value > Number(maxInput.getAttribute('data-hc-time'))) {\n                        value = void 0;\n                    }\n                    else if (value < dataMin) {\n                        value = dataMin;\n                    }\n                }\n                else if (minInput && RangeSelector_isNumber(dataMax)) {\n                    if (value < Number(minInput.getAttribute('data-hc-time'))) {\n                        value = void 0;\n                    }\n                    else if (value > dataMax) {\n                        value = dataMax;\n                    }\n                }\n                // Set the extremes\n                if (typeof value !== 'undefined') { // @todo typeof undefined\n                    chartAxis.setExtremes(isMin ? value : chartAxis.min, isMin ? chartAxis.max : value, void 0, void 0, { trigger: 'rangeSelectorInput' });\n                }\n            }\n        }\n        // Create the text label\n        const text = lang[isMin ? 'rangeSelectorFrom' : 'rangeSelectorTo'] || '';\n        const label = renderer\n            .label(text, 0)\n            .addClass('highcharts-range-label')\n            .attr({\n            padding: text ? 2 : 0,\n            height: text ? options.inputBoxHeight : 0\n        })\n            .add(inputGroup);\n        // Create an SVG label that shows updated date ranges and records click\n        // events that bring in the HTML input.\n        const dateBox = renderer\n            .label('', 0)\n            .addClass('highcharts-range-input')\n            .attr({\n            padding: 2,\n            width: options.inputBoxWidth,\n            height: options.inputBoxHeight,\n            'text-align': 'center'\n        })\n            .on('click', function () {\n            // If it is already focused, the onfocus event doesn't fire\n            // (#3713)\n            rangeSelector.showInput(name);\n            rangeSelector[name + 'Input'].focus();\n        });\n        if (!chart.styledMode) {\n            dateBox.attr({\n                stroke: options.inputBoxBorderColor,\n                'stroke-width': 1\n            });\n        }\n        dateBox.add(inputGroup);\n        // Create the HTML input element. This is rendered as 1x1 pixel then set\n        // to the right size when focused.\n        const input = createElement('input', {\n            name: name,\n            className: 'highcharts-range-selector'\n        }, void 0, div);\n        // #14788: Setting input.type to an unsupported type throws in IE, so\n        // we need to use setAttribute instead\n        input.setAttribute('type', preferredInputType(options.inputDateFormat || '%e %b %Y'));\n        if (!chart.styledMode) {\n            // Styles\n            label.css(RangeSelector_merge(chartStyle, options.labelStyle));\n            dateBox.css(RangeSelector_merge({\n                color: \"#333333\" /* Palette.neutralColor80 */\n            }, chartStyle, options.inputStyle));\n            RangeSelector_css(input, RangeSelector_extend({\n                position: 'absolute',\n                border: 0,\n                boxShadow: '0 0 15px rgba(0,0,0,0.3)',\n                width: '1px', // Chrome needs a pixel to see it\n                height: '1px',\n                padding: 0,\n                textAlign: 'center',\n                fontSize: chartStyle.fontSize,\n                fontFamily: chartStyle.fontFamily,\n                top: '-9999em' // #4798\n            }, options.inputStyle));\n        }\n        // Blow up the input box\n        input.onfocus = () => {\n            rangeSelector.showInput(name);\n        };\n        // Hide away the input box\n        input.onblur = () => {\n            // Update extremes only when inputs are active\n            if (input === (external_highcharts_src_js_default_default()).doc.activeElement) { // Only when focused\n                // Update also when no `change` event is triggered, like when\n                // clicking inside the SVG (#4710)\n                updateExtremes(name);\n            }\n            // #10404 - move hide and blur outside focus\n            rangeSelector.hideInput(name);\n            rangeSelector.setInputValue(name);\n            input.blur(); // #4606\n        };\n        let keyDown = false;\n        // Handle changes in the input boxes\n        input.onchange = () => {\n            // Update extremes and blur input when clicking date input calendar\n            if (!keyDown) {\n                updateExtremes(name);\n                rangeSelector.hideInput(name);\n                input.blur();\n            }\n        };\n        input.onkeypress = (event) => {\n            // IE does not fire onchange on enter\n            if (event.keyCode === 13) {\n                updateExtremes(name);\n            }\n        };\n        input.onkeydown = (event) => {\n            keyDown = true;\n            // Arrow keys\n            if (event.key === 'ArrowUp' ||\n                event.key === 'ArrowDown' ||\n                event.key === 'Tab') {\n                updateExtremes(name);\n            }\n        };\n        input.onkeyup = () => {\n            keyDown = false;\n        };\n        return { dateBox, input, label };\n    }\n    /**\n     * Get the position of the range selector buttons and inputs. This can be\n     * overridden from outside for custom positioning.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#getPosition\n     */\n    getPosition() {\n        const chart = this.chart, options = chart.options.rangeSelector, top = options.verticalAlign === 'top' ?\n            chart.plotTop - chart.axisOffset[0] :\n            0; // Set offset only for verticalAlign top\n        return {\n            buttonTop: top + options.buttonPosition.y,\n            inputTop: top + options.inputPosition.y - 10\n        };\n    }\n    /**\n     * Get the extremes of YTD. Will choose dataMax if its value is lower than\n     * the current timestamp. Will choose dataMin if its value is higher than\n     * the timestamp for the start of current year.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#getYTDExtremes\n     * @return {*}\n     * Returns min and max for the YTD\n     */\n    getYTDExtremes(dataMax, dataMin) {\n        const time = this.chart.time, year = time.toParts(dataMax)[0], startOfYear = time.makeTime(year, 0);\n        return {\n            max: dataMax,\n            min: Math.max(dataMin, startOfYear)\n        };\n    }\n    createElements() {\n        const chart = this.chart, renderer = chart.renderer, container = chart.container, chartOptions = chart.options, options = chartOptions.rangeSelector, inputEnabled = options.inputEnabled, inputsZIndex = RangeSelector_pick(chartOptions.chart.style?.zIndex, 0) + 1;\n        if (options.enabled === false) {\n            return;\n        }\n        this.group = renderer.g('range-selector-group')\n            .attr({\n            zIndex: 7\n        })\n            .add();\n        this.div = createElement('div', void 0, {\n            position: 'relative',\n            height: 0,\n            zIndex: inputsZIndex\n        });\n        if (this.buttonOptions.length) {\n            this.renderButtons();\n        }\n        // First create a wrapper outside the container in order to make\n        // the inputs work and make export correct\n        if (container.parentNode) {\n            container.parentNode.insertBefore(this.div, container);\n        }\n        if (inputEnabled) {\n            this.createInputs();\n        }\n    }\n    /**\n     * Create the input elements and its group.\n     *\n     */\n    createInputs() {\n        this.inputGroup = this.chart.renderer.g('input-group').add(this.group);\n        const minElems = this.drawInput('min');\n        this.minDateBox = minElems.dateBox;\n        this.minLabel = minElems.label;\n        this.minInput = minElems.input;\n        const maxElems = this.drawInput('max');\n        this.maxDateBox = maxElems.dateBox;\n        this.maxLabel = maxElems.label;\n        this.maxInput = maxElems.input;\n    }\n    /**\n     * Render the range selector including the buttons and the inputs. The first\n     * time render is called, the elements are created and positioned. On\n     * subsequent calls, they are moved and updated.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#render\n     * @param {number} [min]\n     *        X axis minimum\n     * @param {number} [max]\n     *        X axis maximum\n     */\n    render(min, max) {\n        if (this.options.enabled === false) {\n            return;\n        }\n        const chart = this.chart, chartOptions = chart.options, options = chartOptions.rangeSelector, \n        // Place inputs above the container\n        inputEnabled = options.inputEnabled;\n        if (inputEnabled) {\n            if (!this.inputGroup) {\n                this.createInputs();\n            }\n            // Set or reset the input values\n            this.setInputValue('min', min);\n            this.setInputValue('max', max);\n            if (!this.chart.styledMode) {\n                this.maxLabel?.css(options.labelStyle);\n                this.minLabel?.css(options.labelStyle);\n            }\n            const unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chart.xAxis[0] || {};\n            if (RangeSelector_defined(unionExtremes.dataMin) &&\n                RangeSelector_defined(unionExtremes.dataMax)) {\n                const minRange = chart.xAxis[0].minRange || 0;\n                this.setInputExtremes('min', unionExtremes.dataMin, Math.min(unionExtremes.dataMax, this.getInputValue('max')) - minRange);\n                this.setInputExtremes('max', Math.max(unionExtremes.dataMin, this.getInputValue('min')) + minRange, unionExtremes.dataMax);\n            }\n            // Reflow\n            if (this.inputGroup) {\n                let x = 0;\n                [\n                    this.minLabel,\n                    this.minDateBox,\n                    this.maxLabel,\n                    this.maxDateBox\n                ].forEach((label) => {\n                    if (label) {\n                        const { width } = label.getBBox();\n                        if (width) {\n                            label.attr({ x });\n                            x += width + options.inputSpacing;\n                        }\n                    }\n                });\n            }\n        }\n        else {\n            if (this.inputGroup) {\n                this.inputGroup.destroy();\n                delete this.inputGroup;\n            }\n        }\n        if (!this.chart.styledMode) {\n            if (this.zoomText) {\n                this.zoomText.css(options.labelStyle);\n            }\n        }\n        this.alignElements();\n        this.updateButtonStates();\n    }\n    /**\n     * Render the range buttons. This only runs the first time, later the\n     * positioning is laid out in alignElements.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#renderButtons\n     */\n    renderButtons() {\n        var _a;\n        const { chart, options } = this;\n        const lang = RangeSelector_defaultOptions.lang;\n        const renderer = chart.renderer;\n        const buttonTheme = RangeSelector_merge(options.buttonTheme);\n        const states = buttonTheme && buttonTheme.states;\n        // Prevent the button from resetting the width when the button state\n        // changes since we need more control over the width when collapsing\n        // the buttons\n        delete buttonTheme.width;\n        delete buttonTheme.states;\n        this.buttonGroup = renderer.g('range-selector-buttons').add(this.group);\n        const dropdown = this.dropdown = createElement('select', void 0, {\n            position: 'absolute',\n            padding: 0,\n            border: 0,\n            cursor: 'pointer',\n            opacity: 0.0001\n        }, this.div);\n        // Create a label for dropdown select element\n        const userButtonTheme = chart.userOptions.rangeSelector?.buttonTheme;\n        this.dropdownLabel = renderer.button('', 0, 0, () => { }, RangeSelector_merge(buttonTheme, {\n            'stroke-width': RangeSelector_pick(buttonTheme['stroke-width'], 0),\n            width: 'auto',\n            paddingLeft: RangeSelector_pick(options.buttonTheme.paddingLeft, userButtonTheme?.padding, 8),\n            paddingRight: RangeSelector_pick(options.buttonTheme.paddingRight, userButtonTheme?.padding, 8)\n        }), states && states.hover, states && states.select, states && states.disabled)\n            .hide()\n            .add(this.group);\n        // Prevent page zoom on iPhone\n        RangeSelector_addEvent(dropdown, 'touchstart', () => {\n            dropdown.style.fontSize = '16px';\n        });\n        // Forward events from select to button\n        const mouseOver = (external_highcharts_src_js_default_default()).isMS ? 'mouseover' : 'mouseenter', mouseOut = (external_highcharts_src_js_default_default()).isMS ? 'mouseout' : 'mouseleave';\n        RangeSelector_addEvent(dropdown, mouseOver, () => {\n            RangeSelector_fireEvent(this.dropdownLabel.element, mouseOver);\n        });\n        RangeSelector_addEvent(dropdown, mouseOut, () => {\n            RangeSelector_fireEvent(this.dropdownLabel.element, mouseOut);\n        });\n        RangeSelector_addEvent(dropdown, 'change', () => {\n            const button = this.buttons[dropdown.selectedIndex - 1];\n            RangeSelector_fireEvent(button.element, 'click');\n        });\n        this.zoomText = renderer\n            .label(lang.rangeSelectorZoom || '', 0)\n            .attr({\n            padding: options.buttonTheme.padding,\n            height: options.buttonTheme.height,\n            paddingLeft: 0,\n            paddingRight: 0\n        })\n            .add(this.buttonGroup);\n        if (!this.chart.styledMode) {\n            this.zoomText.css(options.labelStyle);\n            (_a = options.buttonTheme)['stroke-width'] ?? (_a['stroke-width'] = 0);\n        }\n        createElement('option', {\n            textContent: this.zoomText.textStr,\n            disabled: true\n        }, void 0, dropdown);\n        this.createButtons();\n    }\n    createButtons() {\n        const { options } = this;\n        const buttonTheme = RangeSelector_merge(options.buttonTheme);\n        const states = buttonTheme && buttonTheme.states;\n        // Prevent the button from resetting the width when the button state\n        // changes since we need more control over the width when collapsing\n        // the buttons\n        const width = buttonTheme.width || 28;\n        delete buttonTheme.width;\n        delete buttonTheme.states;\n        this.buttonOptions.forEach((rangeOptions, i) => {\n            this.createButton(rangeOptions, i, width, states);\n        });\n    }\n    createButton(rangeOptions, i, width, states) {\n        const { dropdown, buttons, chart, options } = this;\n        const renderer = chart.renderer;\n        const buttonTheme = RangeSelector_merge(options.buttonTheme);\n        dropdown?.add(createElement('option', {\n            textContent: rangeOptions.title || rangeOptions.text\n        }), i + 2);\n        buttons[i] = renderer\n            .button(rangeOptions.text ?? '', 0, 0, (e) => {\n            // Extract events from button object and call\n            const buttonEvents = (rangeOptions.events && rangeOptions.events.click);\n            let callDefaultEvent;\n            if (buttonEvents) {\n                callDefaultEvent =\n                    buttonEvents.call(rangeOptions, e);\n            }\n            if (callDefaultEvent !== false) {\n                this.clickButton(i);\n            }\n            this.isActive = true;\n        }, buttonTheme, states && states.hover, states && states.select, states && states.disabled)\n            .attr({\n            'text-align': 'center',\n            width\n        })\n            .add(this.buttonGroup);\n        if (rangeOptions.title) {\n            buttons[i].attr('title', rangeOptions.title);\n        }\n    }\n    /**\n     * Align the elements horizontally and vertically.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#alignElements\n     */\n    alignElements() {\n        const { buttonGroup, buttons, chart, group, inputGroup, options, zoomText } = this;\n        const chartOptions = chart.options;\n        const navButtonOptions = (chartOptions.exporting &&\n            chartOptions.exporting.enabled !== false &&\n            chartOptions.navigation &&\n            chartOptions.navigation.buttonOptions);\n        const { buttonPosition, inputPosition, verticalAlign } = options;\n        // Get the X offset required to avoid overlapping with the exporting\n        // button. This is used both by the buttonGroup and the inputGroup.\n        const getXOffsetForExportButton = (group, position, rightAligned) => {\n            if (navButtonOptions &&\n                this.titleCollision(chart) &&\n                verticalAlign === 'top' &&\n                rightAligned && ((position.y -\n                group.getBBox().height - 12) <\n                ((navButtonOptions.y || 0) +\n                    (navButtonOptions.height || 0) +\n                    chart.spacing[0]))) {\n                return -40;\n            }\n            return 0;\n        };\n        let plotLeft = chart.plotLeft;\n        if (group && buttonPosition && inputPosition) {\n            let translateX = buttonPosition.x - chart.spacing[3];\n            if (buttonGroup) {\n                this.positionButtons();\n                if (!this.initialButtonGroupWidth) {\n                    let width = 0;\n                    if (zoomText) {\n                        width += zoomText.getBBox().width + 5;\n                    }\n                    buttons.forEach((button, i) => {\n                        width += button.width || 0;\n                        if (i !== buttons.length - 1) {\n                            width += options.buttonSpacing;\n                        }\n                    });\n                    this.initialButtonGroupWidth = width;\n                }\n                plotLeft -= chart.spacing[3];\n                // Detect collision between button group and exporting\n                const xOffsetForExportButton = getXOffsetForExportButton(buttonGroup, buttonPosition, buttonPosition.align === 'right' ||\n                    inputPosition.align === 'right');\n                this.alignButtonGroup(xOffsetForExportButton);\n                if (this.buttonGroup?.translateY) {\n                    this.dropdownLabel\n                        .attr({ y: this.buttonGroup.translateY });\n                }\n                // Skip animation\n                group.placed = buttonGroup.placed = chart.hasLoaded;\n            }\n            let xOffsetForExportButton = 0;\n            if (options.inputEnabled && inputGroup) {\n                // Detect collision between the input group and exporting button\n                xOffsetForExportButton = getXOffsetForExportButton(inputGroup, inputPosition, buttonPosition.align === 'right' ||\n                    inputPosition.align === 'right');\n                if (inputPosition.align === 'left') {\n                    translateX = plotLeft;\n                }\n                else if (inputPosition.align === 'right') {\n                    translateX = -Math.max(chart.axisOffset[1], -xOffsetForExportButton);\n                }\n                // Update the alignment to the updated spacing box\n                inputGroup.align({\n                    y: inputPosition.y,\n                    width: inputGroup.getBBox().width,\n                    align: inputPosition.align,\n                    // Fix wrong getBBox() value on right align\n                    x: inputPosition.x + translateX - 2\n                }, true, chart.spacingBox);\n                // Skip animation\n                inputGroup.placed = chart.hasLoaded;\n            }\n            this.handleCollision(xOffsetForExportButton);\n            // Vertical align\n            group.align({\n                verticalAlign\n            }, true, chart.spacingBox);\n            const alignTranslateY = group.alignAttr.translateY;\n            // Set position\n            let groupHeight = group.getBBox().height + 20; // # 20 padding\n            let translateY = 0;\n            // Calculate bottom position\n            if (verticalAlign === 'bottom') {\n                const legendOptions = chart.legend && chart.legend.options;\n                const legendHeight = (legendOptions &&\n                    legendOptions.verticalAlign === 'bottom' &&\n                    legendOptions.enabled &&\n                    !legendOptions.floating ?\n                    (chart.legend.legendHeight +\n                        RangeSelector_pick(legendOptions.margin, 10)) :\n                    0);\n                groupHeight = groupHeight + legendHeight - 20;\n                translateY = (alignTranslateY -\n                    groupHeight -\n                    (options.floating ? 0 : options.y) -\n                    (chart.titleOffset ? chart.titleOffset[2] : 0) -\n                    10 // 10 spacing\n                );\n            }\n            if (verticalAlign === 'top') {\n                if (options.floating) {\n                    translateY = 0;\n                }\n                if (chart.titleOffset && chart.titleOffset[0]) {\n                    translateY = chart.titleOffset[0];\n                }\n                translateY += ((chart.margin[0] - chart.spacing[0]) || 0);\n            }\n            else if (verticalAlign === 'middle') {\n                if (inputPosition.y === buttonPosition.y) {\n                    translateY = alignTranslateY;\n                }\n                else if (inputPosition.y || buttonPosition.y) {\n                    if (inputPosition.y < 0 ||\n                        buttonPosition.y < 0) {\n                        translateY -= Math.min(inputPosition.y, buttonPosition.y);\n                    }\n                    else {\n                        translateY = alignTranslateY - groupHeight;\n                    }\n                }\n            }\n            group.translate(options.x, options.y + Math.floor(translateY));\n            // Translate HTML inputs\n            const { minInput, maxInput, dropdown } = this;\n            if (options.inputEnabled && minInput && maxInput) {\n                minInput.style.marginTop = group.translateY + 'px';\n                maxInput.style.marginTop = group.translateY + 'px';\n            }\n            if (dropdown) {\n                dropdown.style.marginTop = group.translateY + 'px';\n            }\n        }\n    }\n    /**\n     * @private\n     */\n    redrawElements() {\n        const chart = this.chart, { inputBoxHeight, inputBoxBorderColor } = this.options;\n        this.maxDateBox?.attr({\n            height: inputBoxHeight\n        });\n        this.minDateBox?.attr({\n            height: inputBoxHeight\n        });\n        if (!chart.styledMode) {\n            this.maxDateBox?.attr({\n                stroke: inputBoxBorderColor\n            });\n            this.minDateBox?.attr({\n                stroke: inputBoxBorderColor\n            });\n        }\n        if (this.isDirty) {\n            this.isDirty = false;\n            // Reset this prop to force redrawing collapse of buttons\n            this.isCollapsed = void 0;\n            const newButtonsOptions = this.options.buttons ?? [];\n            const btnLength = Math.min(newButtonsOptions.length, this.buttonOptions.length);\n            const { dropdown, options } = this;\n            const buttonTheme = RangeSelector_merge(options.buttonTheme);\n            const states = buttonTheme && buttonTheme.states;\n            // Prevent the button from resetting the width when the button state\n            // changes since we need more control over the width when collapsing\n            // the buttons\n            const width = buttonTheme.width || 28;\n            // Destroy additional buttons\n            if (newButtonsOptions.length < this.buttonOptions.length) {\n                for (let i = this.buttonOptions.length - 1; i >= newButtonsOptions.length; i--) {\n                    const btn = this.buttons.pop();\n                    btn?.destroy();\n                    this.dropdown?.options.remove(i + 1);\n                }\n            }\n            // Update current buttons\n            for (let i = btnLength - 1; i >= 0; i--) {\n                const diff = diffObjects(newButtonsOptions[i], this.buttonOptions[i]);\n                if (Object.keys(diff).length !== 0) {\n                    const rangeOptions = newButtonsOptions[i];\n                    this.buttons[i].destroy();\n                    dropdown?.options.remove(i + 1);\n                    this.createButton(rangeOptions, i, width, states);\n                    this.computeButtonRange(rangeOptions);\n                }\n            }\n            // Create missing buttons\n            if (newButtonsOptions.length > this.buttonOptions.length) {\n                for (let i = this.buttonOptions.length; i < newButtonsOptions.length; i++) {\n                    this.createButton(newButtonsOptions[i], i, width, states);\n                    this.computeButtonRange(newButtonsOptions[i]);\n                }\n            }\n            this.buttonOptions = this.options.buttons ?? [];\n            if (RangeSelector_defined(this.options.selected) && this.buttons.length) {\n                this.clickButton(this.options.selected, false);\n            }\n        }\n    }\n    /**\n     * Align the button group horizontally and vertically.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#alignButtonGroup\n     * @param {number} xOffsetForExportButton\n     * @param {number} [width]\n     */\n    alignButtonGroup(xOffsetForExportButton, width) {\n        const { chart, options, buttonGroup, dropdown, dropdownLabel } = this;\n        const { buttonPosition } = options;\n        const plotLeft = chart.plotLeft - chart.spacing[3];\n        let translateX = buttonPosition.x - chart.spacing[3];\n        let dropdownTranslateX = chart.plotLeft;\n        if (buttonPosition.align === 'right') {\n            translateX += xOffsetForExportButton - plotLeft; // #13014\n            if (this.hasVisibleDropdown) {\n                dropdownTranslateX = chart.chartWidth +\n                    xOffsetForExportButton -\n                    this.maxButtonWidth() - 20;\n            }\n        }\n        else if (buttonPosition.align === 'center') {\n            translateX -= plotLeft / 2;\n            if (this.hasVisibleDropdown) {\n                dropdownTranslateX = chart.chartWidth / 2 -\n                    this.maxButtonWidth();\n            }\n        }\n        if (dropdown) {\n            RangeSelector_css(dropdown, {\n                left: dropdownTranslateX + 'px',\n                top: buttonGroup?.translateY + 'px'\n            });\n        }\n        dropdownLabel?.attr({\n            x: dropdownTranslateX\n        });\n        if (buttonGroup) {\n            // Align button group\n            buttonGroup.align({\n                y: buttonPosition.y,\n                width: RangeSelector_pick(width, this.initialButtonGroupWidth),\n                align: buttonPosition.align,\n                x: translateX\n            }, true, chart.spacingBox);\n        }\n    }\n    /**\n     * @private\n     * @function Highcharts.RangeSelector#positionButtons\n     */\n    positionButtons() {\n        const { buttons, chart, options, zoomText } = this;\n        const verb = chart.hasLoaded ? 'animate' : 'attr';\n        const { buttonPosition } = options;\n        const plotLeft = chart.plotLeft;\n        let buttonLeft = plotLeft;\n        if (zoomText && zoomText.visibility !== 'hidden') {\n            // #8769, allow dynamically updating margins\n            zoomText[verb]({\n                x: RangeSelector_pick(plotLeft + buttonPosition.x, plotLeft)\n            });\n            // Button start position\n            buttonLeft += buttonPosition.x +\n                zoomText.getBBox().width + 5;\n        }\n        for (let i = 0, iEnd = this.buttonOptions.length; i < iEnd; ++i) {\n            if (buttons[i].visibility !== 'hidden') {\n                buttons[i][verb]({ x: buttonLeft });\n                // Increase the button position for the next button\n                buttonLeft += (buttons[i].width || 0) + options.buttonSpacing;\n            }\n            else {\n                buttons[i][verb]({ x: plotLeft });\n            }\n        }\n    }\n    /**\n     * Handle collision between the button group and the input group\n     *\n     * @private\n     * @function Highcharts.RangeSelector#handleCollision\n     *\n     * @param  {number} xOffsetForExportButton\n     *                  The X offset of the group required to make room for the\n     *                  exporting button\n     */\n    handleCollision(xOffsetForExportButton) {\n        const { chart, buttonGroup, inputGroup, initialButtonGroupWidth } = this;\n        const { buttonPosition, dropdown, inputPosition } = this.options;\n        const moveInputsDown = () => {\n            if (inputGroup && buttonGroup) {\n                inputGroup.attr({\n                    translateX: inputGroup.alignAttr.translateX + (chart.axisOffset[1] >= -xOffsetForExportButton ?\n                        0 :\n                        -xOffsetForExportButton),\n                    translateY: inputGroup.alignAttr.translateY +\n                        buttonGroup.getBBox().height + 10\n                });\n            }\n        };\n        // Detect collision\n        if (inputGroup && buttonGroup) {\n            if (inputPosition.align === buttonPosition.align) {\n                moveInputsDown();\n                if (initialButtonGroupWidth >\n                    chart.plotWidth + xOffsetForExportButton - 20) {\n                    this.collapseButtons();\n                }\n                else {\n                    this.expandButtons();\n                }\n            }\n            else if (initialButtonGroupWidth -\n                xOffsetForExportButton +\n                inputGroup.getBBox().width >\n                chart.plotWidth) {\n                if (dropdown === 'responsive') {\n                    this.collapseButtons();\n                }\n                else {\n                    moveInputsDown();\n                }\n            }\n            else {\n                this.expandButtons();\n            }\n        }\n        else if (buttonGroup && dropdown === 'responsive') {\n            if (initialButtonGroupWidth > chart.plotWidth) {\n                this.collapseButtons();\n            }\n            else {\n                this.expandButtons();\n            }\n        }\n        // Forced states\n        if (buttonGroup) {\n            if (dropdown === 'always') {\n                this.collapseButtons();\n            }\n            if (dropdown === 'never') {\n                this.expandButtons();\n            }\n        }\n        this.alignButtonGroup(xOffsetForExportButton);\n    }\n    /**\n     * Collapse the buttons and show the select element.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#collapseButtons\n     * @param {number} xOffsetForExportButton\n     */\n    collapseButtons() {\n        const { buttons, zoomText } = this;\n        if (this.isCollapsed === true) {\n            return;\n        }\n        this.isCollapsed = true;\n        zoomText.hide();\n        buttons.forEach((button) => void button.hide());\n        this.showDropdown();\n    }\n    /**\n     * Show all the buttons and hide the select element.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#expandButtons\n     */\n    expandButtons() {\n        const { buttons, zoomText } = this;\n        if (this.isCollapsed === false) {\n            return;\n        }\n        this.isCollapsed = false;\n        this.hideDropdown();\n        zoomText.show();\n        buttons.forEach((button) => void button.show());\n        this.positionButtons();\n    }\n    /**\n     * Position the select element on top of the button.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#showDropdown\n     */\n    showDropdown() {\n        const { buttonGroup, dropdownLabel, dropdown } = this;\n        if (buttonGroup && dropdown) {\n            dropdownLabel.show();\n            RangeSelector_css(dropdown, { visibility: 'inherit' });\n            this.hasVisibleDropdown = true;\n        }\n    }\n    /**\n     * @private\n     * @function Highcharts.RangeSelector#hideDropdown\n     */\n    hideDropdown() {\n        const { dropdown } = this;\n        if (dropdown) {\n            this.dropdownLabel.hide();\n            RangeSelector_css(dropdown, {\n                visibility: 'hidden',\n                width: '1px',\n                height: '1px'\n            });\n            this.hasVisibleDropdown = false;\n        }\n    }\n    /**\n     * Extracts height of range selector\n     *\n     * @private\n     * @function Highcharts.RangeSelector#getHeight\n     * @return {number}\n     * Returns rangeSelector height\n     */\n    getHeight() {\n        const rangeSelector = this, options = rangeSelector.options, rangeSelectorGroup = rangeSelector.group, inputPosition = options.inputPosition, buttonPosition = options.buttonPosition, yPosition = options.y, buttonPositionY = buttonPosition.y, inputPositionY = inputPosition.y;\n        let rangeSelectorHeight = 0;\n        if (options.height) {\n            return options.height;\n        }\n        // Align the elements before we read the height in case we're switching\n        // between wrapped and non-wrapped layout\n        this.alignElements();\n        rangeSelectorHeight = rangeSelectorGroup ?\n            // 13px to keep back compatibility\n            (rangeSelectorGroup.getBBox(true).height) + 13 +\n                yPosition :\n            0;\n        const minPosition = Math.min(inputPositionY, buttonPositionY);\n        if ((inputPositionY < 0 && buttonPositionY < 0) ||\n            (inputPositionY > 0 && buttonPositionY > 0)) {\n            rangeSelectorHeight += Math.abs(minPosition);\n        }\n        return rangeSelectorHeight;\n    }\n    /**\n     * Detect collision with title or subtitle\n     *\n     * @private\n     * @function Highcharts.RangeSelector#titleCollision\n     * @return {boolean}\n     * Returns collision status\n     */\n    titleCollision(chart) {\n        return !(chart.options.title.text ||\n            chart.options.subtitle.text);\n    }\n    /**\n     * Update the range selector with new options\n     *\n     * @private\n     * @function Highcharts.RangeSelector#update\n     * @param {Highcharts.RangeSelectorOptions} options\n     */\n    update(options, redraw = true) {\n        const chart = this.chart;\n        RangeSelector_merge(true, this.options, options);\n        if (this.options.selected &&\n            this.options.selected >= this.options.buttons.length) {\n            this.options.selected = void 0;\n            chart.options.rangeSelector.selected = void 0;\n        }\n        if (RangeSelector_defined(options.enabled)) {\n            this.destroy();\n            return this.init(chart);\n        }\n        this.isDirty = !!options.buttons;\n        if (redraw) {\n            this.render();\n        }\n    }\n    /**\n     * Destroys allocated elements.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#destroy\n     */\n    destroy() {\n        const rSelector = this, minInput = rSelector.minInput, maxInput = rSelector.maxInput;\n        if (rSelector.eventsToUnbind) {\n            rSelector.eventsToUnbind.forEach((unbind) => unbind());\n            rSelector.eventsToUnbind = void 0;\n        }\n        // Destroy elements in collections\n        RangeSelector_destroyObjectProperties(rSelector.buttons);\n        // Clear input element events\n        if (minInput) {\n            minInput.onfocus = minInput.onblur = minInput.onchange = null;\n        }\n        if (maxInput) {\n            maxInput.onfocus = maxInput.onblur = maxInput.onchange = null;\n        }\n        // Destroy HTML and SVG elements\n        RangeSelector_objectEach(rSelector, function (val, key) {\n            if (val && key !== 'chart') {\n                if (val instanceof (external_highcharts_src_js_default_SVGElement_default())) {\n                    // SVGElement\n                    val.destroy();\n                }\n                else if (val instanceof window.HTMLElement) {\n                    // HTML element\n                    discardElement(val);\n                }\n                delete rSelector[key];\n            }\n            if (val !== RangeSelector.prototype[key]) {\n                rSelector[key] = null;\n            }\n        }, this);\n        this.buttons = [];\n    }\n}\nRangeSelector_extend(RangeSelector.prototype, {\n    /**\n     * The date formats to use when setting min, max and value on date inputs.\n     * @private\n     */\n    inputTypeFormats: {\n        'datetime-local': '%Y-%m-%dT%H:%M:%S',\n        'date': '%Y-%m-%d',\n        'time': '%H:%M:%S'\n    }\n});\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const RangeSelector_RangeSelector = (RangeSelector);\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Define the time span for the button\n *\n * @typedef {\"all\"|\"day\"|\"hour\"|\"millisecond\"|\"minute\"|\"month\"|\"second\"|\"week\"|\"year\"|\"ytd\"} Highcharts.RangeSelectorButtonTypeValue\n */\n/**\n * Callback function to react on button clicks.\n *\n * @callback Highcharts.RangeSelectorClickCallbackFunction\n *\n * @param {global.Event} e\n *        Event arguments.\n *\n * @param {boolean|undefined}\n *        Return false to cancel the default button event.\n */\n/**\n * Callback function to parse values entered in the input boxes and return a\n * valid JavaScript time as milliseconds since 1970.\n *\n * @callback Highcharts.RangeSelectorParseCallbackFunction\n *\n * @param {string} value\n *        Input value to parse.\n *\n * @return {number}\n *         Parsed JavaScript time value.\n */\n(''); // Keeps doclets above in JS file\n\n;// external [\"../highcharts.js\",\"default\",\"Chart\"]\nconst external_highcharts_src_js_default_Chart_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Chart;\nvar external_highcharts_src_js_default_Chart_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Chart_namespaceObject);\n;// ./code/es-modules/Core/Chart/StockChart.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { format: StockChart_format } = (external_highcharts_src_js_default_Templating_default());\n\nconst { getOptions } = (external_highcharts_src_js_default_default());\n\n\n\n\nconst { setFixedRange: StockChart_setFixedRange } = Utilities_StockUtilities;\n\nconst { addEvent: StockChart_addEvent, clamp: StockChart_clamp, crisp: StockChart_crisp, defined: StockChart_defined, extend: StockChart_extend, find: StockChart_find, isNumber: StockChart_isNumber, isString: StockChart_isString, merge: StockChart_merge, pick: StockChart_pick, splat: StockChart_splat } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Get stock-specific default axis options.\n *\n * @private\n * @function getDefaultAxisOptions\n */\nfunction getDefaultAxisOptions(coll, options, defaultOptions) {\n    if (coll === 'xAxis') {\n        return {\n            minPadding: 0,\n            maxPadding: 0,\n            overscroll: 0,\n            ordinal: true\n        };\n    }\n    if (coll === 'yAxis') {\n        return {\n            labels: {\n                y: -2\n            },\n            opposite: defaultOptions.opposite ?? options.opposite ?? true,\n            showLastLabel: !!(\n            // #6104, show last label by default for category axes\n            options.categories ||\n                options.type === 'category'),\n            title: {\n                text: void 0\n            }\n        };\n    }\n    return {};\n}\n/**\n * Get stock-specific forced axis options.\n *\n * @private\n * @function getForcedAxisOptions\n */\nfunction getForcedAxisOptions(type, chartOptions) {\n    if (type === 'xAxis') {\n        // Always disable startOnTick:true on the main axis when the navigator\n        // is enabled (#1090)\n        const navigatorEnabled = StockChart_pick(chartOptions.navigator?.enabled, Navigator_NavigatorDefaults.enabled, true);\n        const axisOptions = {\n            type: 'datetime',\n            categories: void 0\n        };\n        if (navigatorEnabled) {\n            axisOptions.startOnTick = false;\n            axisOptions.endOnTick = false;\n        }\n        return axisOptions;\n    }\n    return {};\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * Stock-optimized chart. Use {@link Highcharts.Chart|Chart} for common charts.\n *\n * @requires modules/stock\n *\n * @class\n * @name Highcharts.StockChart\n * @extends Highcharts.Chart\n */\nclass StockChart extends (external_highcharts_src_js_default_Chart_default()) {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Initializes the chart. The constructor's arguments are passed on\n     * directly.\n     *\n     * @function Highcharts.StockChart#init\n     *\n     * @param {Highcharts.Options} userOptions\n     *        Custom options.\n     *\n     * @param {Function} [callback]\n     *        Function to run when the chart has loaded and all external\n     *        images are loaded.\n     *\n     *\n     * @emits Highcharts.StockChart#event:init\n     * @emits Highcharts.StockChart#event:afterInit\n     */\n    init(userOptions, callback) {\n        const defaultOptions = getOptions(), xAxisOptions = userOptions.xAxis, yAxisOptions = userOptions.yAxis, \n        // Always disable startOnTick:true on the main axis when the\n        // navigator is enabled (#1090)\n        navigatorEnabled = StockChart_pick(userOptions.navigator?.enabled, Navigator_NavigatorDefaults.enabled, true);\n        // Avoid doing these twice\n        userOptions.xAxis = userOptions.yAxis = void 0;\n        const options = StockChart_merge({\n            chart: {\n                panning: {\n                    enabled: true,\n                    type: 'x'\n                },\n                zooming: {\n                    pinchType: 'x',\n                    mouseWheel: {\n                        type: 'x'\n                    }\n                }\n            },\n            navigator: {\n                enabled: navigatorEnabled\n            },\n            scrollbar: {\n                // #4988 - check if setOptions was called\n                enabled: StockChart_pick(Scrollbar_ScrollbarDefaults.enabled, true)\n            },\n            rangeSelector: {\n                // #4988 - check if setOptions was called\n                enabled: StockChart_pick(RangeSelector_RangeSelectorDefaults.rangeSelector.enabled, true)\n            },\n            title: {\n                text: null\n            },\n            tooltip: {\n                split: StockChart_pick(defaultOptions.tooltip?.split, true),\n                crosshairs: true\n            },\n            legend: {\n                enabled: false\n            }\n        }, userOptions, // User's options\n        {\n            isStock: true // Internal flag\n        });\n        userOptions.xAxis = xAxisOptions;\n        userOptions.yAxis = yAxisOptions;\n        // Apply X axis options to both single and multi y axes\n        options.xAxis = StockChart_splat(userOptions.xAxis || {}).map((xAxisOptions) => StockChart_merge(getDefaultAxisOptions('xAxis', xAxisOptions, defaultOptions.xAxis), \n        // #7690\n        xAxisOptions, // User options\n        getForcedAxisOptions('xAxis', userOptions)));\n        // Apply Y axis options to both single and multi y axes\n        options.yAxis = StockChart_splat(userOptions.yAxis || {}).map((yAxisOptions) => StockChart_merge(getDefaultAxisOptions('yAxis', yAxisOptions, defaultOptions.yAxis), \n        // #7690\n        yAxisOptions // User options\n        ));\n        super.init(options, callback);\n    }\n    /**\n     * Factory for creating different axis types.\n     * Extended to add stock defaults.\n     *\n     * @private\n     * @function Highcharts.StockChart#createAxis\n     * @param {string} coll\n     * An axis type.\n     * @param {Chart.CreateAxisOptionsObject} options\n     * The axis creation options.\n     */\n    createAxis(coll, options) {\n        options.axis = StockChart_merge(getDefaultAxisOptions(coll, options.axis, getOptions()[coll]), options.axis, getForcedAxisOptions(coll, this.userOptions));\n        return super.createAxis(coll, options);\n    }\n}\nStockChart_addEvent((external_highcharts_src_js_default_Chart_default()), 'update', function (e) {\n    const chart = this, options = e.options;\n    // Use case: enabling scrollbar from a disabled state.\n    // Scrollbar needs to be initialized from a controller, Navigator in this\n    // case (#6615)\n    if ('scrollbar' in options && chart.navigator) {\n        StockChart_merge(true, chart.options.scrollbar, options.scrollbar);\n        chart.navigator.update({ enabled: !!chart.navigator.navigatorEnabled });\n        delete options.scrollbar;\n    }\n});\n/* *\n *\n *  Composition\n *\n * */\n(function (StockChart) {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /** @private */\n    function compose(ChartClass, AxisClass, SeriesClass, SVGRendererClass) {\n        const seriesProto = SeriesClass.prototype;\n        if (!seriesProto.forceCropping) {\n            StockChart_addEvent(AxisClass, 'afterDrawCrosshair', onAxisAfterDrawCrosshair);\n            StockChart_addEvent(AxisClass, 'afterHideCrosshair', onAxisAfterHideCrosshair);\n            StockChart_addEvent(AxisClass, 'autoLabelAlign', onAxisAutoLabelAlign);\n            StockChart_addEvent(AxisClass, 'destroy', onAxisDestroy);\n            StockChart_addEvent(AxisClass, 'getPlotLinePath', onAxisGetPlotLinePath);\n            ChartClass.prototype.setFixedRange = StockChart_setFixedRange;\n            seriesProto.forceCropping = seriesForceCropping;\n            StockChart_addEvent(SeriesClass, 'setOptions', onSeriesSetOptions);\n            SVGRendererClass.prototype.crispPolyLine = svgRendererCrispPolyLine;\n        }\n    }\n    StockChart.compose = compose;\n    /**\n     * Extend crosshairs to also draw the label.\n     * @private\n     */\n    function onAxisAfterDrawCrosshair(event) {\n        const axis = this;\n        // Check if the label has to be drawn\n        if (!(axis.crosshair?.label?.enabled &&\n            axis.cross &&\n            StockChart_isNumber(axis.min) &&\n            StockChart_isNumber(axis.max))) {\n            return;\n        }\n        const chart = axis.chart, log = axis.logarithmic, options = axis.crosshair.label, // The label's options\n        horiz = axis.horiz, // Axis orientation\n        opposite = axis.opposite, // Axis position\n        left = axis.left, // Left position\n        top = axis.top, // Top position\n        width = axis.width, tickInside = axis.options.tickPosition === 'inside', snap = axis.crosshair.snap !== false, e = event.e || (axis.cross?.e), point = event.point;\n        let crossLabel = axis.crossLabel, // The svgElement\n        posx, posy, formatOption = options.format, formatFormat = '', limit, offset = 0, \n        // Use last available event (#5287)\n        min = axis.min, max = axis.max;\n        if (log) {\n            min = log.lin2log(axis.min);\n            max = log.lin2log(axis.max);\n        }\n        const align = (horiz ? 'center' : opposite ?\n            (axis.labelAlign === 'right' ? 'right' : 'left') :\n            (axis.labelAlign === 'left' ? 'left' : 'center'));\n        // If the label does not exist yet, create it.\n        if (!crossLabel) {\n            crossLabel = axis.crossLabel = chart.renderer\n                .label('', 0, void 0, options.shape || 'callout')\n                .addClass('highcharts-crosshair-label highcharts-color-' + (point?.series ?\n                point.series.colorIndex :\n                axis.series[0] && this.series[0].colorIndex))\n                .attr({\n                align: options.align || align,\n                padding: StockChart_pick(options.padding, 8),\n                r: StockChart_pick(options.borderRadius, 3),\n                zIndex: 2\n            })\n                .add(axis.labelGroup);\n            // Presentational\n            if (!chart.styledMode) {\n                crossLabel\n                    .attr({\n                    fill: options.backgroundColor ||\n                        point?.series?.color || // #14888\n                        \"#666666\" /* Palette.neutralColor60 */,\n                    stroke: options.borderColor || '',\n                    'stroke-width': options.borderWidth || 0\n                })\n                    .css(StockChart_extend({\n                    color: \"#ffffff\" /* Palette.backgroundColor */,\n                    fontWeight: 'normal',\n                    fontSize: '0.7em',\n                    textAlign: 'center'\n                }, options.style || {}));\n            }\n        }\n        if (horiz) {\n            posx = snap ? (point.plotX || 0) + left : e.chartX;\n            posy = top + (opposite ? 0 : axis.height);\n        }\n        else {\n            posx = left + axis.offset + (opposite ? width : 0);\n            posy = snap ? (point.plotY || 0) + top : e.chartY;\n        }\n        if (!formatOption && !options.formatter) {\n            if (axis.dateTime) {\n                formatFormat = '%b %d, %Y';\n            }\n            formatOption =\n                '{value' + (formatFormat ? ':' + formatFormat : '') + '}';\n        }\n        // Show the label\n        const value = snap ?\n            (axis.isXAxis ? point.x : point.y) :\n            axis.toValue(horiz ? e.chartX : e.chartY);\n        // Crosshair should be rendered within Axis range (#7219) and the point\n        // of currentPriceIndicator should be inside the plot area (#14879).\n        const isInside = point?.series ?\n            point.series.isPointInside(point) :\n            (StockChart_isNumber(value) && value > min && value < max);\n        let text = '';\n        if (formatOption) {\n            text = StockChart_format(formatOption, { value }, chart);\n        }\n        else if (options.formatter && StockChart_isNumber(value)) {\n            text = options.formatter.call(axis, value);\n        }\n        crossLabel.attr({\n            text,\n            x: posx,\n            y: posy,\n            visibility: isInside ? 'inherit' : 'hidden'\n        });\n        const crossBox = crossLabel.getBBox();\n        // Now it is placed we can correct its position\n        if (StockChart_isNumber(crossLabel.x) && !horiz && !opposite) {\n            posx = crossLabel.x - (crossBox.width / 2);\n        }\n        if (StockChart_isNumber(crossLabel.y)) {\n            if (horiz) {\n                if ((tickInside && !opposite) || (!tickInside && opposite)) {\n                    posy = crossLabel.y - crossBox.height;\n                }\n            }\n            else {\n                posy = crossLabel.y - (crossBox.height / 2);\n            }\n        }\n        // Check the edges\n        if (horiz) {\n            limit = {\n                left,\n                right: left + axis.width\n            };\n        }\n        else {\n            limit = {\n                left: axis.labelAlign === 'left' ? left : 0,\n                right: axis.labelAlign === 'right' ?\n                    left + axis.width :\n                    chart.chartWidth\n            };\n        }\n        const translateX = crossLabel.translateX || 0;\n        // Left edge\n        if (translateX < limit.left) {\n            offset = limit.left - translateX;\n        }\n        // Right edge\n        if (translateX + crossBox.width >= limit.right) {\n            offset = -(translateX + crossBox.width - limit.right);\n        }\n        // Show the crosslabel\n        crossLabel.attr({\n            x: Math.max(0, posx + offset),\n            y: Math.max(0, posy),\n            // First set x and y, then anchorX and anchorY, when box is actually\n            // calculated, #5702\n            anchorX: horiz ?\n                posx :\n                (axis.opposite ? 0 : chart.chartWidth),\n            anchorY: horiz ?\n                (axis.opposite ? chart.chartHeight : 0) :\n                posy + crossBox.height / 2\n        });\n    }\n    /**\n     * Wrapper to hide the label.\n     * @private\n     */\n    function onAxisAfterHideCrosshair() {\n        const axis = this;\n        if (axis.crossLabel) {\n            axis.crossLabel = axis.crossLabel.hide();\n        }\n    }\n    /**\n     * Override the automatic label alignment so that the first Y axis' labels\n     * are drawn on top of the grid line, and subsequent axes are drawn outside.\n     * @private\n     */\n    function onAxisAutoLabelAlign(e) {\n        const axis = this, chart = axis.chart, options = axis.options, panes = chart._labelPanes = chart._labelPanes || {}, labelOptions = options.labels;\n        if (chart.options.isStock && axis.coll === 'yAxis') {\n            const key = options.top + ',' + options.height;\n            // Do it only for the first Y axis of each pane\n            if (!panes[key] && labelOptions.enabled) {\n                if (labelOptions.distance === 15 && // Default\n                    axis.side === 1) {\n                    labelOptions.distance = 0;\n                }\n                if (typeof labelOptions.align === 'undefined') {\n                    labelOptions.align = 'right';\n                }\n                panes[key] = axis;\n                e.align = 'right';\n                e.preventDefault();\n            }\n        }\n    }\n    /**\n     * Clear axis from label panes. (#6071)\n     * @private\n     */\n    function onAxisDestroy() {\n        const axis = this, chart = axis.chart, key = (axis.options &&\n            (axis.options.top + ',' + axis.options.height));\n        if (key && chart._labelPanes && chart._labelPanes[key] === axis) {\n            delete chart._labelPanes[key];\n        }\n    }\n    /**\n     * Override getPlotLinePath to allow for multipane charts.\n     * @private\n     */\n    function onAxisGetPlotLinePath(e) {\n        const axis = this, series = (axis.isLinked && !axis.series && axis.linkedParent ?\n            axis.linkedParent.series :\n            axis.series), chart = axis.chart, renderer = chart.renderer, axisLeft = axis.left, axisTop = axis.top, result = [], translatedValue = e.translatedValue, value = e.value, force = e.force, \n        /**\n         * Return the other axis based on either the axis option or on\n         * related series.\n         * @private\n         */\n        getAxis = (coll) => {\n            const otherColl = coll === 'xAxis' ? 'yAxis' : 'xAxis', opt = axis.options[otherColl];\n            // Other axis indexed by number\n            if (StockChart_isNumber(opt)) {\n                return [chart[otherColl][opt]];\n            }\n            // Other axis indexed by id (like navigator)\n            if (StockChart_isString(opt)) {\n                return [chart.get(opt)];\n            }\n            // Auto detect based on existing series\n            return series.map((s) => s[otherColl]);\n        };\n        let x1, y1, x2, y2, axes = [], // #3416 need a default array\n        axes2, uniqueAxes, transVal;\n        if ( // For stock chart, by default render paths across the panes\n        // except the case when `acrossPanes` is disabled by user (#6644)\n        (chart.options.isStock && e.acrossPanes !== false) &&\n            // Ignore in case of colorAxis or zAxis. #3360, #3524, #6720\n            axis.coll === 'xAxis' || axis.coll === 'yAxis') {\n            e.preventDefault();\n            // Get the related axes based on series\n            axes = getAxis(axis.coll);\n            // Get the related axes based options.*Axis setting #2810\n            axes2 = (axis.isXAxis ? chart.yAxis : chart.xAxis);\n            for (const A of axes2) {\n                if (!A.options.isInternal) {\n                    const a = (A.isXAxis ? 'yAxis' : 'xAxis'), relatedAxis = (StockChart_defined(A.options[a]) ?\n                        chart[a][A.options[a]] :\n                        chart[a][0]);\n                    if (axis === relatedAxis) {\n                        axes.push(A);\n                    }\n                }\n            }\n            // Remove duplicates in the axes array. If there are no axes in the\n            // axes array, we are adding an axis without data, so we need to\n            // populate this with grid lines (#2796).\n            uniqueAxes = axes.length ?\n                [] :\n                [axis.isXAxis ? chart.yAxis[0] : chart.xAxis[0]]; // #3742\n            for (const axis2 of axes) {\n                if (uniqueAxes.indexOf(axis2) === -1 &&\n                    // Do not draw on axis which overlap completely. #5424\n                    !StockChart_find(uniqueAxes, (unique) => (unique.pos === axis2.pos &&\n                        unique.len === axis2.len))) {\n                    uniqueAxes.push(axis2);\n                }\n            }\n            transVal = StockChart_pick(translatedValue, axis.translate(value || 0, void 0, void 0, e.old));\n            if (StockChart_isNumber(transVal)) {\n                if (axis.horiz) {\n                    for (const axis2 of uniqueAxes) {\n                        let skip;\n                        y1 = axis2.pos;\n                        y2 = y1 + axis2.len;\n                        x1 = x2 = Math.round(transVal + axis.transB);\n                        // Outside plot area\n                        if (force !== 'pass' &&\n                            (x1 < axisLeft || x1 > axisLeft + axis.width)) {\n                            if (force) {\n                                x1 = x2 = StockChart_clamp(x1, axisLeft, axisLeft + axis.width);\n                            }\n                            else {\n                                skip = true;\n                            }\n                        }\n                        if (!skip) {\n                            result.push(['M', x1, y1], ['L', x2, y2]);\n                        }\n                    }\n                }\n                else {\n                    for (const axis2 of uniqueAxes) {\n                        let skip;\n                        x1 = axis2.pos;\n                        x2 = x1 + axis2.len;\n                        y1 = y2 = Math.round(axisTop + axis.height - transVal);\n                        // Outside plot area\n                        if (force !== 'pass' &&\n                            (y1 < axisTop || y1 > axisTop + axis.height)) {\n                            if (force) {\n                                y1 = y2 = StockChart_clamp(y1, axisTop, axisTop + axis.height);\n                            }\n                            else {\n                                skip = true;\n                            }\n                        }\n                        if (!skip) {\n                            result.push(['M', x1, y1], ['L', x2, y2]);\n                        }\n                    }\n                }\n            }\n            e.path = result.length > 0 ?\n                renderer.crispPolyLine(result, e.lineWidth || 1) :\n                // #3557 getPlotLinePath in regular Highcharts also returns null\n                void 0;\n        }\n    }\n    /**\n     * Handle som Stock-specific series defaults, override the plotOptions\n     * before series options are handled.\n     * @private\n     */\n    function onSeriesSetOptions(e) {\n        const series = this;\n        if (series.chart.options.isStock) {\n            let overrides;\n            if (series.is('column') || series.is('columnrange')) {\n                overrides = {\n                    borderWidth: 0,\n                    shadow: false\n                };\n            }\n            else if (!series.is('scatter') && !series.is('sma')) {\n                overrides = {\n                    marker: {\n                        enabled: false,\n                        radius: 2\n                    }\n                };\n            }\n            if (overrides) {\n                e.plotOptions[series.type] = StockChart_merge(e.plotOptions[series.type], overrides);\n            }\n        }\n    }\n    /**\n     * Based on the data grouping options decides whether\n     * the data should be cropped while processing.\n     *\n     * @ignore\n     * @function Highcharts.Series#forceCropping\n     */\n    function seriesForceCropping() {\n        const series = this, chart = series.chart, options = series.options, dataGroupingOptions = options.dataGrouping, groupingEnabled = (series.allowDG !== false &&\n            dataGroupingOptions &&\n            StockChart_pick(dataGroupingOptions.enabled, chart.options.isStock));\n        return groupingEnabled;\n    }\n    /* eslint-disable jsdoc/check-param-names */\n    /**\n     * Factory function for creating new stock charts. Creates a new\n     * {@link Highcharts.StockChart|StockChart} object with different default\n     * options than the basic Chart.\n     *\n     * @example\n     * let chart = Highcharts.stockChart('container', {\n     *     series: [{\n     *         data: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n     *         pointInterval: 24 * 60 * 60 * 1000\n     *     }]\n     * });\n     *\n     * @function Highcharts.stockChart\n     *\n     * @param {string|Highcharts.HTMLDOMElement} [renderTo]\n     *        The DOM element to render to, or its id.\n     *\n     * @param {Highcharts.Options} options\n     *        The chart options structure as described in the\n     *        [options reference](https://api.highcharts.com/highstock).\n     *\n     * @param {Highcharts.ChartCallbackFunction} [callback]\n     *        A function to execute when the chart object is finished\n     *        rendering and all external image files (`chart.backgroundImage`,\n     *        `chart.plotBackgroundImage` etc) are loaded. Defining a\n     *        [chart.events.load](https://api.highcharts.com/highstock/chart.events.load)\n     *        handler is equivalent.\n     *\n     * @return {Highcharts.StockChart}\n     *         The chart object.\n     */\n    function stockChart(a, b, c) {\n        return new StockChart(a, b, c);\n    }\n    StockChart.stockChart = stockChart;\n    /* eslint-enable jsdoc/check-param-names */\n    /**\n     * Function to crisp a line with multiple segments\n     *\n     * @private\n     * @function Highcharts.SVGRenderer#crispPolyLine\n     */\n    function svgRendererCrispPolyLine(points, width) {\n        // Points format: [['M', 0, 0], ['L', 100, 0]]\n        // normalize to a crisp line\n        for (let i = 0; i < points.length; i = i + 2) {\n            const start = points[i], end = points[i + 1];\n            if (StockChart_defined(start[1]) && start[1] === end[1]) {\n                start[1] = end[1] = StockChart_crisp(start[1], width);\n            }\n            if (StockChart_defined(start[2]) && start[2] === end[2]) {\n                start[2] = end[2] = StockChart_crisp(start[2], width);\n            }\n        }\n        return points;\n    }\n})(StockChart || (StockChart = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Chart_StockChart = (StockChart);\n\n;// ./code/es-modules/Series/HLC/HLCPoint.js\n/* *\n *\n *  (c) 2010-2025 Pawel Lysy\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { column: { prototype: { pointClass: ColumnPoint } } } = (external_highcharts_src_js_default_SeriesRegistry_default()).seriesTypes;\n/* *\n *\n *  Class\n *\n * */\nclass HLCPoint extends ColumnPoint {\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const HLC_HLCPoint = (HLCPoint);\n\n;// ./code/es-modules/Series/HLC/HLCSeriesDefaults.js\n/* *\n *\n *  (c) 2010-2025 Pawel Lysy\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  API Options\n *\n * */\n/**\n * An HLC chart is a style of financial chart used to describe price\n * movements over time. It displays high, low and close values per\n * data point.\n *\n * @sample stock/demo/hlc/\n *         HLC chart\n *\n * @extends      plotOptions.column\n * @excluding    borderColor, borderRadius, borderWidth, crisp, stacking,\n *               stack\n * @product      highstock\n * @optionparent plotOptions.hlc\n */\nconst HLCSeriesDefaults = {\n    /**\n     * The approximate pixel width of each group. If for example a series\n     * with 30 points is displayed over a 600 pixel wide plot area, no\n     * grouping is performed. If however the series contains so many points\n     * that the spacing is less than the groupPixelWidth, Highcharts will\n     * try to group it into appropriate groups so that each is more or less\n     * two pixels wide. Defaults to `5`.\n     *\n     * @type      {number}\n     * @default   5\n     * @product   highstock\n     * @apioption plotOptions.hlc.dataGrouping.groupPixelWidth\n     */\n    /**\n     * @type      {Highcharts.DataGroupingApproximationValue|Function}\n     * @default   hlc\n     * @product   highstock\n     * @apioption plotOptions.hlc.dataGrouping.approximation\n     */\n    /**\n     * @default   close\n     * @apioption plotOptions.hlc.colorKey\n     */\n    /**\n     * The pixel width of the line/border. Defaults to `1`.\n     *\n     * @sample {highstock} stock/plotoptions/hlc-linewidth/\n     *         A greater line width\n     *\n     * @type    {number}\n     * @default 1\n     * @product highstock\n     *\n     * @public\n     */\n    lineWidth: 1,\n    tooltip: {\n        pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> ' +\n            '<b> {series.name}</b><br/>' +\n            '{series.chart.options.lang.stockHigh}: {point.high}<br/>' +\n            '{series.chart.options.lang.stockLow}: {point.low}<br/>' +\n            '{series.chart.options.lang.stockClose}: {point.close}<br/>'\n    },\n    /**\n     * @type {number|null}\n     */\n    threshold: null,\n    states: {\n        /**\n         * @extends plotOptions.column.states.hover\n         * @product highstock\n         */\n        hover: {\n            /**\n             * The pixel width of the line representing the HLC point.\n             *\n             * @type    {number}\n             * @default 3\n             * @product highstock\n             */\n            lineWidth: 3\n        }\n    },\n    /**\n     * Determines which one of  `high`, `low`, `close` values should\n     * be represented as `point.y`, which is later used to set dataLabel\n     * position and [compare](#plotOptions.series.compare).\n     *\n     * @sample {highstock} stock/plotoptions/hlc-pointvalkey/\n     *         Possible values\n     *\n     * @declare    Highcharts.OptionsHLCPointValKeyValue\n     * @type       {string}\n     * @default    close\n     * @validvalue [\"high\", \"low\", \"close\"]\n     * @product    highstock\n     * @apioption  plotOptions.hlc.pointValKey\n     */\n    /**\n     * @default   close\n     * @apioption plotOptions.hlc.colorKey\n     */\n    stickyTracking: true\n};\n/**\n * A `hlc` series. If the [type](#series.hlc.type) option is not\n * specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.hlc\n * @excluding dataParser, dataURL\n * @product   highstock\n * @apioption series.hlc\n */\n/**\n * An array of data points for the series. For the `hlc` series type,\n * points can be given in the following ways:\n *\n * 1. An array of arrays with 4 or 3 values. In this case, the values correspond\n *    to `x,high,low,close`. If the first value is a string, it is applied\n *    as the name of the point, and the `x` value is inferred. The `x` value can\n *    also be omitted, in which case the inner arrays should be of length of 3\\.\n *    Then the `x` value is automatically calculated, either starting at 0 and\n *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n *    series options.\n *    ```js\n *    data: [\n *        [0, 5, 6, 7],\n *        [1, 4, 8, 2],\n *        [2, 3, 4, 10]\n *    ]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.hlc.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        high: 4,\n *        low: 5,\n *        close: 2,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        high: 3,\n *        low: 6,\n *        close: 7,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @type      {Array<Array<(number|string),number,number>|Array<(number|string),number,number,number>|*>}\n * @extends   series.arearange.data\n * @excluding y, marker\n * @product   highstock\n * @apioption series.hlc.data\n */\n/**\n * The closing value of each data point.\n *\n * @type      {number}\n * @product   highstock\n * @apioption series.hlc.data.close\n */\n(''); // Keeps doclets above in JS file\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const HLC_HLCSeriesDefaults = (HLCSeriesDefaults);\n\n;// ./code/es-modules/Series/HLC/HLCSeries.js\n/* *\n *\n *  (c) 2010-2025 Pawel Lysy\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\nconst { column: ColumnSeries } = (external_highcharts_src_js_default_SeriesRegistry_default()).seriesTypes;\n\nconst { crisp: HLCSeries_crisp, extend: HLCSeries_extend, merge: HLCSeries_merge } = (external_highcharts_src_js_default_default());\n\nconst { defaultOptions: HLCSeries_defaultOptions } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * The hlc series type.\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.hlc\n *\n * @augments Highcharts.Series\n */\nclass HLCSeries extends ColumnSeries {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Extend the path if close is not between high and low.\n     *\n     * @param {SVGPath} path the path array of the point\n     * @param {number} halfStrokeWidth\n     * @param {number} value value of the point to which the stem should be extended\n     */\n    extendStem(path, halfStrokeWidth, value) {\n        const start = path[0];\n        const end = path[1];\n        // We don't need to worry about crisp - close value\n        // is already crisped and halfStrokeWidth should remove it.\n        if (typeof start[2] === 'number') {\n            start[2] = Math.max(value + halfStrokeWidth, start[2]);\n        }\n        if (typeof end[2] === 'number') {\n            end[2] = Math.min(value - halfStrokeWidth, end[2]);\n        }\n    }\n    /**\n     * Function to create SVGPath of the point based on the\n     * plot positions of this point.\n     * @private\n     */\n    getPointPath(point, graphic) {\n        // Crisp vector coordinates\n        const strokeWidth = graphic.strokeWidth(), series = point.series, \n        // #2596:\n        crispX = HLCSeries_crisp(point.plotX || 0, strokeWidth), halfWidth = Math.round(point.shapeArgs.width / 2);\n        // The vertical stem\n        const path = [\n            ['M', crispX, Math.round(point.yBottom)],\n            ['L', crispX, Math.round(point.plotHigh)]\n        ];\n        // Close\n        if (point.close !== null) {\n            const plotClose = HLCSeries_crisp(point.plotClose, strokeWidth);\n            path.push(['M', crispX, plotClose], ['L', crispX + halfWidth, plotClose]);\n            series.extendStem(path, strokeWidth / 2, plotClose);\n        }\n        return path;\n    }\n    /**\n     * Draw single point\n     * @private\n     */\n    drawSinglePoint(point) {\n        const series = point.series, chart = series.chart;\n        let path, graphic = point.graphic;\n        if (typeof point.plotY !== 'undefined') {\n            // Create and/or update the graphic\n            if (!graphic) {\n                point.graphic = graphic = chart.renderer.path()\n                    .add(series.group);\n            }\n            if (!chart.styledMode) {\n                graphic.attr(series.pointAttribs(point, (point.selected && 'select'))); // #3897\n            }\n            // Crisp vector coordinates\n            path = series.getPointPath(point, graphic);\n            graphic[!graphic ? 'attr' : 'animate']({ d: path })\n                .addClass(point.getClassName(), true);\n        }\n    }\n    /**\n     * Draw the data points\n     * @private\n     */\n    drawPoints() {\n        this.points.forEach(this.drawSinglePoint);\n    }\n    /**\n     * @private\n     * @function Highcharts.seriesTypes.hlc#init\n     */\n    init() {\n        super.init.apply(this, arguments);\n        this.options.stacking = void 0; // #8817\n    }\n    /**\n     * Postprocess mapping between options and SVG attributes\n     * @private\n     */\n    pointAttribs(point, state) {\n        const attribs = super.pointAttribs.call(this, point, state);\n        delete attribs.fill;\n        return attribs;\n    }\n    toYData(point) {\n        // Return a plain array for speedy calculation\n        return [point.high, point.low, point.close];\n    }\n    /**\n     * Translate data points from raw values x and y to plotX and plotY\n     *\n     * @private\n     * @function Highcharts.seriesTypes.hlc#translate\n     */\n    translate() {\n        const series = this, yAxis = series.yAxis, names = (this.pointArrayMap && this.pointArrayMap.slice()) || [], translated = names.map((name) => `plot${name.charAt(0).toUpperCase() + name.slice(1)}`);\n        translated.push('yBottom');\n        names.push('low');\n        super.translate.apply(series);\n        // Do the translation\n        series.points.forEach(function (point) {\n            names.forEach(function (name, i) {\n                let value = point[name];\n                if (value !== null) {\n                    if (series.dataModify) {\n                        value = series.dataModify.modifyValue(value);\n                    }\n                    point[translated[i]] =\n                        yAxis.toPixels(value, true);\n                }\n            });\n            // Align the tooltip to the high value to avoid covering the\n            // point\n            point.tooltipPos[1] =\n                point.plotHigh + yAxis.pos - series.chart.plotTop;\n        });\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nHLCSeries.defaultOptions = HLCSeries_merge(ColumnSeries.defaultOptions, HLC_HLCSeriesDefaults);\nHLCSeries_extend(HLCSeries.prototype, {\n    pointClass: HLC_HLCPoint,\n    animate: null, // Disable animation\n    directTouch: false,\n    keysAffectYAxis: ['low', 'high'],\n    pointArrayMap: ['high', 'low', 'close'],\n    pointAttrToOptions: {\n        stroke: 'color',\n        'stroke-width': 'lineWidth'\n    },\n    pointValKey: 'close'\n});\n// Extend default lang options with OHLC terms\nconst HLCDefaultLangOptions = {\n    stockOpen: 'Open',\n    stockHigh: 'High',\n    stockLow: 'Low',\n    stockClose: 'Close'\n};\nHLCSeries_extend(HLCSeries_defaultOptions.lang, HLCDefaultLangOptions);\nexternal_highcharts_src_js_default_SeriesRegistry_default().registerSeriesType('hlc', HLCSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const HLC_HLCSeries = ((/* unused pure expression or super */ null && (HLCSeries)));\n\n;// ./code/es-modules/Series/OHLC/OHLCPoint.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { seriesTypes: { hlc: OHLCPoint_HLCSeries } } = (external_highcharts_src_js_default_SeriesRegistry_default());\n/* *\n *\n *  Class\n *\n * */\nclass OHLCPoint extends OHLCPoint_HLCSeries.prototype.pointClass {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Extend the parent method by adding up or down to the class name.\n     * @private\n     * @function Highcharts.seriesTypes.ohlc#getClassName\n     */\n    getClassName() {\n        return super.getClassName.call(this) +\n            (this.open < this.close ?\n                ' highcharts-point-up' :\n                ' highcharts-point-down');\n    }\n    /**\n     * Save upColor as point color (#14826).\n     * @private\n     * @function Highcharts.seriesTypes.ohlc#resolveUpColor\n     */\n    resolveUpColor() {\n        if (this.open < this.close &&\n            !this.options.color &&\n            this.series.options.upColor) {\n            this.color = this.series.options.upColor;\n        }\n    }\n    /**\n     * Extend the parent method by saving upColor.\n     * @private\n     * @function Highcharts.seriesTypes.ohlc#resolveColor\n     */\n    resolveColor() {\n        super.resolveColor();\n        if (!this.series.is('heikinashi')) {\n            this.resolveUpColor();\n        }\n    }\n    /**\n     * Extend the parent method by saving upColor.\n     * @private\n     * @function Highcharts.seriesTypes.ohlc#getZone\n     *\n     * @return {Highcharts.SeriesZonesOptionsObject}\n     *         The zone item.\n     */\n    getZone() {\n        const zone = super.getZone();\n        this.resolveUpColor();\n        return zone;\n    }\n    /**\n     * Extend the parent method by resolving up/down colors (#15849)\n     * @private\n     **/\n    applyOptions() {\n        super.applyOptions.apply(this, arguments);\n        if (this.resolveColor) {\n            this.resolveColor();\n        }\n        return this;\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const OHLC_OHLCPoint = (OHLCPoint);\n\n;// ./code/es-modules/Series/OHLC/OHLCSeriesDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  API Options\n *\n * */\n/**\n * An OHLC chart is a style of financial chart used to describe price\n * movements over time. It displays open, high, low and close values per\n * data point.\n *\n * @sample stock/demo/ohlc\n *         OHLC chart\n *\n * @extends      plotOptions.hlc\n * @product      highstock\n * @optionparent plotOptions.ohlc\n */\nconst OHLCSeriesDefaults = {\n    /**\n     * @type      {Highcharts.DataGroupingApproximationValue|Function}\n     * @default   ohlc\n     * @product   highstock\n     * @apioption plotOptions.ohlc.dataGrouping.approximation\n     */\n    /**\n     * Determines which one of  `open`, `high`, `low`, `close` values should\n     * be represented as `point.y`, which is later used to set dataLabel\n     * position and [compare](#plotOptions.series.compare).\n     *\n     * @declare    Highcharts.OptionsPointValKeyValue\n     * @default    close\n     * @validvalue [\"open\", \"high\", \"low\", \"close\"]\n     * @product    highstock\n     * @apioption  plotOptions.ohlc.pointValKey\n     */\n    /**\n     * Line color for up points.\n     *\n     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @product   highstock\n     * @apioption plotOptions.ohlc.upColor\n     */\n    tooltip: {\n        pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> ' +\n            '<b> {series.name}</b><br/>' +\n            '{series.chart.options.lang.stockOpen}: {point.open}<br/>' +\n            '{series.chart.options.lang.stockHigh}: {point.high}<br/>' +\n            '{series.chart.options.lang.stockLow}: {point.low}<br/>' +\n            '{series.chart.options.lang.stockClose}: {point.close}<br/>'\n    }\n};\n/**\n * The parameter allows setting line series type and use OHLC indicators.\n * Data in OHLC format is required.\n *\n * @sample {highstock} stock/indicators/use-ohlc-data\n *         Use OHLC data format to plot line chart\n *\n * @type      {boolean}\n * @product   highstock\n * @apioption plotOptions.line.useOhlcData\n */\n/**\n * A `ohlc` series. If the [type](#series.ohlc.type) option is not\n * specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.ohlc\n * @excluding dataParser, dataURL\n * @product   highstock\n * @apioption series.ohlc\n */\n/**\n * An array of data points for the series. For the `ohlc` series type,\n * points can be given in the following ways:\n *\n * 1. An array of arrays with 5 or 4 values. In this case, the values correspond\n *    to `x,open,high,low,close`. If the first value is a string, it is applied\n *    as the name of the point, and the `x` value is inferred. The `x` value can\n *    also be omitted, in which case the inner arrays should be of length 4\\.\n *    Then the `x` value is automatically calculated, either starting at 0 and\n *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n *    series options.\n *    ```js\n *    data: [\n *        [0, 6, 5, 6, 7],\n *        [1, 9, 4, 8, 2],\n *        [2, 6, 3, 4, 10]\n *    ]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.ohlc.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        open: 3,\n *        high: 4,\n *        low: 5,\n *        close: 2,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        open: 4,\n *        high: 3,\n *        low: 6,\n *        close: 7,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @type      {Array<Array<(number|string),number,number,number>|Array<(number|string),number,number,number,number>|*>}\n * @extends   series.arearange.data\n * @excluding y, marker\n * @product   highstock\n * @apioption series.ohlc.data\n */\n/**\n * The closing value of each data point.\n *\n * @type      {number}\n * @product   highstock\n * @apioption series.ohlc.data.close\n */\n/**\n * The opening value of each data point.\n *\n * @type      {number}\n * @product   highstock\n * @apioption series.ohlc.data.open\n */\n''; // Adds doclets above to transpiled\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const OHLC_OHLCSeriesDefaults = (OHLCSeriesDefaults);\n\n;// ./code/es-modules/Series/OHLC/OHLCSeries.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { composed: OHLCSeries_composed } = (external_highcharts_src_js_default_default());\n\n\n\nconst { hlc: OHLCSeries_HLCSeries } = (external_highcharts_src_js_default_SeriesRegistry_default()).seriesTypes;\n\nconst { addEvent: OHLCSeries_addEvent, crisp: OHLCSeries_crisp, extend: OHLCSeries_extend, merge: OHLCSeries_merge, pushUnique: OHLCSeries_pushUnique } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction onSeriesAfterSetOptions(e) {\n    const options = e.options, dataGrouping = options.dataGrouping;\n    if (dataGrouping &&\n        options.useOhlcData &&\n        options.id !== 'highcharts-navigator-series') {\n        dataGrouping.approximation = 'ohlc';\n    }\n}\n/**\n * Add useOhlcData option\n * @private\n */\nfunction onSeriesInit(eventOptions) {\n    // eslint-disable-next-line no-invalid-this\n    const series = this, options = eventOptions.options;\n    if (options.useOhlcData &&\n        options.id !== 'highcharts-navigator-series') {\n        OHLCSeries_extend(series, {\n            pointValKey: OHLCSeries.prototype.pointValKey,\n            // Keys: ohlcProto.keys, // @todo potentially nonsense\n            pointArrayMap: OHLCSeries.prototype.pointArrayMap,\n            toYData: OHLCSeries.prototype.toYData\n        });\n    }\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * The ohlc series type.\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.ohlc\n *\n * @augments Highcharts.Series\n */\nclass OHLCSeries extends OHLCSeries_HLCSeries {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    static compose(SeriesClass, ..._args) {\n        if (OHLCSeries_pushUnique(OHLCSeries_composed, 'OHLCSeries')) {\n            OHLCSeries_addEvent(SeriesClass, 'afterSetOptions', onSeriesAfterSetOptions);\n            OHLCSeries_addEvent(SeriesClass, 'init', onSeriesInit);\n        }\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    getPointPath(point, graphic) {\n        const path = super.getPointPath(point, graphic), strokeWidth = graphic.strokeWidth(), crispX = OHLCSeries_crisp(point.plotX || 0, strokeWidth), halfWidth = Math.round(point.shapeArgs.width / 2);\n        if (point.open !== null) {\n            const plotOpen = OHLCSeries_crisp(point.plotOpen, strokeWidth);\n            path.push(['M', crispX, plotOpen], ['L', crispX - halfWidth, plotOpen]);\n            super.extendStem(path, strokeWidth / 2, plotOpen);\n        }\n        return path;\n    }\n    /**\n     * Postprocess mapping between options and SVG attributes\n     * @private\n     */\n    pointAttribs(point, state) {\n        const attribs = super.pointAttribs.call(this, point, state), options = this.options;\n        delete attribs.fill;\n        if (!point.options.color &&\n            options.upColor &&\n            point.open < point.close) {\n            attribs.stroke = options.upColor;\n        }\n        return attribs;\n    }\n    toYData(point) {\n        // Return a plain array for speedy calculation\n        return [point.open, point.high, point.low, point.close];\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nOHLCSeries.defaultOptions = OHLCSeries_merge(OHLCSeries_HLCSeries.defaultOptions, OHLC_OHLCSeriesDefaults);\nOHLCSeries_extend(OHLCSeries.prototype, {\n    pointClass: OHLC_OHLCPoint,\n    pointArrayMap: ['open', 'high', 'low', 'close']\n});\nexternal_highcharts_src_js_default_SeriesRegistry_default().registerSeriesType('ohlc', OHLCSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const OHLC_OHLCSeries = (OHLCSeries);\n\n;// ./code/es-modules/Series/Candlestick/CandlestickSeriesDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A candlestick chart is a style of financial chart used to describe\n * price movements over time.\n *\n * @sample stock/demo/candlestick/\n *         Candlestick chart\n *\n * @extends      plotOptions.ohlc\n * @excluding    borderColor,borderRadius,borderWidth\n * @product      highstock\n * @optionparent plotOptions.candlestick\n */\nconst CandlestickSeriesDefaults = {\n    /**\n     * The specific line color for up candle sticks. The default is to\n     * inherit the general `lineColor` setting.\n     *\n     * @sample {highstock} stock/plotoptions/candlestick-linecolor/\n     *         Candlestick line colors\n     *\n     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @since     1.3.6\n     * @product   highstock\n     * @apioption plotOptions.candlestick.upLineColor\n     */\n    states: {\n        /**\n         * @extends plotOptions.column.states.hover\n         * @product highstock\n         */\n        hover: {\n            /**\n             * The pixel width of the line/border around the\n             * candlestick.\n             *\n             * @product highstock\n             */\n            lineWidth: 2\n        }\n    },\n    /**\n     * @type    {number|null}\n     * @product highstock\n     */\n    threshold: null,\n    /**\n     * The color of the line/border of the candlestick.\n     *\n     * In styled mode, the line stroke can be set with the\n     * `.highcharts-candlestick-series .highcahrts-point` rule.\n     *\n     * @see [upLineColor](#plotOptions.candlestick.upLineColor)\n     *\n     * @sample {highstock} stock/plotoptions/candlestick-linecolor/\n     *         Candlestick line colors\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @default #000000\n     * @product highstock\n     */\n    lineColor: \"#000000\" /* Palette.neutralColor100 */,\n    /**\n     * The pixel width of the candlestick line/border. Defaults to `1`.\n     *\n     *\n     * In styled mode, the line stroke width can be set with the\n     * `.highcharts-candlestick-series .highcahrts-point` rule.\n     *\n     * @product highstock\n     */\n    lineWidth: 1,\n    /**\n     * The fill color of the candlestick when values are rising.\n     *\n     * In styled mode, the up color can be set with the\n     * `.highcharts-candlestick-series .highcharts-point-up` rule.\n     *\n     * @sample {highstock} stock/plotoptions/candlestick-color/\n     *         Custom colors\n     * @sample {highstock} highcharts/css/candlestick/\n     *         Colors in styled mode\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @default #ffffff\n     * @product highstock\n    */\n    upColor: \"#ffffff\" /* Palette.backgroundColor */,\n    /**\n     * @product highstock\n     */\n    stickyTracking: true\n};\n/**\n * A `candlestick` series. If the [type](#series.candlestick.type)\n * option is not specified, it is inherited from [chart.type](\n * #chart.type).\n *\n * @type      {*}\n * @extends   series,plotOptions.candlestick\n * @excluding dataParser, dataURL, marker\n * @product   highstock\n * @apioption series.candlestick\n */\n/**\n * An array of data points for the series. For the `candlestick` series\n * type, points can be given in the following ways:\n *\n * 1. An array of arrays with 5 or 4 values. In this case, the values correspond\n *    to `x,open,high,low,close`. If the first value is a string, it is applied\n *    as the name of the point, and the `x` value is inferred. The `x` value can\n *    also be omitted, in which case the inner arrays should be of length 4.\n *    Then the `x` value is automatically calculated, either starting at 0 and\n *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n *    series options.\n *    ```js\n *    data: [\n *        [0, 7, 2, 0, 4],\n *        [1, 1, 4, 2, 8],\n *        [2, 3, 3, 9, 3]\n *    ]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.candlestick.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        open: 9,\n *        high: 2,\n *        low: 4,\n *        close: 6,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        open: 1,\n *        high: 4,\n *        low: 7,\n *        close: 7,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @type      {Array<Array<(number|string),number,number,number>|Array<(number|string),number,number,number,number>|*>}\n * @extends   series.ohlc.data\n * @excluding y\n * @product   highstock\n * @apioption series.candlestick.data\n */\n''; // Adds doclets above to transpiled\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Candlestick_CandlestickSeriesDefaults = (CandlestickSeriesDefaults);\n\n;// ./code/es-modules/Series/Candlestick/CandlestickSeries.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { column: CandlestickSeries_ColumnSeries, ohlc: CandlestickSeries_OHLCSeries } = (external_highcharts_src_js_default_SeriesRegistry_default()).seriesTypes;\n\nconst { crisp: CandlestickSeries_crisp, merge: CandlestickSeries_merge } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * The candlestick series type.\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.candlestick\n *\n * @augments Highcharts.seriesTypes.ohlc\n */\nclass CandlestickSeries extends CandlestickSeries_OHLCSeries {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Postprocess mapping between options and SVG attributes\n     *\n     * @private\n     * @function Highcharts.seriesTypes.candlestick#pointAttribs\n     */\n    pointAttribs(point, state) {\n        const attribs = CandlestickSeries_ColumnSeries.prototype.pointAttribs.call(this, point, state), options = this.options, isUp = point.open < point.close, stroke = options.lineColor || this.color, color = point.color || this.color; // (#14826)\n        attribs['stroke-width'] = options.lineWidth;\n        attribs.fill = point.options.color ||\n            (isUp ? (options.upColor || color) : color);\n        attribs.stroke = point.options.lineColor ||\n            (isUp ? (options.upLineColor || stroke) : stroke);\n        // Select or hover states\n        if (state) {\n            const stateOptions = options.states[state];\n            attribs.fill = stateOptions.color || attribs.fill;\n            attribs.stroke = stateOptions.lineColor || attribs.stroke;\n            attribs['stroke-width'] =\n                stateOptions.lineWidth || attribs['stroke-width'];\n        }\n        return attribs;\n    }\n    /**\n     * Draw the data points.\n     *\n     * @private\n     * @function Highcharts.seriesTypes.candlestick#drawPoints\n     */\n    drawPoints() {\n        const series = this, points = series.points, chart = series.chart, reversedYAxis = series.yAxis.reversed;\n        for (const point of points) {\n            let graphic = point.graphic, plotOpen, plotClose, topBox, bottomBox, hasTopWhisker, hasBottomWhisker, crispX, path, halfWidth;\n            const isNew = !graphic;\n            if (typeof point.plotY !== 'undefined') {\n                if (!graphic) {\n                    point.graphic = graphic = chart.renderer.path()\n                        .add(series.group);\n                }\n                if (!series.chart.styledMode) {\n                    graphic\n                        .attr(series.pointAttribs(point, (point.selected && 'select'))) // #3897\n                        .shadow(series.options.shadow);\n                }\n                // Crisp vector coordinates\n                const strokeWidth = graphic.strokeWidth();\n                // #2596:\n                crispX = CandlestickSeries_crisp(point.plotX || 0, strokeWidth);\n                plotOpen = point.plotOpen;\n                plotClose = point.plotClose;\n                topBox = Math.min(plotOpen, plotClose);\n                bottomBox = Math.max(plotOpen, plotClose);\n                halfWidth = Math.round(point.shapeArgs.width / 2);\n                hasTopWhisker = reversedYAxis ?\n                    bottomBox !== point.yBottom :\n                    Math.round(topBox) !==\n                        Math.round(point.plotHigh || 0);\n                hasBottomWhisker = reversedYAxis ?\n                    Math.round(topBox) !==\n                        Math.round(point.plotHigh || 0) :\n                    bottomBox !== point.yBottom;\n                topBox = CandlestickSeries_crisp(topBox, strokeWidth);\n                bottomBox = CandlestickSeries_crisp(bottomBox, strokeWidth);\n                // Create the path. Due to a bug in Chrome 49, the path is\n                // first instantiated with no values, then the values\n                // pushed. For unknown reasons, instantiating the path array\n                // with all the values would lead to a crash when updating\n                // frequently (#5193).\n                path = [];\n                path.push(['M', crispX - halfWidth, bottomBox], ['L', crispX - halfWidth, topBox], ['L', crispX + halfWidth, topBox], ['L', crispX + halfWidth, bottomBox], ['Z'], // Ensure a nice rectangle #2602\n                ['M', crispX, topBox], [\n                    'L',\n                    // #460, #2094\n                    crispX,\n                    hasTopWhisker ?\n                        Math.round(reversedYAxis ?\n                            point.yBottom :\n                            point.plotHigh) :\n                        topBox\n                ], ['M', crispX, bottomBox], [\n                    'L',\n                    // #460, #2094\n                    crispX,\n                    hasBottomWhisker ?\n                        Math.round(reversedYAxis ?\n                            point.plotHigh :\n                            point.yBottom) :\n                        bottomBox\n                ]);\n                graphic[isNew ? 'attr' : 'animate']({ d: path })\n                    .addClass(point.getClassName(), true);\n            }\n        }\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nCandlestickSeries.defaultOptions = CandlestickSeries_merge(CandlestickSeries_OHLCSeries.defaultOptions, { tooltip: CandlestickSeries_OHLCSeries.defaultOptions.tooltip }, Candlestick_CandlestickSeriesDefaults);\nexternal_highcharts_src_js_default_SeriesRegistry_default().registerSeriesType('candlestick', CandlestickSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Candlestick_CandlestickSeries = ((/* unused pure expression or super */ null && (CandlestickSeries)));\n\n;// ./code/es-modules/Series/Flags/FlagsPoint.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { column: { prototype: { pointClass: FlagsPoint_ColumnPoint } } } = (external_highcharts_src_js_default_SeriesRegistry_default()).seriesTypes;\n\nconst { isNumber: FlagsPoint_isNumber } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\nclass FlagsPoint extends FlagsPoint_ColumnPoint {\n    constructor() {\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        super(...arguments);\n        this.ttBelow = false;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    isValid() {\n        // #9233 - Prevent from treating flags as null points (even if\n        // they have no y values defined).\n        return FlagsPoint_isNumber(this.y) || typeof this.y === 'undefined';\n    }\n    /**\n     * @private\n     */\n    hasNewShapeType() {\n        const shape = this.options.shape || this.series.options.shape;\n        return this.graphic && shape && shape !== this.graphic.symbolKey;\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Flags_FlagsPoint = (FlagsPoint);\n\n;// ./code/es-modules/Series/Flags/FlagsSeriesDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Flags are used to mark events in stock charts. They can be added on the\n * timeline, or attached to a specific series.\n *\n * @sample stock/demo/flags-general/\n *         Flags on a line series\n *\n * @extends      plotOptions.column\n * @excluding    animation, borderColor, borderWidth,\n *               colorByPoint, cropThreshold, dataGrouping, pointPadding,\n *               pointWidth, turboThreshold\n * @product      highstock\n * @optionparent plotOptions.flags\n */\nconst FlagsSeriesDefaults = {\n    /**\n     * The corner radius of the border surrounding each flag. For `squarepin`\n     * shaped flags only. A number signifies pixels. A percentage string, like\n     * for example 50%, signifies a relative size.\n     */\n    borderRadius: 0,\n    /**\n     * In case the flag is placed on a series, on what point key to place\n     * it. Line and columns have one key, `y`. In range or OHLC-type series,\n     * however, the flag can optionally be placed on the `open`, `high`,\n     * `low` or `close` key.\n     *\n     * @sample {highstock} stock/plotoptions/flags-onkey/\n     *         Range series, flag on high\n     *\n     * @type       {string}\n     * @default    y\n     * @since      4.2.2\n     * @product    highstock\n     * @validvalue [\"y\", \"open\", \"high\", \"low\", \"close\"]\n     * @apioption  plotOptions.flags.onKey\n     */\n    /**\n     * The id of the series that the flags should be drawn on. If no id\n     * is given, the flags are drawn on the x axis.\n     *\n     * @sample {highstock} stock/plotoptions/flags/\n     *         Flags on series and on x axis\n     *\n     * @type      {string}\n     * @product   highstock\n     * @apioption plotOptions.flags.onSeries\n     */\n    pointRange: 0, // #673\n    /**\n     * Whether the flags are allowed to overlap sideways. If `false`, the\n     * flags are moved sideways using an algorithm that seeks to place every\n     * flag as close as possible to its original position.\n     *\n     * @sample {highstock} stock/plotoptions/flags-allowoverlapx\n     *         Allow sideways overlap\n     *\n     * @since 6.0.4\n     */\n    allowOverlapX: false,\n    /**\n     * The shape of the marker. Can be one of \"flag\", \"circlepin\",\n     * \"squarepin\", or an image of the format `url(/path-to-image.jpg)`.\n     * Individual shapes can also be set for each point.\n     *\n     * @sample {highstock} stock/plotoptions/flags/\n     *         Different shapes\n     *\n     * @type    {Highcharts.FlagsShapeValue}\n     * @product highstock\n     */\n    shape: 'flag',\n    /**\n     * When multiple flags in the same series fall on the same value, this\n     * number determines the vertical offset between them.\n     *\n     * @sample {highstock} stock/plotoptions/flags-stackdistance/\n     *         A greater stack distance\n     *\n     * @product highstock\n     */\n    stackDistance: 12,\n    /**\n     * Text alignment for the text inside the flag.\n     *\n     * @since      5.0.0\n     * @product    highstock\n     * @validvalue [\"left\", \"center\", \"right\"]\n     */\n    textAlign: 'center',\n    /**\n     * Specific tooltip options for flag series. Flag series tooltips are\n     * different from most other types in that a flag doesn't have a data\n     * value, so the tooltip rather displays the `text` option for each\n     * point.\n     *\n     * @extends   plotOptions.series.tooltip\n     * @excluding changeDecimals, valueDecimals, valuePrefix, valueSuffix\n     * @product   highstock\n     */\n    tooltip: {\n        pointFormat: '{point.text}'\n    },\n    /**\n     * @type {number|null}\n     */\n    threshold: null,\n    /**\n     * The text to display on each flag. This can be defined on series\n     * level, or individually for each point. Defaults to `\"A\"`.\n     *\n     * @type      {string}\n     * @default   A\n     * @product   highstock\n     * @apioption plotOptions.flags.title\n     */\n    /**\n     * The y position of the top left corner of the flag relative to either\n     * the series (if onSeries is defined), or the x axis. Defaults to\n     * `-30`.\n     *\n     * @product highstock\n     */\n    y: -30,\n    /**\n     * Whether to use HTML to render the flag texts. Using HTML allows for\n     * advanced formatting, images and reliable bi-directional text\n     * rendering. Note that exported images won't respect the HTML, and that\n     * HTML won't respect Z-index settings.\n     *\n     * @type      {boolean}\n     * @default   false\n     * @since     1.3\n     * @product   highstock\n     * @apioption plotOptions.flags.useHTML\n     */\n    /**\n     * Fixed width of the flag's shape. By default, width is autocalculated\n     * according to the flag's title.\n     *\n     * @sample {highstock} stock/demo/flags-shapes/\n     *         Flags with fixed width\n     *\n     * @type      {number}\n     * @product   highstock\n     * @apioption plotOptions.flags.width\n     */\n    /**\n     * Fixed height of the flag's shape. By default, height is\n     * autocalculated according to the flag's title.\n     *\n     * @type      {number}\n     * @product   highstock\n     * @apioption plotOptions.flags.height\n     */\n    /**\n     * The fill color for the flags.\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @product highstock\n     */\n    fillColor: \"#ffffff\" /* Palette.backgroundColor */,\n    /**\n     * The color of the line/border of the flag.\n     *\n     * In styled mode, the stroke is set in the\n     * `.highcharts-flag-series.highcharts-point` rule.\n     *\n     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @default   #000000\n     * @product   highstock\n     * @apioption plotOptions.flags.lineColor\n     */\n    /**\n     * The pixel width of the flag's line/border.\n     *\n     * @product highstock\n     */\n    lineWidth: 1,\n    states: {\n        /**\n         * @extends plotOptions.column.states.hover\n         * @product highstock\n         */\n        hover: {\n            /**\n             * The color of the line/border of the flag.\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product highstock\n             */\n            lineColor: \"#000000\" /* Palette.neutralColor100 */,\n            /**\n             * The fill or background color of the flag.\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product highstock\n             */\n            fillColor: \"#ccd3ff\" /* Palette.highlightColor20 */\n        }\n    },\n    /**\n     * The text styles of the flag.\n     *\n     * In styled mode, the styles are set in the\n     * `.highcharts-flag-series .highcharts-point` rule.\n     *\n     * @type    {Highcharts.CSSObject}\n     * @default {\"fontSize\": \"11px\", \"fontWeight\": \"bold\"}\n     * @product highstock\n     */\n    style: {\n        /** @ignore-option */\n        fontSize: '0.7em',\n        /** @ignore-option */\n        fontWeight: 'bold'\n    }\n};\n/**\n * A `flags` series. If the [type](#series.flags.type) option is not\n * specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.flags\n * @excluding animation, borderColor, borderRadius, borderWidth, colorByPoint,\n *            connectNulls, cropThreshold, dashStyle, dataGrouping, dataParser,\n *            dataURL, gapSize, gapUnit, linecap, lineWidth, marker,\n *            pointPadding, pointWidth, step, turboThreshold, useOhlcData\n * @product   highstock\n * @apioption series.flags\n */\n/**\n * An array of data points for the series. For the `flags` series type,\n * points can be given in the following ways:\n *\n * 1. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.flags.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        title: \"A\",\n *        text: \"First event\"\n *    }, {\n *        x: 1,\n *        title: \"B\",\n *        text: \"Second event\"\n *    }]\n *    ```\n *\n * @type      {Array<*>}\n * @extends   series.line.data\n * @excluding dataLabels, marker, name, y\n * @product   highstock\n * @apioption series.flags.data\n */\n/**\n * The fill color of an individual flag. By default it inherits from\n * the series color.\n *\n * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n * @product   highstock\n * @apioption series.flags.data.fillColor\n */\n/**\n * The longer text to be shown in the flag's tooltip.\n *\n * @type      {string}\n * @product   highstock\n * @apioption series.flags.data.text\n */\n/**\n * The short text to be shown on the flag.\n *\n * @type      {string}\n * @product   highstock\n * @apioption series.flags.data.title\n */\n''; // Keeps doclets above in transpiled file\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Flags_FlagsSeriesDefaults = (FlagsSeriesDefaults);\n\n;// ./code/es-modules/Series/Flags/FlagsSymbols.js\n/* *\n *\n *  Imports\n *\n * */\n\n/* *\n *\n *  Composition\n *\n * */\nvar FlagsSymbols;\n(function (FlagsSymbols) {\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    const modifiedMembers = [];\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * @private\n     */\n    function compose(SVGRendererClass) {\n        if (modifiedMembers.indexOf(SVGRendererClass) === -1) {\n            modifiedMembers.push(SVGRendererClass);\n            const symbols = SVGRendererClass.prototype.symbols;\n            symbols.flag = flag;\n            createPinSymbol(symbols, 'circle');\n            createPinSymbol(symbols, 'square');\n        }\n        const RendererClass = external_highcharts_src_js_default_RendererRegistry_default().getRendererType();\n        // The symbol callbacks are generated on the SVGRenderer object in all\n        // browsers.\n        if (modifiedMembers.indexOf(RendererClass)) {\n            modifiedMembers.push(RendererClass);\n        }\n    }\n    FlagsSymbols.compose = compose;\n    /**\n     * Create the flag icon with anchor.\n     * @private\n     */\n    function flag(x, y, w, h, options) {\n        const anchorX = (options && options.anchorX) || x, anchorY = (options && options.anchorY) || y;\n        // To do: unwanted any cast because symbols.circle has wrong type, it\n        // actually returns an SVGPathArray\n        const path = this.circle(anchorX - 1, anchorY - 1, 2, 2);\n        path.push(['M', anchorX, anchorY], ['L', x, y + h], ['L', x, y], ['L', x + w, y], ['L', x + w, y + h], ['L', x, y + h], ['Z']);\n        return path;\n    }\n    /**\n     * Create the circlepin and squarepin icons with anchor.\n     * @private\n     */\n    function createPinSymbol(symbols, shape) {\n        symbols[(shape + 'pin')] = function (x, y, w, h, options) {\n            const anchorX = options && options.anchorX, anchorY = options && options.anchorY;\n            let path;\n            // For single-letter flags, make sure circular flags are not taller\n            // than their width\n            if (shape === 'circle' && h > w) {\n                x -= Math.round((h - w) / 2);\n                w = h;\n            }\n            path = (symbols[shape])(x, y, w, h, options);\n            if (anchorX && anchorY) {\n                /**\n                 * If the label is below the anchor, draw the connecting line\n                 * from the top edge of the label, otherwise start drawing from\n                 * the bottom edge\n                 */\n                let labelX = anchorX;\n                if (shape === 'circle') {\n                    labelX = x + w / 2;\n                }\n                else {\n                    const startSeg = path[0];\n                    const endSeg = path[1];\n                    if (startSeg[0] === 'M' && endSeg[0] === 'L') {\n                        labelX = (startSeg[1] + endSeg[1]) / 2;\n                    }\n                }\n                const labelY = (y > anchorY) ? y : y + h;\n                path.push([\n                    'M',\n                    labelX,\n                    labelY\n                ], [\n                    'L',\n                    anchorX,\n                    anchorY\n                ]);\n                path = path.concat(symbols.circle(anchorX - 1, anchorY - 1, 2, 2));\n            }\n            return path;\n        };\n    }\n})(FlagsSymbols || (FlagsSymbols = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Flags_FlagsSymbols = (FlagsSymbols);\n\n;// external [\"../highcharts.js\",\"default\",\"Series\",\"types\",\"column\"]\nconst external_highcharts_src_js_default_Series_types_column_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Series.types.column;\nvar external_highcharts_src_js_default_Series_types_column_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Series_types_column_namespaceObject);\n;// ./code/es-modules/Series/OnSeriesComposition.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { composed: OnSeriesComposition_composed } = (external_highcharts_src_js_default_default());\nconst { prototype: columnProto } = (external_highcharts_src_js_default_Series_types_column_default());\n\nconst { prototype: seriesProto } = (external_highcharts_src_js_default_Series_default());\n\nconst { defined: OnSeriesComposition_defined, pushUnique: OnSeriesComposition_pushUnique, stableSort } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Composition\n *\n * */\nvar OnSeriesComposition;\n(function (OnSeriesComposition) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    function compose(SeriesClass) {\n        if (OnSeriesComposition_pushUnique(OnSeriesComposition_composed, 'OnSeries')) {\n            const seriesProto = SeriesClass.prototype;\n            seriesProto.getPlotBox = getPlotBox;\n            seriesProto.translate = translate;\n        }\n        return SeriesClass;\n    }\n    OnSeriesComposition.compose = compose;\n    /**\n     * Override getPlotBox. If the onSeries option is valid, return the plot box\n     * of the onSeries, otherwise proceed as usual.\n     *\n     * @private\n     */\n    function getPlotBox(name) {\n        return seriesProto.getPlotBox.call((this.options.onSeries &&\n            this.chart.get(this.options.onSeries)) || this, name);\n    }\n    OnSeriesComposition.getPlotBox = getPlotBox;\n    /**\n     * Extend the translate method by placing the point on the related series\n     *\n     * @private\n     */\n    function translate() {\n        columnProto.translate.apply(this);\n        const series = this, options = series.options, chart = series.chart, points = series.points, optionsOnSeries = options.onSeries, onSeries = (optionsOnSeries &&\n            chart.get(optionsOnSeries)), step = onSeries && onSeries.options.step, onData = (onSeries && onSeries.points), inverted = chart.inverted, xAxis = series.xAxis, yAxis = series.yAxis;\n        let cursor = points.length - 1, point, lastPoint, onKey = options.onKey || 'y', i = onData && onData.length, xOffset = 0, leftPoint, lastX, rightPoint, currentDataGrouping, distanceRatio;\n        // Relate to a master series\n        if (onSeries && onSeries.visible && i) {\n            xOffset = (onSeries.pointXOffset || 0) + (onSeries.barW || 0) / 2;\n            currentDataGrouping = onSeries.currentDataGrouping;\n            lastX = (onData[i - 1].x +\n                (currentDataGrouping ? currentDataGrouping.totalRange : 0)); // #2374\n            // sort the data points\n            stableSort(points, (a, b) => (a.x - b.x));\n            onKey = 'plot' + onKey[0].toUpperCase() + onKey.substr(1);\n            while (i-- && points[cursor]) {\n                leftPoint = onData[i];\n                point = points[cursor];\n                point.y = leftPoint.y;\n                if (leftPoint.x <= point.x &&\n                    typeof leftPoint[onKey] !== 'undefined') {\n                    if (point.x <= lastX) { // #803\n                        point.plotY = leftPoint[onKey];\n                        // Interpolate between points, #666\n                        if (leftPoint.x < point.x &&\n                            !step) {\n                            rightPoint = onData[i + 1];\n                            if (rightPoint &&\n                                typeof rightPoint[onKey] !== 'undefined') {\n                                // If the series is spline, calculate Y of the\n                                // point on the bezier line. #19264\n                                if (OnSeriesComposition_defined(point.plotX) &&\n                                    onSeries.is('spline')) {\n                                    leftPoint = leftPoint;\n                                    rightPoint = rightPoint;\n                                    const p0 = [\n                                        leftPoint.plotX || 0,\n                                        leftPoint.plotY || 0\n                                    ], p3 = [\n                                        rightPoint.plotX || 0,\n                                        rightPoint.plotY || 0\n                                    ], p1 = (leftPoint.controlPoints?.high ||\n                                        p0), p2 = (rightPoint.controlPoints?.low ||\n                                        p3), pixelThreshold = 0.25, maxIterations = 100, calculateCoord = (t, key) => (\n                                    // The parametric formula for the\n                                    // cubic Bezier curve.\n                                    Math.pow(1 - t, 3) * p0[key] +\n                                        3 * (1 - t) * (1 - t) * t *\n                                            p1[key] + 3 * (1 - t) * t * t *\n                                        p2[key] + t * t * t * p3[key]);\n                                    let tMin = 0, tMax = 1, t;\n                                    // Find `t` of the parametric function of\n                                    // the bezier curve for the given `plotX`.\n                                    for (let i = 0; i < maxIterations; i++) {\n                                        const tMid = (tMin + tMax) / 2;\n                                        const xMid = calculateCoord(tMid, 0);\n                                        if (xMid === null) {\n                                            break;\n                                        }\n                                        if (Math.abs(xMid - point.plotX) < pixelThreshold) {\n                                            t = tMid;\n                                            break;\n                                        }\n                                        if (xMid < point.plotX) {\n                                            tMin = tMid;\n                                        }\n                                        else {\n                                            tMax = tMid;\n                                        }\n                                    }\n                                    if (OnSeriesComposition_defined(t)) {\n                                        point.plotY =\n                                            calculateCoord(t, 1);\n                                        point.y =\n                                            yAxis.toValue(point.plotY, true);\n                                    }\n                                }\n                                else {\n                                    // The distance ratio, between 0 and 1\n                                    distanceRatio =\n                                        (point.x - leftPoint.x) /\n                                            (rightPoint.x - leftPoint.x);\n                                    point.plotY +=\n                                        distanceRatio *\n                                            // The plotY distance\n                                            (rightPoint[onKey] - leftPoint[onKey]);\n                                    point.y +=\n                                        distanceRatio *\n                                            (rightPoint.y - leftPoint.y);\n                                }\n                            }\n                        }\n                    }\n                    cursor--;\n                    i++; // Check again for points in the same x position\n                    if (cursor < 0) {\n                        break;\n                    }\n                }\n            }\n        }\n        // Add plotY position and handle stacking\n        points.forEach((point, i) => {\n            let stackIndex;\n            point.plotX += xOffset; // #2049\n            // Undefined plotY means the point is either on axis, outside series\n            // range or hidden series. If the series is outside the range of the\n            // x axis it should fall through with an undefined plotY, but then\n            // we must remove the shapeArgs (#847). For inverted charts, we need\n            // to calculate position anyway, because series.invertGroups is not\n            // defined\n            if (typeof point.plotY === 'undefined' || inverted) {\n                if (point.plotX >= 0 &&\n                    point.plotX <= xAxis.len) {\n                    // We're inside xAxis range\n                    if (inverted) {\n                        point.plotY = xAxis.translate(point.x, 0, 1, 0, 1);\n                        point.plotX = OnSeriesComposition_defined(point.y) ?\n                            yAxis.translate(point.y, 0, 0, 0, 1) :\n                            0;\n                    }\n                    else {\n                        point.plotY = (xAxis.opposite ? 0 : series.yAxis.len) +\n                            xAxis.offset; // For the windbarb demo\n                    }\n                }\n                else {\n                    point.shapeArgs = {}; // 847\n                }\n            }\n            // If multiple flags appear at the same x, order them into a stack\n            lastPoint = points[i - 1];\n            if (lastPoint && lastPoint.plotX === point.plotX) {\n                if (typeof lastPoint.stackIndex === 'undefined') {\n                    lastPoint.stackIndex = 0;\n                }\n                stackIndex = lastPoint.stackIndex + 1;\n            }\n            point.stackIndex = stackIndex; // #3639\n        });\n        this.onSeries = onSeries;\n    }\n    OnSeriesComposition.translate = translate;\n})(OnSeriesComposition || (OnSeriesComposition = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Series_OnSeriesComposition = (OnSeriesComposition);\n\n;// ./code/es-modules/Series/Flags/FlagsSeries.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\n\nconst { noop } = (external_highcharts_src_js_default_default());\n\n\nconst { distribute } = (external_highcharts_src_js_default_default());\n\nconst { series: Series, seriesTypes: { column: FlagsSeries_ColumnSeries } } = (external_highcharts_src_js_default_SeriesRegistry_default());\n\n\nconst { addEvent: FlagsSeries_addEvent, defined: FlagsSeries_defined, extend: FlagsSeries_extend, isNumber: FlagsSeries_isNumber, merge: FlagsSeries_merge, objectEach: FlagsSeries_objectEach, wrap } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Classes\n *\n * */\n/**\n * The Flags series.\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.flags\n *\n * @augments Highcharts.Series\n */\nclass FlagsSeries extends FlagsSeries_ColumnSeries {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Disable animation, but keep clipping (#8546).\n     * @private\n     */\n    animate(init) {\n        if (init) {\n            this.setClip();\n        }\n    }\n    /**\n     * Draw the markers.\n     * @private\n     */\n    drawPoints() {\n        const series = this, points = series.points, chart = series.chart, renderer = chart.renderer, inverted = chart.inverted, options = series.options, optionsY = options.y, yAxis = series.yAxis, boxesMap = {}, boxes = [], borderRadius = FlagsSeries_isNumber(options.borderRadius) ?\n            options.borderRadius : 0;\n        let plotX, plotY, shape, i, point, graphic, stackIndex, anchorY, attribs, outsideRight, centered;\n        i = points.length;\n        while (i--) {\n            point = points[i];\n            outsideRight =\n                (inverted ? point.plotY : point.plotX) >\n                    series.xAxis.len;\n            plotX = point.plotX;\n            stackIndex = point.stackIndex;\n            shape = point.options.shape || options.shape;\n            plotY = point.plotY;\n            if (typeof plotY !== 'undefined') {\n                plotY = point.plotY + optionsY -\n                    (typeof stackIndex !== 'undefined' &&\n                        (stackIndex * options.stackDistance));\n            }\n            // Skip connectors for higher level stacked points\n            point.anchorX = stackIndex ? void 0 : point.plotX;\n            anchorY = stackIndex ? void 0 : point.plotY;\n            centered = shape !== 'flag';\n            graphic = point.graphic;\n            // Only draw the point if y is defined and the flag is within\n            // the visible area\n            if (typeof plotY !== 'undefined' &&\n                plotX >= 0 &&\n                !outsideRight) {\n                // #15384\n                if (graphic && point.hasNewShapeType()) {\n                    graphic = graphic.destroy();\n                }\n                // Create the flag\n                if (!graphic) {\n                    graphic = point.graphic = renderer.label('', 0, void 0, shape, void 0, void 0, options.useHTML)\n                        .addClass('highcharts-point')\n                        .add(series.markerGroup);\n                    // Add reference to the point for tracker (#6303)\n                    if (point.graphic.div) {\n                        point.graphic.div.point = point;\n                    }\n                    graphic.isNew = true;\n                }\n                graphic.attr({\n                    align: centered ? 'center' : 'left',\n                    width: options.width,\n                    height: options.height,\n                    'text-align': options.textAlign,\n                    r: borderRadius\n                });\n                if (!chart.styledMode) {\n                    graphic\n                        .attr(series.pointAttribs(point))\n                        .css(FlagsSeries_merge(options.style, point.style))\n                        .shadow(options.shadow);\n                }\n                if (plotX > 0) { // #3119\n                    plotX -= graphic.strokeWidth() % 2; // #4285\n                }\n                // Plant the flag\n                attribs = {\n                    y: plotY,\n                    anchorY: anchorY\n                };\n                if (options.allowOverlapX) {\n                    attribs.x = plotX;\n                    attribs.anchorX = point.anchorX;\n                }\n                graphic.attr({\n                    // Allow empty string as a flag title (#20549)\n                    text: point.options.title ?? options.title ?? 'A'\n                })[graphic.isNew ? 'attr' : 'animate'](attribs);\n                // Rig for the distribute function\n                if (!options.allowOverlapX) {\n                    if (!boxesMap[point.plotX]) {\n                        boxesMap[point.plotX] = {\n                            align: centered ? 0.5 : 0,\n                            size: graphic.width || 0,\n                            target: plotX,\n                            anchorX: plotX\n                        };\n                    }\n                    else {\n                        boxesMap[point.plotX].size = Math.max(boxesMap[point.plotX].size, graphic.width || 0);\n                    }\n                }\n                // Set the tooltip anchor position\n                point.tooltipPos = [\n                    plotX,\n                    plotY + yAxis.pos - chart.plotTop\n                ]; // #6327\n            }\n            else if (graphic) {\n                point.graphic = graphic.destroy();\n            }\n        }\n        // Handle X-dimension overlapping\n        if (!options.allowOverlapX) {\n            let maxDistance = 100;\n            FlagsSeries_objectEach(boxesMap, function (box) {\n                box.plotX = box.anchorX;\n                boxes.push(box);\n                maxDistance = Math.max(box.size, maxDistance);\n            });\n            // If necessary (for overlapping or long labels)  distribute it\n            // depending on the label width or a hardcoded value, #16041.\n            distribute(boxes, inverted ? yAxis.len : this.xAxis.len, maxDistance);\n            for (const point of points) {\n                const plotX = point.plotX, graphic = point.graphic, box = graphic && boxesMap[plotX];\n                if (box && graphic) {\n                    // Hide flag when its box position is not specified\n                    // (#8573, #9299)\n                    if (!FlagsSeries_defined(box.pos)) {\n                        graphic.hide().isNew = true;\n                    }\n                    else {\n                        graphic[graphic.isNew ? 'attr' : 'animate']({\n                            x: box.pos + (box.align || 0) * box.size,\n                            anchorX: point.anchorX\n                        }).show().isNew = false;\n                    }\n                }\n            }\n        }\n        // Can be a mix of SVG and HTML and we need events for both (#6303)\n        if (options.useHTML && series.markerGroup) {\n            wrap(series.markerGroup, 'on', function (proceed) {\n                return external_highcharts_src_js_default_SVGElement_default().prototype.on.apply(\n                // For HTML\n                // eslint-disable-next-line no-invalid-this\n                proceed.apply(this, [].slice.call(arguments, 1)), \n                // And for SVG\n                [].slice.call(arguments, 1));\n            });\n        }\n    }\n    /**\n     * Extend the column trackers with listeners to expand and contract\n     * stacks.\n     * @private\n     */\n    drawTracker() {\n        const series = this, points = series.points;\n        super.drawTracker();\n        /* *\n        * Bring each stacked flag up on mouse over, this allows readability\n        * of vertically stacked elements as well as tight points on the x\n        * axis. #1924.\n        */\n        for (const point of points) {\n            const graphic = point.graphic;\n            if (graphic) {\n                if (point.unbindMouseOver) {\n                    point.unbindMouseOver();\n                }\n                point.unbindMouseOver = FlagsSeries_addEvent(graphic.element, 'mouseover', function () {\n                    // Raise this point\n                    if (point.stackIndex > 0 &&\n                        !point.raised) {\n                        point._y = graphic.y;\n                        graphic.attr({\n                            y: point._y - 8\n                        });\n                        point.raised = true;\n                    }\n                    // Revert other raised points\n                    for (const otherPoint of points) {\n                        if (otherPoint !== point &&\n                            otherPoint.raised &&\n                            otherPoint.graphic) {\n                            otherPoint.graphic.attr({\n                                y: otherPoint._y\n                            });\n                            otherPoint.raised = false;\n                        }\n                    }\n                });\n            }\n        }\n    }\n    /**\n     * Get presentational attributes\n     * @private\n     */\n    pointAttribs(point, state) {\n        const options = this.options, color = (point && point.color) || this.color;\n        let lineColor = options.lineColor, lineWidth = (point && point.lineWidth), fill = (point && point.fillColor) || options.fillColor;\n        if (state) {\n            fill = options.states[state].fillColor;\n            lineColor = options.states[state].lineColor;\n            lineWidth = options.states[state].lineWidth;\n        }\n        return {\n            fill: fill || color,\n            stroke: lineColor || color,\n            'stroke-width': lineWidth || options.lineWidth || 0\n        };\n    }\n    /**\n     * @private\n     */\n    setClip() {\n        Series.prototype.setClip.apply(this, arguments);\n        if (this.options.clip !== false &&\n            this.sharedClipKey &&\n            this.markerGroup) {\n            this.markerGroup.clip(this.chart.sharedClips[this.sharedClipKey]);\n        }\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nFlagsSeries.compose = Flags_FlagsSymbols.compose;\nFlagsSeries.defaultOptions = FlagsSeries_merge(FlagsSeries_ColumnSeries.defaultOptions, Flags_FlagsSeriesDefaults);\nSeries_OnSeriesComposition.compose(FlagsSeries);\nFlagsSeries_extend(FlagsSeries.prototype, {\n    allowDG: false,\n    forceCrop: true,\n    invertible: false, // Flags series group should not be invertible (#14063).\n    noSharedTooltip: true,\n    pointClass: Flags_FlagsPoint,\n    sorted: false,\n    takeOrdinalPosition: false, // #1074\n    trackerGroups: ['markerGroup'],\n    buildKDTree: noop,\n    /**\n     * Inherit the initialization from base Series.\n     * @private\n     */\n    init: Series.prototype.init\n});\nexternal_highcharts_src_js_default_SeriesRegistry_default().registerSeriesType('flags', FlagsSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Flags_FlagsSeries = (FlagsSeries);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * @typedef {\"circlepin\"|\"flag\"|\"squarepin\"} Highcharts.FlagsShapeValue\n */\n''; // Detach doclets above\n\n;// external \"./broken-axis.js\"\nvar x = (y) => {\n\tvar x = {}; __webpack_require__.d(x,\n    \ty); return x\n    } \n    var y = (x) => (() => (x))\n    const external_broken_axis_src_js_namespaceObject = x({  });\n;// external \"./datagrouping.js\"\nvar external_datagrouping_src_js_x = (y) => {\n\tvar x = {}; __webpack_require__.d(x,\n    \ty); return x\n    } \n    var external_datagrouping_src_js_y = (x) => (() => (x))\n    const external_datagrouping_src_js_namespaceObject = external_datagrouping_src_js_x({  });\n;// external \"./mouse-wheel-zoom.js\"\nvar external_mouse_wheel_zoom_src_js_x = (y) => {\n\tvar x = {}; __webpack_require__.d(x,\n    \ty); return x\n    } \n    var external_mouse_wheel_zoom_src_js_y = (x) => (() => (x))\n    const external_mouse_wheel_zoom_src_js_namespaceObject = external_mouse_wheel_zoom_src_js_x({  });\n;// ./code/es-modules/masters/modules/stock.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst G = (external_highcharts_src_js_default_default());\n// Classes\nG.Navigator = G.Navigator || Navigator_Navigator;\nG.OrdinalAxis = G.OrdinalAxis || Axis_OrdinalAxis;\nG.RangeSelector = G.RangeSelector || RangeSelector_RangeSelector;\nG.Scrollbar = G.Scrollbar || Scrollbar_Scrollbar;\n// Functions\nG.stockChart = G.stockChart || Chart_StockChart.stockChart;\nG.StockChart = G.StockChart || G.stockChart;\nG.extend(G.StockChart, Chart_StockChart);\n// Compositions\nSeries_DataModifyComposition.compose(G.Series, G.Axis, G.Point);\nFlags_FlagsSeries.compose(G.Renderer);\nOHLC_OHLCSeries.compose(G.Series);\nG.Navigator.compose(G.Chart, G.Axis, G.Series);\nG.OrdinalAxis.compose(G.Axis, G.Series, G.Chart);\nG.RangeSelector.compose(G.Axis, G.Chart);\nG.Scrollbar.compose(G.Axis);\nG.StockChart.compose(G.Chart, G.Axis, G.Series, G.SVGRenderer);\n/* harmony default export */ const stock_src = ((external_highcharts_src_js_default_default()));\n\nexport { stock_src as default };\n"],"names":["NavigatorConstructor","RangeSelectorConstructor","__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__","ColumnUtils","DataModifyComposition","ScrollbarAxis","OrdinalAxis","FlagsSymbols","OnSeriesComposition","__webpack_require__","n","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","external_highcharts_src_js_default_namespaceObject","external_highcharts_src_js_default_default","external_highcharts_src_js_default_Axis_namespaceObject","Axis","external_highcharts_src_js_default_Axis_default","external_highcharts_src_js_default_Point_namespaceObject","Point","external_highcharts_src_js_default_Point_default","external_highcharts_src_js_default_Series_namespaceObject","Series","external_highcharts_src_js_default_Series_default","tooltipFormatter","pointTooltipFormatter","addEvent","arrayMax","arrayMin","correctFloat","defined","isArray","isNumber","isString","pick","setModifier","mode","modeState","redraw","isXAxis","series","forEach","setCompare","setCumulative","chart","pointFormat","point","numberFormatter","replace","value","tooltipOptions","changeDecimals","change","cumulativeSum","apply","afterInit","dataModify","compare","options","cumulative","Additions","initCompare","initCumulative","afterGetExtremes","e","dataExtremes","activeYData","extremes","modifyValue","dataMin","dataMax","length","getCumulativeExtremes","seriesSetCompare","userOptions","update","points","afterProcessData","compareColumn","getColumn","pointArrayMap","pointValKey","xAxis","processedXData","dataTable","rowCount","compareStart","i","compareValue","min","axisSetCompare","seriesSetCumulative","axisSetCumulative","compose","SeriesClass","AxisClass","PointClass","axisProto","pointProto","seriesProto","constructor","cumulativeDataMin","Infinity","cumulativeDataMax","reduce","prev","cur","sum","Math","max","index","compareBase","prevPoint","cumulativeStart","withinRange","x","Series_DataModifyComposition","isTouchDevice","ChartNavigatorComposition_addEvent","merge","ChartNavigatorComposition_pick","composedMembers","onChartAfterAddSeries","navigator","setBaseSeries","onChartAfterSetChartSize","legendOptions","yAxis","legend","scrollbarHeight","scrollButtonSize","inverted","left","opposite","chartWidth","height","spacing","top","plotTop","plotLeft","navigatorOptions","chartHeight","scrollbar","margin","rangeSelector","extraBottomMargin","getHeight","verticalAlign","layout","enabled","floating","legendHeight","titleOffset","setAxisSize","onChartAfterUpdate","event","scroller","animation","onChartBeforeRender","onChartBeforeShowResetZoom","chartOptions","zooming","type","pinchType","onChartCallback","getExtremes","render","onChartUpdate","scrollbarOptions","ChartClass","NavigatorClass","pushUnique","chartProto","callbacks","push","NavigatorAxisComposition_isTouchDevice","NavigatorAxisComposition_addEvent","NavigatorAxisComposition_correctFloat","NavigatorAxisComposition_defined","NavigatorAxisComposition_isNumber","NavigatorAxisComposition_pick","onAxisInit","axis","navigatorAxis","NavigatorAxisAdditions","onAxisSetExtremes","zoomed","zoomType","trigger","range","previousZoom","preventDefault","keepProps","includes","destroy","toFixedRange","pxMin","pxMax","fixedMin","fixedMax","halfPointRange","pointRange","newMin","translate","horiz","newMax","external_highcharts_src_js_default_Color_namespaceObject","Color","external_highcharts_src_js_default_Color_default","external_highcharts_src_js_default_SeriesRegistry_namespaceObject","SeriesRegistry","external_highcharts_src_js_default_SeriesRegistry_default","parse","color","seriesTypes","NavigatorDefaults","maskInside","handles","width","borderRadius","symbols","lineWidth","backgroundColor","borderColor","maskFill","setOpacity","outlineColor","outlineWidth","areaspline","fillOpacity","sonification","dataGrouping","approximation","groupPixelWidth","firstAnchor","anchor","lastAnchor","units","dataLabels","zIndex","id","className","lineColor","marker","threshold","tickLength","gridLineColor","gridLineWidth","tickPixelInterval","labels","align","style","fontSize","opacity","textOutline","y","crosshair","startOnTick","endOnTick","minPadding","maxPadding","title","text","tickWidth","Symbols_defined","Symbols_isNumber","Symbols_pick","relativeLength","Navigator_NavigatorSymbols","_x","_y","w","h","halfWidth","r","markerPosition","roundedRect","external_highcharts_src_js_default_RendererRegistry_namespaceObject","RendererRegistry","external_highcharts_src_js_default_RendererRegistry_default","StockUtilities_defined","Utilities_StockUtilities","setFixedRange","fixedRange","setOptions","composed","getRendererType","NavigatorComposition_setFixedRange","NavigatorComposition_addEvent","extend","onSeriesAfterUpdate","isInternal","NavigatorAxisComposition","ScrollbarAxis_composed","ScrollbarAxis_addEvent","ScrollbarAxis_defined","ScrollbarAxis_pick","ScrollbarAxis_pushUnique","Scrollbar","axisMin","axisMax","scrollMin","scrollMax","onAxisAfterGetOffset","scrollbarsOffsets","axisOffset","size","onAxisAfterInit","vertical","renderer","to","from","unitedMin","unitedMax","reversed","shouldUpdateExtremes","DOMType","animate","setExtremes","setRange","onAxisAfterRender","offsetsIndex","offset","axisTitleMargin","axisMargin","position","xPosition","isNaN","interval","ScrollbarClass","Axis_ScrollbarAxis","Scrollbar_ScrollbarDefaults","barBorderRadius","buttonBorderRadius","buttonsEnabled","liveRedraw","minWidth","step","barBackgroundColor","barBorderWidth","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","buttonBorderWidth","rifleColor","trackBackgroundColor","trackBorderColor","trackBorderRadius","trackBorderWidth","defaultOptions","Scrollbar_addEvent","Scrollbar_correctFloat","crisp","Scrollbar_defined","destroyObjectProperties","fireEvent","Scrollbar_merge","Scrollbar_pick","removeEvent","swapXY","path","seg","temp","len","_events","chartX","chartY","scrollbarButtons","scrollbarLeft","scrollbarStrokeWidth","scrollbarTop","init","addEvents","buttonsOrder","buttons","bar","scrollbarGroup","element","track","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","buttonToMinClick","buttonToMaxClick","trackClick","ownerDocument","args","updatePosition","DOMEvent","cursorToScrollbarPosition","normalizedEvent","minWidthDifference","calculatedWidth","xOffset","barWidth","yOffset","removeEvents","drawScrollbarButton","group","g","add","rect","addClass","styledMode","attr","stroke","fill","strokeWidth","arrow","pointer","normalize","mousePosition","initPositions","grabbedCenter","direction","touches","chartPosition","hasDragged","method","rendered","show","translateX","translateY","hide","scrollbarRifles","fromPX","newSize","fullWidth","toPX","ceil","newPos","floor","newRiflesPos","showFull","eventType","svg","boosted","external_highcharts_src_js_default_SVGRenderer_namespaceObject","SVGRenderer","external_highcharts_src_js_default_SVGRenderer_default","Navigator_defaultOptions","Navigator_isTouchDevice","Navigator_addEvent","clamp","Navigator_correctFloat","Navigator_defined","Navigator_destroyObjectProperties","erase","Navigator_extend","find","Navigator_fireEvent","Navigator_isArray","Navigator_isNumber","Navigator_merge","Navigator_pick","Navigator_removeEvent","splat","numExt","extreme","numbers","filter","Navigator","Navigator_ChartNavigatorComposition","Navigator_NavigatorComposition","isDirty","drawHandle","verb","round","parseInt","drawOutline","zoomedMin","zoomedMax","outline","halfOutline","outlineCorrection","navigatorSize","navigatorTop","lineTop","lineBtm","verticalMin","drawMasks","navigatorHeight","shades","shade","renderElements","mouseCursor","cursor","navigatorGroup","visibility","hasMask","css","handlesOptions","symbolName","symbolUrl","isImg","symbolFn","symbol","addMouseEvents","rotation","rotationOriginX","rotationOriginY","invertedUpdate","setOpposite","navigatorEnabled","adaptToUpdatedData","baseSeries","updatedDataHandler","eventsToUnbind","offsets","getXAxisOffsets","scrollbarXAxis","fake","minRange","maxRange","navigatorWidth","plotWidth","plotHeight","toPixels","abs","toValue","currentRange","grabbedLeft","grabbedRight","fixedWidth","container","onMouseMove","onMouseUp","getPartsEvents","renderTo","concat","modifyNavigatorAxisExtremes","eventName","events","name","navigatorItem","shadesMousedown","navigatorPosition","ext","dragOffset","reversedExtremes","getUnionExtremes","eventArguments","handlesMousedown","baseXAxis","reverse","otherHandlePos","fixedExtreme","pageX","setTimeout","unionExtremes","triggerOp","keys","unbind","removeBaseSeriesEvents","modifyBaseAxisExtremes","scrollbarEnabled","xAxisIndex","yAxisIndex","baseXaxis","isDirtyBox","breaks","ordinal","overscroll","keepOrdinalPadding","zoomEnabled","alignTicks","data","updateNavigatorSeries","unbindRedraw","scrollTrackWidth","valueRange","addBaseSeriesEvents","addChartEvents","Boolean","returnFalseOnNoBaseSeries","ret","baseAxis","time","navAxis","navAxisOptions","baseAxisOptions","baseSeriesOptions","s","showInNavigator","navSeriesMixin","enableMouseTracking","linkedTo","padXAxis","showInLegend","stacking","states","inactive","navigatorSeries","navSeries","base","indexOf","baseOptions","mergedNavSeriesOptions","chartNavigatorSeriesOptions","baseNavigatorOptions","linkedNavSeries","userNavOptions","visible","plotOptions","navigatorSeriesData","hasNavigatorData","slice","initSeries","setSortedData","userSeriesOptions","colors","setVisible","remove","getBaseSeriesMin","currentSeriesMin","baseExtremes","baseMin","baseMax","baseDataMin","baseDataMax","stickToMin","stickToMax","convertOverscroll","hasSetExtremes","eventArgs","xData","Number","MAX_VALUE","userMin","userMax","shouldStickToMax","shouldStickToMin","pointStart","setData","xDataMin","marginName","axes","coll","setLength","column","asSubarray","Array","splice","start","deleteCount","removedAsSubarray","items","removed","array","Constructor","getPrototypeOf","result","set","subarray","DataTableCore_fireEvent","objectEach","uniqueKey","Data_DataTableCore","autoId","columns","modified","versionTag","columnName","applyRowCount","deleteRows","rowIndex","asReference","getColumns","columnNames","getRow","map","setColumn","eventDetail","setColumns","silent","setRow","row","insert","indexRowCount","cellValue","addColumns","OrdinalAxis_addEvent","OrdinalAxis_correctFloat","OrdinalAxis_defined","error","OrdinalAxis_isNumber","OrdinalAxis_pick","timeUnits","OrdinalAxis_isString","getTimeTicks","normalizedInterval","startOfWeek","positions","closestDistance","findHigherRanks","higherRanks","tickPixelIntervalOption","segmentStarts","end","segmentPositions","hasCrossedHigherRank","info","outsideMax","groupPositions","lastGroupPosition","arguments","posLength","shift","unitRange","hour","dateFormat","translatedArr","distances","itemToRemove","translated","lastTranslated","medianDistance","distance","sort","b","index2val","ordinalPositions","lin2val","val","localMin","old","localA","transA","getExtendedPositions","pixelVal","minPixelPadding","getIndexOfPoint","mantissa","leftNeighbour","rightNeighbour","getIndexInArray","findIndexOf","percent","onAxisFoundExtremes","originalOrdinalRange","onAxisAfterSetScale","isOrdinal","onAxisInitialAxisTranslation","beforeSetTickPositions","tickInterval","postProcessTickInterval","onChartPan","originalEvent","panning","runBase","trimmedRange","mouseDownX","hoverPoints","closestPointRange","overscrollPointsRange","movedUnits","translationSlope","slope","extendedOrdinalPositions","extendedAxis","val2lin","setState","test","onSeriesUpdatedData","toIndex","ordinalIndex","ordinalLength","originalPositionsReference","diff","approximateIndexOffset","ordinal2lin","hasBreaks","brokenAxis","uniqueOrdinalPositions","dist","minIndex","maxIndex","useOrdinal","adjustOrdinalExtremesPoints","isBoosted","distanceBetweenPoint","reserveSpace","takeOrdinalPosition","unshift","pop","forceOrdinal","getOverscrollPositions","groupIntervalFactor","sortedArray","indirectSearch","middle","withOverscroll","k","grouping","currentDataGrouping","count","unitName","fakeAxis","fakeSeries","applyGrouping","getGroupPixelWidth","getGroupIntervalFactor","destroyGroupedData","noop","getProcessedData","forced","processData","hasExtremesChanged","basePointRange","xMin","xMax","median","ordinalArray","minX","indexOfMin","extraRange","ordinalSlope","calculateOverscroll","overscrollPercentage","isFullRange","overscrollValue","pixelToPercent","limitedOverscrollValue","Axis_OrdinalAxis","RangeSelector_RangeSelectorDefaults","lang","rangeSelectorZoom","rangeSelectorFrom","rangeSelectorTo","allText","allTitle","monthText","monthTitle","yearText","yearTitle","ytdText","ytdTitle","allButtonsEnabled","buttonSpacing","dropdown","buttonTheme","padding","inputBoxBorderColor","inputBoxHeight","inputBoxWidth","inputDateFormat","inputDateParser","inputEditDateFormat","inputEnabled","inputPosition","inputSpacing","selected","buttonPosition","inputStyle","labelStyle","RangeSelectorComposition_defaultOptions","RangeSelectorComposition_composed","RangeSelectorComposition_addEvent","RangeSelectorComposition_defined","RangeSelectorComposition_extend","RangeSelectorComposition_isNumber","RangeSelectorComposition_merge","RangeSelectorComposition_pick","RangeSelectorComposition_pushUnique","chartDestroyEvents","axisMinFromRange","rangeOptions","getTrueRange","original","toParts","makeTime","MIN_VALUE","_offsetMin","updateRangeSelectorButtons","redrawElements","createRangeSelector","RangeSelectorComposition_onChartBeforeRender","deferredYTDClick","clickButton","extraTopMargin","redrawRangeSelector","alignTo","display","spacingBox","placed","onChartDestroy","iEnd","onChartGetMargins","rangeSelectorHeight","marginBottom","RangeSelectorComposition_onChartUpdate","optionsRangeSelector","extraBottomMarginWas","extraTopMarginWas","RangeSelectorClass","minFromRange","external_highcharts_src_js_default_SVGElement_namespaceObject","SVGElement","external_highcharts_src_js_default_SVGElement_default","external_highcharts_src_js_default_Templating_namespaceObject","Templating","external_highcharts_src_js_default_Templating_default","RangeSelector_defaultOptions","format","RangeSelector_addEvent","createElement","RangeSelector_css","RangeSelector_defined","RangeSelector_destroyObjectProperties","diffObjects","discardElement","RangeSelector_extend","RangeSelector_fireEvent","RangeSelector_isNumber","RangeSelector_isString","RangeSelector_merge","RangeSelector_objectEach","RangeSelector_pick","RangeSelector_splat","preferredInputType","hasTimeKey","char","RegExp","fractionalSecondDigits","date","some","dateStyle","day","month","year","timeStyle","minute","second","RangeSelector","RangeSelector_RangeSelectorComposition","buttonOptions","initialButtonGroupWidth","maxButtonWidth","buttonWidth","button","bBox","getBBox","baseXAxisOptions","_range","rangeMin","ctx","ytdExtremes","addOffsetMin","setSelected","forcedDataGrouping","setDataGrouping","frozenStates","preserveDataGrouping","hasData","getYTDExtremes","_offsetMax","selectedIndex","rangeSelectorButton","axisRangeUpdateEvent","langOptions","selectedOption","blurInputs","minInput","maxInput","blur","opt","computeButtonRange","createElements","updateButtonStates","dropdownLabel","actualRange","hasNoData","hasVisibleSeries","ytdMin","ytdMax","buttonStates","selectedExists","isSelectedTooGreat","offsetRange","isSelected","isTooGreatRange","isTooSmallRange","isYTDButNotSelected","isSameRange","prevOrdinalPosition","nextOrdinalPosition","disable","select","state","disabled","bbox","fixedTimes","millisecond","week","offsetMin","offsetMax","getInputValue","input","defaultInputDateParser","timezone","setInputValue","inputTime","dateBox","minDateBox","maxDateBox","setAttribute","hcTimeAttr","getAttribute","updatedTime","previousTime","inputTypeFormats","setInputExtremes","showInput","inputGroup","isTextInput","border","offsetWidth","offsetHeight","hideInput","inputDate","useUTC","drawInput","div","chartStyle","isMin","updateExtremes","chartAxis","currentExtreme","label","on","focus","boxShadow","textAlign","fontFamily","onfocus","onblur","doc","activeElement","keyDown","onchange","onkeypress","keyCode","onkeydown","onkeyup","getPosition","buttonTop","inputTop","inputsZIndex","renderButtons","parentNode","insertBefore","createInputs","minElems","minLabel","maxElems","maxLabel","zoomText","alignElements","_a","buttonGroup","userButtonTheme","paddingLeft","paddingRight","hover","mouseOver","isMS","mouseOut","textContent","textStr","createButtons","createButton","callDefaultEvent","buttonEvents","click","isActive","navButtonOptions","exporting","navigation","getXOffsetForExportButton","rightAligned","titleCollision","positionButtons","xOffsetForExportButton","alignButtonGroup","hasLoaded","handleCollision","alignTranslateY","alignAttr","groupHeight","marginTop","isCollapsed","newButtonsOptions","btnLength","btn","dropdownTranslateX","hasVisibleDropdown","buttonLeft","moveInputsDown","collapseButtons","expandButtons","showDropdown","hideDropdown","rangeSelectorGroup","yPosition","buttonPositionY","inputPositionY","minPosition","subtitle","rSelector","window","HTMLElement","external_highcharts_src_js_default_Chart_namespaceObject","Chart","external_highcharts_src_js_default_Chart_default","StockChart_format","getOptions","StockChart_setFixedRange","StockChart_addEvent","StockChart_clamp","StockChart_crisp","StockChart_defined","StockChart_extend","StockChart_find","StockChart_isNumber","StockChart_isString","StockChart_merge","StockChart_pick","StockChart_splat","getDefaultAxisOptions","showLastLabel","categories","getForcedAxisOptions","Navigator_NavigatorDefaults","axisOptions","StockChart","callback","xAxisOptions","yAxisOptions","mouseWheel","tooltip","split","crosshairs","isStock","createAxis","onAxisAfterDrawCrosshair","cross","log","logarithmic","tickInside","tickPosition","snap","crossLabel","posx","posy","formatOption","formatFormat","limit","lin2log","labelAlign","shape","colorIndex","labelGroup","borderWidth","fontWeight","plotX","plotY","formatter","dateTime","isInside","isPointInside","crossBox","right","anchorX","anchorY","onAxisAfterHideCrosshair","onAxisAutoLabelAlign","panes","_labelPanes","labelOptions","side","onAxisDestroy","onAxisGetPlotLinePath","isLinked","linkedParent","axisLeft","axisTop","translatedValue","force","x1","y1","x2","y2","uniqueAxes","transVal","acrossPanes","A","getAxis","otherColl","axis2","unique","pos","skip","transB","crispPolyLine","onSeriesSetOptions","overrides","is","shadow","radius","seriesForceCropping","dataGroupingOptions","allowDG","svgRendererCrispPolyLine","SVGRendererClass","forceCropping","stockChart","c","Chart_StockChart","pointClass","ColumnPoint","ColumnSeries","HLCSeries_crisp","HLCSeries_extend","HLCSeries_merge","HLCSeries_defaultOptions","HLCSeries","extendStem","halfStrokeWidth","getPointPath","graphic","crispX","shapeArgs","yBottom","plotHigh","close","plotClose","drawSinglePoint","pointAttribs","getClassName","drawPoints","attribs","toYData","high","low","names","charAt","toUpperCase","tooltipPos","stickyTracking","directTouch","keysAffectYAxis","pointAttrToOptions","stockOpen","stockHigh","stockLow","stockClose","registerSeriesType","hlc","OHLCPoint_HLCSeries","OHLCPoint","open","resolveUpColor","upColor","resolveColor","getZone","zone","applyOptions","OHLCSeries_composed","OHLCSeries_HLCSeries","OHLCSeries_addEvent","OHLCSeries_crisp","OHLCSeries_extend","OHLCSeries_merge","OHLCSeries_pushUnique","onSeriesAfterSetOptions","useOhlcData","onSeriesInit","eventOptions","OHLCSeries","_args","plotOpen","CandlestickSeries_ColumnSeries","ohlc","CandlestickSeries_OHLCSeries","CandlestickSeries_crisp","CandlestickSeries_merge","CandlestickSeries","isUp","upLineColor","stateOptions","reversedYAxis","topBox","bottomBox","hasTopWhisker","hasBottomWhisker","isNew","FlagsPoint_ColumnPoint","FlagsPoint_isNumber","Flags_FlagsPoint","ttBelow","isValid","hasNewShapeType","symbolKey","modifiedMembers","flag","circle","createPinSymbol","labelX","startSeg","endSeg","labelY","RendererClass","Flags_FlagsSymbols","external_highcharts_src_js_default_Series_types_column_namespaceObject","types","external_highcharts_src_js_default_Series_types_column_default","OnSeriesComposition_composed","columnProto","OnSeriesComposition_defined","OnSeriesComposition_pushUnique","stableSort","getPlotBox","onSeries","optionsOnSeries","onData","lastPoint","onKey","leftPoint","lastX","rightPoint","distanceRatio","pointXOffset","barW","totalRange","substr","p0","p3","p1","controlPoints","p2","calculateCoord","t","pow","tMin","tMax","tMid","xMid","stackIndex","Series_OnSeriesComposition","distribute","FlagsSeries_ColumnSeries","FlagsSeries_addEvent","FlagsSeries_defined","FlagsSeries_extend","FlagsSeries_isNumber","FlagsSeries_merge","FlagsSeries_objectEach","wrap","FlagsSeries","setClip","outsideRight","centered","optionsY","boxesMap","boxes","stackDistance","useHTML","markerGroup","allowOverlapX","target","maxDistance","box","proceed","drawTracker","unbindMouseOver","otherPoint","raised","fillColor","clip","sharedClipKey","sharedClips","forceCrop","invertible","noSharedTooltip","sorted","trackerGroups","buildKDTree","G","Flags_FlagsSeries","Renderer","OHLC_OHLCSeries","stock_src","default"],"mappings":"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"}