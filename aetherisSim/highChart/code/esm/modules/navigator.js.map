{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v12.2.0 (2025-04-07)\n * @module highcharts/modules/navigator\n * @requires highcharts\n *\n * Standalone navigator module\n *\n * (c) 2009-2025 Mateusz Bernacik\n *\n * License: www.highcharts.com/license\n */\nimport * as __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__ from \"../highcharts.js\";\n/******/ // The require scope\n/******/ var __webpack_require__ = {};\n/******/ \n/************************************************************************/\n/******/ /* webpack/runtime/compat get default export */\n/******/ (() => {\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = (module) => {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t() => (module['default']) :\n/******/ \t\t\t() => (module);\n/******/ \t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\treturn getter;\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/define property getters */\n/******/ (() => {\n/******/ \t// define getter functions for harmony exports\n/******/ \t__webpack_require__.d = (exports, definition) => {\n/******/ \t\tfor(var key in definition) {\n/******/ \t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/hasOwnProperty shorthand */\n/******/ (() => {\n/******/ \t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ })();\n/******/ \n/************************************************************************/\n\n;// external [\"../highcharts.js\",\"default\"]\nconst external_highcharts_src_js_default_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"];\nvar external_highcharts_src_js_default_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_namespaceObject);\n;// external [\"../highcharts.js\",\"default\",\"Chart\"]\nconst external_highcharts_src_js_default_Chart_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Chart;\nvar external_highcharts_src_js_default_Chart_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Chart_namespaceObject);\n;// external [\"../highcharts.js\",\"default\",\"Axis\"]\nconst external_highcharts_src_js_default_Axis_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Axis;\nvar external_highcharts_src_js_default_Axis_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Axis_namespaceObject);\n;// ./code/es-modules/Stock/Navigator/ChartNavigatorComposition.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { isTouchDevice } = (external_highcharts_src_js_default_default());\n\nconst { addEvent, merge, pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\nconst composedMembers = [];\n/* *\n *\n *  Variables\n *\n * */\nlet NavigatorConstructor;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction compose(ChartClass, NavigatorClass) {\n    if (external_highcharts_src_js_default_default().pushUnique(composedMembers, ChartClass)) {\n        const chartProto = ChartClass.prototype;\n        NavigatorConstructor = NavigatorClass;\n        chartProto.callbacks.push(onChartCallback);\n        addEvent(ChartClass, 'afterAddSeries', onChartAfterAddSeries);\n        addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n        addEvent(ChartClass, 'afterUpdate', onChartAfterUpdate);\n        addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n        addEvent(ChartClass, 'beforeShowResetZoom', onChartBeforeShowResetZoom);\n        addEvent(ChartClass, 'update', onChartUpdate);\n    }\n}\n/**\n * Handle adding new series.\n * @private\n */\nfunction onChartAfterAddSeries() {\n    if (this.navigator) {\n        // Recompute which series should be shown in navigator, and add them\n        this.navigator.setBaseSeries(null, false);\n    }\n}\n/**\n * For stock charts, extend the Chart.setChartSize method so that we can set the\n * final top position of the navigator once the height of the chart, including\n * the legend, is determined. #367. We can't use Chart.getMargins, because\n * labels offsets are not calculated yet.\n * @private\n */\nfunction onChartAfterSetChartSize() {\n    const legend = this.legend, navigator = this.navigator;\n    let legendOptions, xAxis, yAxis;\n    if (navigator) {\n        legendOptions = legend && legend.options;\n        xAxis = navigator.xAxis;\n        yAxis = navigator.yAxis;\n        const { scrollbarHeight, scrollButtonSize } = navigator;\n        // Compute the top position\n        if (this.inverted) {\n            navigator.left = navigator.opposite ?\n                this.chartWidth - scrollbarHeight -\n                    navigator.height :\n                this.spacing[3] + scrollbarHeight;\n            navigator.top = this.plotTop + scrollButtonSize;\n        }\n        else {\n            navigator.left = pick(xAxis.left, this.plotLeft + scrollButtonSize);\n            navigator.top = navigator.navigatorOptions.top ||\n                this.chartHeight -\n                    navigator.height -\n                    scrollbarHeight -\n                    (this.scrollbar?.options.margin || 0) -\n                    this.spacing[2] -\n                    (this.rangeSelector && this.extraBottomMargin ?\n                        this.rangeSelector.getHeight() :\n                        0) -\n                    ((legendOptions &&\n                        legendOptions.verticalAlign === 'bottom' &&\n                        legendOptions.layout !== 'proximate' && // #13392\n                        legendOptions.enabled &&\n                        !legendOptions.floating) ?\n                        legend.legendHeight +\n                            pick(legendOptions.margin, 10) :\n                        0) -\n                    (this.titleOffset ? this.titleOffset[2] : 0);\n        }\n        if (xAxis && yAxis) { // False if navigator is disabled (#904)\n            if (this.inverted) {\n                xAxis.options.left = yAxis.options.left = navigator.left;\n            }\n            else {\n                xAxis.options.top = yAxis.options.top = navigator.top;\n            }\n            xAxis.setAxisSize();\n            yAxis.setAxisSize();\n        }\n    }\n}\n/**\n * Initialize navigator, if no scrolling exists yet.\n * @private\n */\nfunction onChartAfterUpdate(event) {\n    if (!this.navigator && !this.scroller &&\n        (this.options.navigator.enabled ||\n            this.options.scrollbar.enabled)) {\n        this.scroller = this.navigator = new NavigatorConstructor(this);\n        if (pick(event.redraw, true)) {\n            this.redraw(event.animation); // #7067\n        }\n    }\n}\n/**\n * Initialize navigator for stock charts\n * @private\n */\nfunction onChartBeforeRender() {\n    const options = this.options;\n    if (options.navigator.enabled ||\n        options.scrollbar.enabled) {\n        this.scroller = this.navigator = new NavigatorConstructor(this);\n    }\n}\n/**\n * For Stock charts. For x only zooming, do not to create the zoom button\n * because X axis zooming is already allowed by the Navigator and Range\n * selector. (#9285)\n * @private\n */\nfunction onChartBeforeShowResetZoom() {\n    const chartOptions = this.options, navigator = chartOptions.navigator, rangeSelector = chartOptions.rangeSelector;\n    if (((navigator && navigator.enabled) ||\n        (rangeSelector && rangeSelector.enabled)) &&\n        ((!isTouchDevice &&\n            this.zooming.type === 'x') ||\n            (isTouchDevice && this.zooming.pinchType === 'x'))) {\n        return false;\n    }\n}\n/**\n * @private\n */\nfunction onChartCallback(chart) {\n    const navigator = chart.navigator;\n    // Initialize the navigator\n    if (navigator && chart.xAxis[0]) {\n        const extremes = chart.xAxis[0].getExtremes();\n        navigator.render(extremes.min, extremes.max);\n    }\n}\n/**\n * Merge options, if no scrolling exists yet\n * @private\n */\nfunction onChartUpdate(e) {\n    const navigatorOptions = (e.options.navigator || {}), scrollbarOptions = (e.options.scrollbar || {});\n    if (!this.navigator && !this.scroller &&\n        (navigatorOptions.enabled || scrollbarOptions.enabled)) {\n        merge(true, this.options.navigator, navigatorOptions);\n        merge(true, this.options.scrollbar, scrollbarOptions);\n        delete e.options.navigator;\n        delete e.options.scrollbar;\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst ChartNavigatorComposition = {\n    compose\n};\n/* harmony default export */ const Navigator_ChartNavigatorComposition = (ChartNavigatorComposition);\n\n;// ./code/es-modules/Core/Axis/NavigatorAxisComposition.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { isTouchDevice: NavigatorAxisComposition_isTouchDevice } = (external_highcharts_src_js_default_default());\n\nconst { addEvent: NavigatorAxisComposition_addEvent, correctFloat, defined, isNumber, pick: NavigatorAxisComposition_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction onAxisInit() {\n    const axis = this;\n    if (!axis.navigatorAxis) {\n        axis.navigatorAxis = new NavigatorAxisAdditions(axis);\n    }\n}\n/**\n * For Stock charts, override selection zooming with some special features\n * because X axis zooming is already allowed by the Navigator and Range\n * selector.\n * @private\n */\nfunction onAxisSetExtremes(e) {\n    const axis = this, chart = axis.chart, chartOptions = chart.options, navigator = chartOptions.navigator, navigatorAxis = axis.navigatorAxis, pinchType = chart.zooming.pinchType, rangeSelector = chartOptions.rangeSelector, zoomType = chart.zooming.type;\n    let zoomed;\n    if (axis.isXAxis &&\n        (navigator?.enabled || rangeSelector?.enabled)) {\n        // For y only zooming, ignore the X axis completely\n        if (zoomType === 'y' && e.trigger === 'zoom') {\n            zoomed = false;\n            // For xy zooming, record the state of the zoom before zoom selection,\n            // then when the reset button is pressed, revert to this state. This\n            // should apply only if the chart is initialized with a range (#6612),\n            // otherwise zoom all the way out.\n        }\n        else if (((e.trigger === 'zoom' && zoomType === 'xy') ||\n            (NavigatorAxisComposition_isTouchDevice && pinchType === 'xy')) &&\n            axis.options.range) {\n            const previousZoom = navigatorAxis.previousZoom;\n            // Minimum defined, zooming in\n            if (defined(e.min)) {\n                navigatorAxis.previousZoom = [axis.min, axis.max];\n                // Minimum undefined, resetting zoom\n            }\n            else if (previousZoom) {\n                e.min = previousZoom[0];\n                e.max = previousZoom[1];\n                navigatorAxis.previousZoom = void 0;\n            }\n        }\n    }\n    if (typeof zoomed !== 'undefined') {\n        e.preventDefault();\n    }\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n * @class\n */\nclass NavigatorAxisAdditions {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    static compose(AxisClass) {\n        if (!AxisClass.keepProps.includes('navigatorAxis')) {\n            AxisClass.keepProps.push('navigatorAxis');\n            NavigatorAxisComposition_addEvent(AxisClass, 'init', onAxisInit);\n            NavigatorAxisComposition_addEvent(AxisClass, 'setExtremes', onAxisSetExtremes);\n        }\n    }\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    constructor(axis) {\n        this.axis = axis;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    destroy() {\n        this.axis = void 0;\n    }\n    /**\n     * Add logic to normalize the zoomed range in order to preserve the pressed\n     * state of range selector buttons\n     *\n     * @private\n     * @function Highcharts.Axis#toFixedRange\n     */\n    toFixedRange(pxMin, pxMax, fixedMin, fixedMax) {\n        const axis = this.axis, halfPointRange = (axis.pointRange || 0) / 2;\n        let newMin = NavigatorAxisComposition_pick(fixedMin, axis.translate(pxMin, true, !axis.horiz)), newMax = NavigatorAxisComposition_pick(fixedMax, axis.translate(pxMax, true, !axis.horiz));\n        // Add/remove half point range to/from the extremes (#1172)\n        if (!defined(fixedMin)) {\n            newMin = correctFloat(newMin + halfPointRange);\n        }\n        if (!defined(fixedMax)) {\n            newMax = correctFloat(newMax - halfPointRange);\n        }\n        if (!isNumber(newMin) || !isNumber(newMax)) { // #1195, #7411\n            newMin = newMax = void 0;\n        }\n        return {\n            min: newMin,\n            max: newMax\n        };\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const NavigatorAxisComposition = (NavigatorAxisAdditions);\n\n;// external [\"../highcharts.js\",\"default\",\"Color\"]\nconst external_highcharts_src_js_default_Color_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Color;\nvar external_highcharts_src_js_default_Color_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Color_namespaceObject);\n;// external [\"../highcharts.js\",\"default\",\"SeriesRegistry\"]\nconst external_highcharts_src_js_default_SeriesRegistry_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].SeriesRegistry;\nvar external_highcharts_src_js_default_SeriesRegistry_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_SeriesRegistry_namespaceObject);\n;// ./code/es-modules/Stock/Navigator/NavigatorDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { parse: color } = (external_highcharts_src_js_default_Color_default());\n\nconst { seriesTypes } = (external_highcharts_src_js_default_SeriesRegistry_default());\n/* *\n *\n *  Constants\n *\n * */\n/**\n * The navigator is a small series below the main series, displaying\n * a view of the entire data set. It provides tools to zoom in and\n * out on parts of the data as well as panning across the dataset.\n *\n * @product      highstock gantt\n * @optionparent navigator\n */\nconst NavigatorDefaults = {\n    /**\n     * Whether the navigator and scrollbar should adapt to updated data\n     * in the base X axis. When loading data async, as in the demo below,\n     * this should be `false`. Otherwise new data will trigger navigator\n     * redraw, which will cause unwanted looping. In the demo below, the\n     * data in the navigator is set only once. On navigating, only the main\n     * chart content is updated.\n     *\n     * @sample {highstock} stock/demo/lazy-loading/\n     *         Set to false with async data loading\n     *\n     * @type      {boolean}\n     * @default   true\n     * @apioption navigator.adaptToUpdatedData\n     */\n    /**\n     * An integer identifying the index to use for the base series, or a\n     * string representing the id of the series.\n     *\n     * **Note**: As of Highcharts 5.0, this is now a deprecated option.\n     * Prefer [series.showInNavigator](#plotOptions.series.showInNavigator).\n     *\n     * @see [series.showInNavigator](#plotOptions.series.showInNavigator)\n     *\n     * @deprecated\n     * @type      {number|string}\n     * @default   0\n     * @apioption navigator.baseSeries\n     */\n    /**\n     * Enable or disable the navigator.\n     *\n     * @sample {highstock} stock/navigator/enabled/\n     *         Disable the navigator\n     *\n     * @type      {boolean}\n     * @default   true\n     * @apioption navigator.enabled\n     */\n    /**\n     * When the chart is inverted, whether to draw the navigator on the\n     * opposite side.\n     *\n     * @type      {boolean}\n     * @default   false\n     * @since     5.0.8\n     * @apioption navigator.opposite\n     */\n    /**\n     * The height of the navigator.\n     *\n     * @sample {highstock} stock/navigator/height/\n     *         A higher navigator\n     */\n    height: 40,\n    /**\n     * The distance from the nearest element, the X axis or X axis labels.\n     *\n     * @sample {highstock} stock/navigator/margin/\n     *         A margin of 2 draws the navigator closer to the X axis labels\n     */\n    margin: 22,\n    /**\n     * Whether the mask should be inside the range marking the zoomed\n     * range, or outside. In Highcharts Stock 1.x it was always `false`.\n     *\n     * @sample {highstock} stock/demo/maskinside-false/\n     *         False, mask outside\n     *\n     * @since   2.0\n     */\n    maskInside: true,\n    /**\n     * Options for the handles for dragging the zoomed area.\n     *\n     * @sample {highstock} stock/navigator/handles/\n     *         Colored handles\n     */\n    handles: {\n        /**\n         * Width for handles.\n         *\n         * @sample {highstock} stock/navigator/styled-handles/\n         *         Styled handles\n         *\n         * @since   6.0.0\n         */\n        width: 7,\n        /**\n         * Border radius of the handles.\n         *\n         * @sample {highstock} stock/navigator/handles-border-radius/\n         *      Border radius on the navigator handles.\n         *\n         * @since 11.4.2\n         */\n        borderRadius: 0,\n        /**\n         * Height for handles.\n         *\n         * @sample {highstock} stock/navigator/styled-handles/\n         *         Styled handles\n         *\n         * @since   6.0.0\n         */\n        height: 15,\n        /**\n         * Array to define shapes of handles. 0-index for left, 1-index for\n         * right.\n         *\n         * Additionally, the URL to a graphic can be given on this form:\n         * `url(graphic.png)`. Note that for the image to be applied to\n         * exported charts, its URL needs to be accessible by the export\n         * server.\n         *\n         * Custom callbacks for symbol path generation can also be added to\n         * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n         * used by its method name, as shown in the demo.\n         *\n         * @sample {highstock} stock/navigator/styled-handles/\n         *         Styled handles\n         *\n         * @type    {Array<string>}\n         * @default [\"navigator-handle\", \"navigator-handle\"]\n         * @since   6.0.0\n         */\n        symbols: ['navigator-handle', 'navigator-handle'],\n        /**\n         * Allows to enable/disable handles.\n         *\n         * @since   6.0.0\n         */\n        enabled: true,\n        /**\n         * The width for the handle border and the stripes inside.\n         *\n         * @sample {highstock} stock/navigator/styled-handles/\n         *         Styled handles\n         *\n         * @since     6.0.0\n         * @apioption navigator.handles.lineWidth\n         */\n        lineWidth: 1,\n        /**\n         * The fill for the handle.\n         *\n         * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         */\n        backgroundColor: \"#f2f2f2\" /* Palette.neutralColor5 */,\n        /**\n         * The stroke for the handle border and the stripes inside.\n         *\n         * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         */\n        borderColor: \"#999999\" /* Palette.neutralColor40 */\n    },\n    /**\n     * The color of the mask covering the areas of the navigator series\n     * that are currently not visible in the main series. The default\n     * color is bluish with an opacity of 0.3 to see the series below.\n     *\n     * @see In styled mode, the mask is styled with the\n     *      `.highcharts-navigator-mask` and\n     *      `.highcharts-navigator-mask-inside` classes.\n     *\n     * @sample {highstock} stock/navigator/maskfill/\n     *         Blue, semi transparent mask\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @default rgba(102,133,194,0.3)\n     */\n    maskFill: color(\"#667aff\" /* Palette.highlightColor60 */).setOpacity(0.3).get(),\n    /**\n     * The color of the line marking the currently zoomed area in the\n     * navigator.\n     *\n     * @sample {highstock} stock/navigator/outline/\n     *         2px blue outline\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @default #cccccc\n     */\n    outlineColor: \"#999999\" /* Palette.neutralColor40 */,\n    /**\n     * The width of the line marking the currently zoomed area in the\n     * navigator.\n     *\n     * @see In styled mode, the outline stroke width is set with the\n     *      `.highcharts-navigator-outline` class.\n     *\n     * @sample {highstock} stock/navigator/outline/\n     *         2px blue outline\n     *\n     * @type    {number}\n     */\n    outlineWidth: 1,\n    /**\n     * Options for the navigator series. Available options are the same\n     * as any series, documented at [plotOptions](#plotOptions.series)\n     * and [series](#series).\n     *\n     * Unless data is explicitly defined on navigator.series, the data\n     * is borrowed from the first series in the chart.\n     *\n     * Default series options for the navigator series are:\n     * ```js\n     * series: {\n     *     type: 'areaspline',\n     *     fillOpacity: 0.05,\n     *     dataGrouping: {\n     *         smoothed: true\n     *     },\n     *     lineWidth: 1,\n     *     marker: {\n     *         enabled: false\n     *     }\n     * }\n     * ```\n     *\n     * @see In styled mode, the navigator series is styled with the\n     *      `.highcharts-navigator-series` class.\n     *\n     * @sample {highstock} stock/navigator/series-data/\n     *         Using a separate data set for the navigator\n     * @sample {highstock} stock/navigator/series/\n     *         A green navigator series\n     *\n     * @type {*|Array<*>|Highcharts.SeriesOptionsType|Array<Highcharts.SeriesOptionsType>}\n     */\n    series: {\n        /**\n         * The type of the navigator series.\n         *\n         * Heads up:\n         * In column-type navigator, zooming is limited to at least one\n         * point with its `pointRange`.\n         *\n         * @sample {highstock} stock/navigator/column/\n         *         Column type navigator\n         *\n         * @type    {string}\n         * @default {highstock} `areaspline` if defined, otherwise `line`\n         * @default {gantt} gantt\n         */\n        type: (typeof seriesTypes.areaspline === 'undefined' ?\n            'line' :\n            'areaspline'),\n        /**\n         * The fill opacity of the navigator series.\n         */\n        fillOpacity: 0.05,\n        /**\n         * The pixel line width of the navigator series.\n         */\n        lineWidth: 1,\n        /**\n         * @ignore-option\n         */\n        compare: null,\n        /**\n         * @ignore-option\n         */\n        sonification: {\n            enabled: false\n        },\n        /**\n         * Unless data is explicitly defined, the data is borrowed from the\n         * first series in the chart.\n         *\n         * @type      {Array<number|Array<number|string|null>|object|null>}\n         * @product   highstock\n         * @apioption navigator.series.data\n         */\n        /**\n         * Data grouping options for the navigator series.\n         *\n         * @extends plotOptions.series.dataGrouping\n         */\n        dataGrouping: {\n            approximation: 'average',\n            enabled: true,\n            groupPixelWidth: 2,\n            // Replace smoothed property by anchors, #12455.\n            firstAnchor: 'firstPoint',\n            anchor: 'middle',\n            lastAnchor: 'lastPoint',\n            // Day and week differs from plotOptions.series.dataGrouping\n            units: [\n                ['millisecond', [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],\n                ['second', [1, 2, 5, 10, 15, 30]],\n                ['minute', [1, 2, 5, 10, 15, 30]],\n                ['hour', [1, 2, 3, 4, 6, 8, 12]],\n                ['day', [1, 2, 3, 4]],\n                ['week', [1, 2, 3]],\n                ['month', [1, 3, 6]],\n                ['year', null]\n            ]\n        },\n        /**\n         * Data label options for the navigator series. Data labels are\n         * disabled by default on the navigator series.\n         *\n         * @extends plotOptions.series.dataLabels\n         */\n        dataLabels: {\n            enabled: false,\n            zIndex: 2 // #1839\n        },\n        id: 'highcharts-navigator-series',\n        className: 'highcharts-navigator-series',\n        /**\n         * Sets the fill color of the navigator series.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @apioption navigator.series.color\n         */\n        /**\n         * Line color for the navigator series. Allows setting the color\n         * while disallowing the default candlestick setting.\n         *\n         * @type {Highcharts.ColorString|null}\n         */\n        lineColor: null, // #4602\n        marker: {\n            enabled: false\n        },\n        /**\n         * Since Highcharts Stock v8, default value is the same as default\n         * `pointRange` defined for a specific type (e.g. `null` for\n         * column type).\n         *\n         * In Highcharts Stock version < 8, defaults to 0.\n         *\n         * @extends plotOptions.series.pointRange\n         * @type {number|null}\n         * @apioption navigator.series.pointRange\n         */\n        /**\n         * The threshold option. Setting it to 0 will make the default\n         * navigator area series draw its area from the 0 value and up.\n         *\n         * @type {number|null}\n         */\n        threshold: null\n    },\n    /**\n     * Enable or disable navigator sticking to right, while adding new\n     * points. If `undefined`, the navigator sticks to the axis maximum only\n     * if it was already at the maximum prior to adding points.\n     *\n     * @type      {boolean}\n     * @default   undefined\n     * @since 10.2.1\n     * @sample {highstock} stock/navigator/sticktomax-false/\n     * stickToMax set to false\n     * @apioption navigator.stickToMax\n     */\n    /**\n     * Options for the navigator X axis. Default series options for the\n     * navigator xAxis are:\n     * ```js\n     * xAxis: {\n     *     tickWidth: 0,\n     *     lineWidth: 0,\n     *     gridLineWidth: 1,\n     *     tickPixelInterval: 200,\n     *     labels: {\n     *            align: 'left',\n     *         style: {\n     *             color: '#888'\n     *         },\n     *         x: 3,\n     *         y: -4\n     *     }\n     * }\n     * ```\n     *\n     * @extends   xAxis\n     * @excluding linkedTo, maxZoom, minRange, opposite, range, scrollbar,\n     *            showEmpty, maxRange\n     */\n    xAxis: {\n        /**\n         * Additional range on the right side of the xAxis. Works similar to\n         * `xAxis.maxPadding`, but the value is set in terms of axis values,\n         * percentage or pixels.\n         *\n         * If it's a number, it is interpreted as axis values, which in a\n         * datetime axis equals milliseconds.\n         *\n         * If it's a percentage string, is interpreted as percentages of the\n         * axis length. An overscroll of 50% will make a 100px axis 50px longer.\n         *\n         * If it's a pixel string, it is interpreted as a fixed pixel value, but\n         * limited to 90% of the axis length.\n         *\n         * If it's undefined, the value is inherited from `xAxis.overscroll`.\n         *\n         * Can be set for both, main xAxis and navigator's xAxis.\n         *\n         * @type    {number | string | undefined}\n         * @since   6.0.0\n         * @apioption navigator.xAxis.overscroll\n         */\n        className: 'highcharts-navigator-xaxis',\n        tickLength: 0,\n        lineWidth: 0,\n        gridLineColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n        id: 'navigator-x-axis',\n        gridLineWidth: 1,\n        tickPixelInterval: 200,\n        labels: {\n            align: 'left',\n            /**\n             * @type {Highcharts.CSSObject}\n             */\n            style: {\n                /** @ignore */\n                color: \"#000000\" /* Palette.neutralColor100 */,\n                /** @ignore */\n                fontSize: '0.7em',\n                /** @ignore */\n                opacity: 0.6,\n                /** @ignore */\n                textOutline: '2px contrast'\n            },\n            x: 3,\n            y: -4\n        },\n        crosshair: false\n    },\n    /**\n     * Options for the navigator Y axis. Default series options for the\n     * navigator yAxis are:\n     * ```js\n     * yAxis: {\n     *     gridLineWidth: 0,\n     *     startOnTick: false,\n     *     endOnTick: false,\n     *     minPadding: 0.1,\n     *     maxPadding: 0.1,\n     *     labels: {\n     *         enabled: false\n     *     },\n     *     title: {\n     *         text: null\n     *     },\n     *     tickWidth: 0\n     * }\n     * ```\n     *\n     * @extends   yAxis\n     * @excluding height, linkedTo, maxZoom, minRange, ordinal, range,\n     *            showEmpty, scrollbar, top, units, maxRange, minLength,\n     *            maxLength, resize\n     */\n    yAxis: {\n        className: 'highcharts-navigator-yaxis',\n        gridLineWidth: 0,\n        startOnTick: false,\n        endOnTick: false,\n        minPadding: 0.1,\n        id: 'navigator-y-axis',\n        maxPadding: 0.1,\n        labels: {\n            enabled: false\n        },\n        crosshair: false,\n        title: {\n            text: void 0\n        },\n        tickLength: 0,\n        tickWidth: 0\n    }\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Navigator_NavigatorDefaults = (NavigatorDefaults);\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Maximum range which can be set using the navigator's handles.\n * Opposite of [xAxis.minRange](#xAxis.minRange).\n *\n * @sample {highstock} stock/navigator/maxrange/\n *         Defined max and min range\n *\n * @type      {number}\n * @since     6.0.0\n * @product   highstock gantt\n * @apioption xAxis.maxRange\n */\n(''); // Keeps doclets above in JS file\n\n;// ./code/es-modules/Core/Renderer/SVG/Symbols.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { defined: Symbols_defined, isNumber: Symbols_isNumber, pick: Symbols_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/* eslint-disable require-jsdoc, valid-jsdoc */\n/**\n *\n */\nfunction arc(cx, cy, w, h, options) {\n    const arc = [];\n    if (options) {\n        let start = options.start || 0, end = options.end || 0;\n        const rx = Symbols_pick(options.r, w), ry = Symbols_pick(options.r, h || w), \n        // Subtract a small number to prevent cos and sin of start and end\n        // from becoming equal on 360 arcs (#1561). The size of the circle\n        // affects the constant, therefore the division by `rx`. If the\n        // proximity is too small, the arc disappears. If it is too great, a\n        // gap appears. This can be seen in the animation of the official\n        // bubble demo (#20585).\n        proximity = 0.0002 / (options.borderRadius ? 1 : Math.max(rx, 1)), fullCircle = (Math.abs(end - start - 2 * Math.PI) <\n            proximity);\n        if (fullCircle) {\n            start = Math.PI / 2;\n            end = Math.PI * 2.5 - proximity;\n        }\n        const innerRadius = options.innerR, open = Symbols_pick(options.open, fullCircle), cosStart = Math.cos(start), sinStart = Math.sin(start), cosEnd = Math.cos(end), sinEnd = Math.sin(end), \n        // Proximity takes care of rounding errors around PI (#6971)\n        longArc = Symbols_pick(options.longArc, end - start - Math.PI < proximity ? 0 : 1);\n        let arcSegment = [\n            'A', // ArcTo\n            rx, // X radius\n            ry, // Y radius\n            0, // Slanting\n            longArc, // Long or short arc\n            Symbols_pick(options.clockwise, 1), // Clockwise\n            cx + rx * cosEnd,\n            cy + ry * sinEnd\n        ];\n        arcSegment.params = { start, end, cx, cy }; // Memo for border radius\n        arc.push([\n            'M',\n            cx + rx * cosStart,\n            cy + ry * sinStart\n        ], arcSegment);\n        if (Symbols_defined(innerRadius)) {\n            arcSegment = [\n                'A', // ArcTo\n                innerRadius, // X radius\n                innerRadius, // Y radius\n                0, // Slanting\n                longArc, // Long or short arc\n                // Clockwise - opposite to the outer arc clockwise\n                Symbols_defined(options.clockwise) ? 1 - options.clockwise : 0,\n                cx + innerRadius * cosStart,\n                cy + innerRadius * sinStart\n            ];\n            // Memo for border radius\n            arcSegment.params = {\n                start: end,\n                end: start,\n                cx,\n                cy\n            };\n            arc.push(open ?\n                [\n                    'M',\n                    cx + innerRadius * cosEnd,\n                    cy + innerRadius * sinEnd\n                ] : [\n                'L',\n                cx + innerRadius * cosEnd,\n                cy + innerRadius * sinEnd\n            ], arcSegment);\n        }\n        if (!open) {\n            arc.push(['Z']);\n        }\n    }\n    return arc;\n}\n/**\n * Callout shape used for default tooltips.\n */\nfunction callout(x, y, w, h, options) {\n    const arrowLength = 6, halfDistance = 6, r = Math.min((options?.r) || 0, w, h), safeDistance = r + halfDistance, anchorX = options?.anchorX, anchorY = options?.anchorY || 0;\n    const path = roundedRect(x, y, w, h, { r });\n    if (!Symbols_isNumber(anchorX)) {\n        return path;\n    }\n    // Do not render a connector, if anchor starts inside the label\n    if (anchorX < w && anchorX > 0 && anchorY < h && anchorY > 0) {\n        return path;\n    }\n    // Anchor on right side\n    if (x + anchorX > w - safeDistance) {\n        // Chevron\n        if (anchorY > y + safeDistance &&\n            anchorY < y + h - safeDistance) {\n            path.splice(3, 1, ['L', x + w, anchorY - halfDistance], ['L', x + w + arrowLength, anchorY], ['L', x + w, anchorY + halfDistance], ['L', x + w, y + h - r]);\n            // Simple connector\n        }\n        else {\n            if (anchorX < w) { // Corner connector\n                const isTopCorner = anchorY < y + safeDistance, cornerY = isTopCorner ? y : y + h, sliceStart = isTopCorner ? 2 : 5;\n                path.splice(sliceStart, 0, ['L', anchorX, anchorY], ['L', x + w - r, cornerY]);\n            }\n            else { // Side connector\n                path.splice(3, 1, ['L', x + w, h / 2], ['L', anchorX, anchorY], ['L', x + w, h / 2], ['L', x + w, y + h - r]);\n            }\n        }\n        // Anchor on left side\n    }\n    else if (x + anchorX < safeDistance) {\n        // Chevron\n        if (anchorY > y + safeDistance &&\n            anchorY < y + h - safeDistance) {\n            path.splice(7, 1, ['L', x, anchorY + halfDistance], ['L', x - arrowLength, anchorY], ['L', x, anchorY - halfDistance], ['L', x, y + r]);\n            // Simple connector\n        }\n        else {\n            if (anchorX > 0) { // Corner connector\n                const isTopCorner = anchorY < y + safeDistance, cornerY = isTopCorner ? y : y + h, sliceStart = isTopCorner ? 1 : 6;\n                path.splice(sliceStart, 0, ['L', anchorX, anchorY], ['L', x + r, cornerY]);\n            }\n            else { // Side connector\n                path.splice(7, 1, ['L', x, h / 2], ['L', anchorX, anchorY], ['L', x, h / 2], ['L', x, y + r]);\n            }\n        }\n    }\n    else if ( // Replace bottom\n    anchorY > h &&\n        anchorX < w - safeDistance) {\n        path.splice(5, 1, ['L', anchorX + halfDistance, y + h], ['L', anchorX, y + h + arrowLength], ['L', anchorX - halfDistance, y + h], ['L', x + r, y + h]);\n    }\n    else if ( // Replace top\n    anchorY < 0 &&\n        anchorX > safeDistance) {\n        path.splice(1, 1, ['L', anchorX - halfDistance, y], ['L', anchorX, y - arrowLength], ['L', anchorX + halfDistance, y], ['L', w - r, y]);\n    }\n    return path;\n}\n/**\n *\n */\nfunction circle(x, y, w, h) {\n    // Return a full arc\n    return arc(x + w / 2, y + h / 2, w / 2, h / 2, {\n        start: Math.PI * 0.5,\n        end: Math.PI * 2.5,\n        open: false\n    });\n}\n/**\n *\n */\nfunction diamond(x, y, w, h) {\n    return [\n        ['M', x + w / 2, y],\n        ['L', x + w, y + h / 2],\n        ['L', x + w / 2, y + h],\n        ['L', x, y + h / 2],\n        ['Z']\n    ];\n}\n// #15291\n/**\n *\n */\nfunction rect(x, y, w, h, options) {\n    if (options?.r) {\n        return roundedRect(x, y, w, h, options);\n    }\n    return [\n        ['M', x, y],\n        ['L', x + w, y],\n        ['L', x + w, y + h],\n        ['L', x, y + h],\n        ['Z']\n    ];\n}\n/**\n *\n */\nfunction roundedRect(x, y, w, h, options) {\n    const r = options?.r || 0;\n    return [\n        ['M', x + r, y],\n        ['L', x + w - r, y], // Top side\n        ['A', r, r, 0, 0, 1, x + w, y + r], // Top-right corner\n        ['L', x + w, y + h - r], // Right side\n        ['A', r, r, 0, 0, 1, x + w - r, y + h], // Bottom-right corner\n        ['L', x + r, y + h], // Bottom side\n        ['A', r, r, 0, 0, 1, x, y + h - r], // Bottom-left corner\n        ['L', x, y + r], // Left side\n        ['A', r, r, 0, 0, 1, x + r, y],\n        ['Z'] // Top-left corner\n    ];\n}\n/**\n *\n */\nfunction triangle(x, y, w, h) {\n    return [\n        ['M', x + w / 2, y],\n        ['L', x + w, y + h],\n        ['L', x, y + h],\n        ['Z']\n    ];\n}\n/**\n *\n */\nfunction triangleDown(x, y, w, h) {\n    return [\n        ['M', x, y],\n        ['L', x + w, y],\n        ['L', x + w / 2, y + h],\n        ['Z']\n    ];\n}\nconst Symbols = {\n    arc,\n    callout,\n    circle,\n    diamond,\n    rect,\n    roundedRect,\n    square: rect,\n    triangle,\n    'triangle-down': triangleDown\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const SVG_Symbols = (Symbols);\n\n;// ./code/es-modules/Stock/Navigator/NavigatorSymbols.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { relativeLength } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\n/**\n * Draw one of the handles on the side of the zoomed range in the navigator.\n * @private\n */\nfunction navigatorHandle(_x, _y, width, height, options = {}) {\n    const halfWidth = options.width ? options.width / 2 : width, markerPosition = 1.5, r = relativeLength(options.borderRadius || 0, Math.min(halfWidth * 2, height));\n    height = options.height || height;\n    return [\n        ['M', -markerPosition, height / 2 - 3.5],\n        ['L', -markerPosition, height / 2 + 4.5],\n        ['M', markerPosition - 1, height / 2 - 3.5],\n        ['L', markerPosition - 1, height / 2 + 4.5],\n        ...SVG_Symbols.rect(-halfWidth - 1, 0.5, halfWidth * 2 + 1, height, { r })\n    ];\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst NavigatorSymbols = {\n    'navigator-handle': navigatorHandle\n};\n/* harmony default export */ const Navigator_NavigatorSymbols = (NavigatorSymbols);\n\n;// external [\"../highcharts.js\",\"default\",\"RendererRegistry\"]\nconst external_highcharts_src_js_default_RendererRegistry_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].RendererRegistry;\nvar external_highcharts_src_js_default_RendererRegistry_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_RendererRegistry_namespaceObject);\n;// ./code/es-modules/Stock/Utilities/StockUtilities.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { defined: StockUtilities_defined } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Sets the chart.fixedRange to the specified value. If the value is larger\n * than actual range, sets it to the maximum possible range. (#20327)\n *\n * @private\n * @function Highcharts.StockChart#setFixedRange\n * @param {number|undefined} range\n *        Range to set in axis units.\n */\nfunction setFixedRange(range) {\n    const xAxis = this.xAxis[0];\n    if (StockUtilities_defined(xAxis.dataMax) &&\n        StockUtilities_defined(xAxis.dataMin) &&\n        range) {\n        this.fixedRange = Math.min(range, xAxis.dataMax - xAxis.dataMin);\n    }\n    else {\n        this.fixedRange = range;\n    }\n}\nconst StockUtilities = {\n    setFixedRange\n};\n/* harmony default export */ const Utilities_StockUtilities = (StockUtilities);\n\n;// ./code/es-modules/Stock/Navigator/NavigatorComposition.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { setOptions } = (external_highcharts_src_js_default_default());\n\nconst { composed } = (external_highcharts_src_js_default_default());\n\n\n\n\nconst { getRendererType } = (external_highcharts_src_js_default_RendererRegistry_default());\n\nconst { setFixedRange: NavigatorComposition_setFixedRange } = Utilities_StockUtilities;\n\nconst { addEvent: NavigatorComposition_addEvent, extend, pushUnique } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Variables\n *\n * */\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction NavigatorComposition_compose(ChartClass, AxisClass, SeriesClass) {\n    NavigatorAxisComposition.compose(AxisClass);\n    if (pushUnique(composed, 'Navigator')) {\n        ChartClass.prototype.setFixedRange = NavigatorComposition_setFixedRange;\n        extend(getRendererType().prototype.symbols, Navigator_NavigatorSymbols);\n        NavigatorComposition_addEvent(SeriesClass, 'afterUpdate', onSeriesAfterUpdate);\n        setOptions({ navigator: Navigator_NavigatorDefaults });\n    }\n}\n/**\n * Handle updating series\n * @private\n */\nfunction onSeriesAfterUpdate() {\n    if (this.chart.navigator && !this.options.isInternal) {\n        this.chart.navigator.setBaseSeries(null, false);\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst NavigatorComposition = {\n    compose: NavigatorComposition_compose\n};\n/* harmony default export */ const Navigator_NavigatorComposition = (NavigatorComposition);\n\n;// ./code/es-modules/Core/Axis/ScrollbarAxis.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { composed: ScrollbarAxis_composed } = (external_highcharts_src_js_default_default());\n\nconst { addEvent: ScrollbarAxis_addEvent, defined: ScrollbarAxis_defined, pick: ScrollbarAxis_pick, pushUnique: ScrollbarAxis_pushUnique } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Composition\n *\n * */\nvar ScrollbarAxis;\n(function (ScrollbarAxis) {\n    /* *\n     *\n     *  Variables\n     *\n     * */\n    let Scrollbar;\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Attaches to axis events to create scrollbars if enabled.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} AxisClass\n     * Axis class to extend.\n     *\n     * @param {Highcharts.Scrollbar} ScrollbarClass\n     * Scrollbar class to use.\n     */\n    function compose(AxisClass, ScrollbarClass) {\n        if (ScrollbarAxis_pushUnique(ScrollbarAxis_composed, 'Axis.Scrollbar')) {\n            Scrollbar = ScrollbarClass;\n            ScrollbarAxis_addEvent(AxisClass, 'afterGetOffset', onAxisAfterGetOffset);\n            ScrollbarAxis_addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n            ScrollbarAxis_addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n        }\n    }\n    ScrollbarAxis.compose = compose;\n    /** @private */\n    function getExtremes(axis) {\n        const axisMin = ScrollbarAxis_pick(axis.options?.min, axis.min);\n        const axisMax = ScrollbarAxis_pick(axis.options?.max, axis.max);\n        return {\n            axisMin,\n            axisMax,\n            scrollMin: ScrollbarAxis_defined(axis.dataMin) ?\n                Math.min(axisMin, axis.min, axis.dataMin, ScrollbarAxis_pick(axis.threshold, Infinity)) : axisMin,\n            scrollMax: ScrollbarAxis_defined(axis.dataMax) ?\n                Math.max(axisMax, axis.max, axis.dataMax, ScrollbarAxis_pick(axis.threshold, -Infinity)) : axisMax\n        };\n    }\n    /**\n     * Make space for a scrollbar.\n     * @private\n     */\n    function onAxisAfterGetOffset() {\n        const axis = this, scrollbar = axis.scrollbar, opposite = scrollbar && !scrollbar.options.opposite, index = axis.horiz ? 2 : opposite ? 3 : 1;\n        if (scrollbar) {\n            // Reset scrollbars offsets\n            axis.chart.scrollbarsOffsets = [0, 0];\n            axis.chart.axisOffset[index] +=\n                scrollbar.size + (scrollbar.options.margin || 0);\n        }\n    }\n    /**\n     * Wrap axis initialization and create scrollbar if enabled.\n     * @private\n     */\n    function onAxisAfterInit() {\n        const axis = this;\n        if (axis.options?.scrollbar?.enabled) {\n            // Predefined options:\n            axis.options.scrollbar.vertical = !axis.horiz;\n            axis.options.startOnTick = axis.options.endOnTick = false;\n            axis.scrollbar = new Scrollbar(axis.chart.renderer, axis.options.scrollbar, axis.chart);\n            ScrollbarAxis_addEvent(axis.scrollbar, 'changed', function (e) {\n                const { axisMin, axisMax, scrollMin: unitedMin, scrollMax: unitedMax } = getExtremes(axis), range = unitedMax - unitedMin;\n                let to, from;\n                // #12834, scroll when show/hide series, wrong extremes\n                if (!ScrollbarAxis_defined(axisMin) || !ScrollbarAxis_defined(axisMax)) {\n                    return;\n                }\n                if ((axis.horiz && !axis.reversed) ||\n                    (!axis.horiz && axis.reversed)) {\n                    to = unitedMin + range * this.to;\n                    from = unitedMin + range * this.from;\n                }\n                else {\n                    // Y-values in browser are reversed, but this also\n                    // applies for reversed horizontal axis:\n                    to = unitedMin + range * (1 - this.from);\n                    from = unitedMin + range * (1 - this.to);\n                }\n                if (this.shouldUpdateExtremes(e.DOMType)) {\n                    // #17977, set animation to undefined instead of true\n                    const animate = e.DOMType === 'mousemove' ||\n                        e.DOMType === 'touchmove' ? false : void 0;\n                    axis.setExtremes(from, to, true, animate, e);\n                }\n                else {\n                    // When live redraw is disabled, don't change extremes\n                    // Only change the position of the scrollbar thumb\n                    this.setRange(this.from, this.to);\n                }\n            });\n        }\n    }\n    /**\n     * Wrap rendering axis, and update scrollbar if one is created.\n     * @private\n     */\n    function onAxisAfterRender() {\n        const axis = this, { scrollMin, scrollMax } = getExtremes(axis), scrollbar = axis.scrollbar, offset = (axis.axisTitleMargin + (axis.titleOffset || 0)), scrollbarsOffsets = axis.chart.scrollbarsOffsets, axisMargin = axis.options.margin || 0;\n        let offsetsIndex, from, to;\n        if (scrollbar && scrollbarsOffsets) {\n            if (axis.horiz) {\n                // Reserve space for labels/title\n                if (!axis.opposite) {\n                    scrollbarsOffsets[1] += offset;\n                }\n                scrollbar.position(axis.left, (axis.top +\n                    axis.height +\n                    2 +\n                    scrollbarsOffsets[1] -\n                    (axis.opposite ? axisMargin : 0)), axis.width, axis.height);\n                // Next scrollbar should reserve space for margin (if set)\n                if (!axis.opposite) {\n                    scrollbarsOffsets[1] += axisMargin;\n                }\n                offsetsIndex = 1;\n            }\n            else {\n                // Reserve space for labels/title\n                if (axis.opposite) {\n                    scrollbarsOffsets[0] += offset;\n                }\n                let xPosition;\n                if (!scrollbar.options.opposite) {\n                    xPosition = axis.opposite ? 0 : axisMargin;\n                }\n                else {\n                    xPosition = axis.left +\n                        axis.width +\n                        2 +\n                        scrollbarsOffsets[0] -\n                        (axis.opposite ? 0 : axisMargin);\n                }\n                scrollbar.position(xPosition, axis.top, axis.width, axis.height);\n                // Next scrollbar should reserve space for margin (if set)\n                if (axis.opposite) {\n                    scrollbarsOffsets[0] += axisMargin;\n                }\n                offsetsIndex = 0;\n            }\n            scrollbarsOffsets[offsetsIndex] += scrollbar.size +\n                (scrollbar.options.margin || 0);\n            if (isNaN(scrollMin) ||\n                isNaN(scrollMax) ||\n                !ScrollbarAxis_defined(axis.min) ||\n                !ScrollbarAxis_defined(axis.max) ||\n                axis.dataMin === axis.dataMax // #10733\n            ) {\n                // Default action: when data extremes are the same or there is\n                // not extremes on the axis, but scrollbar exists, make it\n                // full size\n                scrollbar.setRange(0, 1);\n            }\n            else if (axis.min === axis.max) { // #20359\n                // When the extremes are the same, set the scrollbar to a point\n                // within the extremes range. Utilize pointRange to perform the\n                // calculations. (#20359)\n                const interval = axis.pointRange / (axis.dataMax +\n                    1);\n                from = interval * axis.min;\n                to = interval * (axis.max + 1);\n                scrollbar.setRange(from, to);\n            }\n            else {\n                from = ((axis.min - scrollMin) /\n                    (scrollMax - scrollMin));\n                to = ((axis.max - scrollMin) /\n                    (scrollMax - scrollMin));\n                if ((axis.horiz && !axis.reversed) ||\n                    (!axis.horiz && axis.reversed)) {\n                    scrollbar.setRange(from, to);\n                }\n                else {\n                    // Inverse vertical axis\n                    scrollbar.setRange(1 - to, 1 - from);\n                }\n            }\n        }\n    }\n})(ScrollbarAxis || (ScrollbarAxis = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Axis_ScrollbarAxis = (ScrollbarAxis);\n\n;// ./code/es-modules/Stock/Scrollbar/ScrollbarDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Constant\n *\n * */\n/**\n *\n * The scrollbar is a means of panning over the X axis of a stock chart.\n * Scrollbars can also be applied to other types of axes.\n *\n * Another approach to scrollable charts is the [chart.scrollablePlotArea](\n * https://api.highcharts.com/highcharts/chart.scrollablePlotArea) option that\n * is especially suitable for simpler cartesian charts on mobile.\n *\n * In styled mode, all the presentational options for the\n * scrollbar are replaced by the classes `.highcharts-scrollbar-thumb`,\n * `.highcharts-scrollbar-arrow`, `.highcharts-scrollbar-button`,\n * `.highcharts-scrollbar-rifles` and `.highcharts-scrollbar-track`.\n *\n * @sample stock/yaxis/inverted-bar-scrollbar/\n *         A scrollbar on a simple bar chart\n *\n * @product highstock gantt\n * @optionparent scrollbar\n *\n * @private\n */\nconst ScrollbarDefaults = {\n    /**\n     * The height of the scrollbar. If `buttonsEnabled` is true , the height\n     * also applies to the width of the scroll arrows so that they are always\n     * squares.\n     *\n     * @sample stock/scrollbar/style/\n     *         Non-default height\n     *\n     * @type    {number}\n     */\n    height: 10,\n    /**\n     * The border rounding radius of the bar.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    barBorderRadius: 5,\n    /**\n     * The corner radius of the scrollbar buttons.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    buttonBorderRadius: 0,\n    /**\n     * Enable or disable the buttons at the end of the scrollbar.\n     *\n     * @since 11.0.0\n     */\n    buttonsEnabled: false,\n    /**\n     * Enable or disable the scrollbar.\n     *\n     * @sample stock/scrollbar/enabled/\n     *         Disable the scrollbar, only use navigator\n     *\n     * @type      {boolean}\n     * @default   true\n     * @apioption scrollbar.enabled\n     */\n    /**\n     * Whether to redraw the main chart as the scrollbar or the navigator\n     * zoomed window is moved. Defaults to `true` for modern browsers and\n     * `false` for legacy IE browsers as well as mobile devices.\n     *\n     * @sample stock/scrollbar/liveredraw\n     *         Setting live redraw to false\n     *\n     * @type  {boolean}\n     * @since 1.3\n     */\n    liveRedraw: void 0,\n    /**\n     * The margin between the scrollbar and its axis when the scrollbar is\n     * applied directly to an axis, or the navigator in case that is enabled.\n     * Defaults to 10 for axis, 3 for navigator.\n     *\n     * @type {number|undefined}\n     */\n    margin: void 0,\n    /**\n     * The minimum width of the scrollbar.\n     *\n     * @since 1.2.5\n     */\n    minWidth: 6,\n    /** @ignore-option */\n    opposite: true,\n    /**\n     * Whether to show or hide the scrollbar when the scrolled content is\n     * zoomed out to it full extent.\n     *\n     * @type      {boolean}\n     * @default   true\n     * @apioption scrollbar.showFull\n     */\n    step: 0.2,\n    /**\n     * The z index of the scrollbar group.\n     */\n    zIndex: 3,\n    /**\n     * The background color of the scrollbar itself.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    barBackgroundColor: \"#cccccc\" /* Palette.neutralColor20 */,\n    /**\n     * The width of the bar's border.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    barBorderWidth: 0,\n    /**\n     * The color of the scrollbar's border.\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    barBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n    /**\n     * The color of the small arrow inside the scrollbar buttons.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    buttonArrowColor: \"#333333\" /* Palette.neutralColor80 */,\n    /**\n     * The color of scrollbar buttons.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    buttonBackgroundColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n    /**\n     * The color of the border of the scrollbar buttons.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    buttonBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n    /**\n     * The border width of the scrollbar buttons.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    buttonBorderWidth: 1,\n    /**\n     * The color of the small rifles in the middle of the scrollbar.\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    rifleColor: 'none',\n    /**\n     * The color of the track background.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    trackBackgroundColor: 'rgba(255, 255, 255, 0.001)', // #18922\n    /**\n     * The color of the border of the scrollbar track.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    trackBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n    /**\n     * The corner radius of the border of the scrollbar track.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    trackBorderRadius: 5,\n    /**\n     * The width of the border of the scrollbar track.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    trackBorderWidth: 1\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Scrollbar_ScrollbarDefaults = (ScrollbarDefaults);\n\n;// ./code/es-modules/Stock/Scrollbar/Scrollbar.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { defaultOptions } = (external_highcharts_src_js_default_default());\n\n\n\n\nconst { addEvent: Scrollbar_addEvent, correctFloat: Scrollbar_correctFloat, crisp, defined: Scrollbar_defined, destroyObjectProperties, fireEvent, merge: Scrollbar_merge, pick: Scrollbar_pick, removeEvent } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\n/* eslint-disable no-invalid-this, valid-jsdoc */\n/**\n * A reusable scrollbar, internally used in Highcharts Stock's\n * navigator and optionally on individual axes.\n *\n * @private\n * @class\n * @name Highcharts.Scrollbar\n * @param {Highcharts.SVGRenderer} renderer\n * @param {Highcharts.ScrollbarOptions} options\n * @param {Highcharts.Chart} chart\n */\nclass Scrollbar {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    static compose(AxisClass) {\n        Axis_ScrollbarAxis.compose(AxisClass, Scrollbar);\n    }\n    /**\n     * When we have vertical scrollbar, rifles and arrow in buttons should be\n     * rotated. The same method is used in Navigator's handles, to rotate them.\n     *\n     * @function Highcharts.swapXY\n     *\n     * @param {Highcharts.SVGPathArray} path\n     * Path to be rotated.\n     *\n     * @param {boolean} [vertical]\n     * If vertical scrollbar, swap x-y values.\n     *\n     * @return {Highcharts.SVGPathArray}\n     * Rotated path.\n     *\n     * @requires modules/stock\n     */\n    static swapXY(path, vertical) {\n        if (vertical) {\n            path.forEach((seg) => {\n                const len = seg.length;\n                let temp;\n                for (let i = 0; i < len; i += 2) {\n                    temp = seg[i + 1];\n                    if (typeof temp === 'number') {\n                        seg[i + 1] = seg[i + 2];\n                        seg[i + 2] = temp;\n                    }\n                }\n            });\n        }\n        return path;\n    }\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    constructor(renderer, options, chart) {\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        this._events = [];\n        this.chartX = 0;\n        this.chartY = 0;\n        this.from = 0;\n        this.scrollbarButtons = [];\n        this.scrollbarLeft = 0;\n        this.scrollbarStrokeWidth = 1;\n        this.scrollbarTop = 0;\n        this.size = 0;\n        this.to = 0;\n        this.trackBorderWidth = 1;\n        this.x = 0;\n        this.y = 0;\n        this.init(renderer, options, chart);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Set up the mouse and touch events for the Scrollbar\n     *\n     * @private\n     * @function Highcharts.Scrollbar#addEvents\n     */\n    addEvents() {\n        const buttonsOrder = this.options.inverted ? [1, 0] : [0, 1], buttons = this.scrollbarButtons, bar = this.scrollbarGroup.element, track = this.track.element, mouseDownHandler = this.mouseDownHandler.bind(this), mouseMoveHandler = this.mouseMoveHandler.bind(this), mouseUpHandler = this.mouseUpHandler.bind(this);\n        const _events = [\n            // Mouse events\n            [\n                buttons[buttonsOrder[0]].element,\n                'click',\n                this.buttonToMinClick.bind(this)\n            ],\n            [\n                buttons[buttonsOrder[1]].element,\n                'click',\n                this.buttonToMaxClick.bind(this)\n            ],\n            [track, 'click', this.trackClick.bind(this)],\n            [bar, 'mousedown', mouseDownHandler],\n            [bar.ownerDocument, 'mousemove', mouseMoveHandler],\n            [bar.ownerDocument, 'mouseup', mouseUpHandler],\n            // Touch events\n            [bar, 'touchstart', mouseDownHandler],\n            [bar.ownerDocument, 'touchmove', mouseMoveHandler],\n            [bar.ownerDocument, 'touchend', mouseUpHandler]\n        ];\n        // Add them all\n        _events.forEach(function (args) {\n            Scrollbar_addEvent.apply(null, args);\n        });\n        this._events = _events;\n    }\n    buttonToMaxClick(e) {\n        const scroller = this;\n        const range = ((scroller.to - scroller.from) *\n            Scrollbar_pick(scroller.options.step, 0.2));\n        scroller.updatePosition(scroller.from + range, scroller.to + range);\n        fireEvent(scroller, 'changed', {\n            from: scroller.from,\n            to: scroller.to,\n            trigger: 'scrollbar',\n            DOMEvent: e\n        });\n    }\n    buttonToMinClick(e) {\n        const scroller = this;\n        const range = Scrollbar_correctFloat(scroller.to - scroller.from) *\n            Scrollbar_pick(scroller.options.step, 0.2);\n        scroller.updatePosition(Scrollbar_correctFloat(scroller.from - range), Scrollbar_correctFloat(scroller.to - range));\n        fireEvent(scroller, 'changed', {\n            from: scroller.from,\n            to: scroller.to,\n            trigger: 'scrollbar',\n            DOMEvent: e\n        });\n    }\n    /**\n     * Get normalized (0-1) cursor position over the scrollbar\n     *\n     * @private\n     * @function Highcharts.Scrollbar#cursorToScrollbarPosition\n     *\n     * @param  {*} normalizedEvent\n     *         normalized event, with chartX and chartY values\n     *\n     * @return {Highcharts.Dictionary<number>}\n     *         Local position {chartX, chartY}\n     */\n    cursorToScrollbarPosition(normalizedEvent) {\n        const scroller = this, options = scroller.options, minWidthDifference = options.minWidth > scroller.calculatedWidth ?\n            options.minWidth :\n            0; // `minWidth` distorts translation\n        return {\n            chartX: (normalizedEvent.chartX - scroller.x -\n                scroller.xOffset) /\n                (scroller.barWidth - minWidthDifference),\n            chartY: (normalizedEvent.chartY - scroller.y -\n                scroller.yOffset) /\n                (scroller.barWidth - minWidthDifference)\n        };\n    }\n    /**\n     * Destroys allocated elements.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#destroy\n     */\n    destroy() {\n        const scroller = this, navigator = scroller.chart.scroller;\n        // Disconnect events added in addEvents\n        scroller.removeEvents();\n        // Destroy properties\n        [\n            'track',\n            'scrollbarRifles',\n            'scrollbar',\n            'scrollbarGroup',\n            'group'\n        ].forEach(function (prop) {\n            if (scroller[prop] && scroller[prop].destroy) {\n                scroller[prop] = scroller[prop].destroy();\n            }\n        });\n        // #6421, chart may have more scrollbars\n        if (navigator && scroller === navigator.scrollbar) {\n            navigator.scrollbar = null;\n            // Destroy elements in collection\n            destroyObjectProperties(navigator.scrollbarButtons);\n        }\n    }\n    /**\n     * Draw the scrollbar buttons with arrows\n     *\n     * @private\n     * @function Highcharts.Scrollbar#drawScrollbarButton\n     * @param {number} index\n     *        0 is left, 1 is right\n     */\n    drawScrollbarButton(index) {\n        const scroller = this, renderer = scroller.renderer, scrollbarButtons = scroller.scrollbarButtons, options = scroller.options, size = scroller.size, group = renderer.g().add(scroller.group);\n        scrollbarButtons.push(group);\n        if (options.buttonsEnabled) {\n            // Create a rectangle for the scrollbar button\n            const rect = renderer.rect()\n                .addClass('highcharts-scrollbar-button')\n                .add(group);\n            // Presentational attributes\n            if (!scroller.chart.styledMode) {\n                rect.attr({\n                    stroke: options.buttonBorderColor,\n                    'stroke-width': options.buttonBorderWidth,\n                    fill: options.buttonBackgroundColor\n                });\n            }\n            // Place the rectangle based on the rendered stroke width\n            rect.attr(rect.crisp({\n                x: -0.5,\n                y: -0.5,\n                width: size,\n                height: size,\n                r: options.buttonBorderRadius\n            }, rect.strokeWidth()));\n            // Button arrow\n            const arrow = renderer\n                .path(Scrollbar.swapXY([[\n                    'M',\n                    size / 2 + (index ? -1 : 1),\n                    size / 2 - 3\n                ], [\n                    'L',\n                    size / 2 + (index ? -1 : 1),\n                    size / 2 + 3\n                ], [\n                    'L',\n                    size / 2 + (index ? 2 : -2),\n                    size / 2\n                ]], options.vertical))\n                .addClass('highcharts-scrollbar-arrow')\n                .add(scrollbarButtons[index]);\n            if (!scroller.chart.styledMode) {\n                arrow.attr({\n                    fill: options.buttonArrowColor\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @function Highcharts.Scrollbar#init\n     * @param {Highcharts.SVGRenderer} renderer\n     * @param {Highcharts.ScrollbarOptions} options\n     * @param {Highcharts.Chart} chart\n     */\n    init(renderer, options, chart) {\n        const scroller = this;\n        scroller.scrollbarButtons = [];\n        scroller.renderer = renderer;\n        scroller.userOptions = options;\n        scroller.options = Scrollbar_merge(Scrollbar_ScrollbarDefaults, defaultOptions.scrollbar, options);\n        scroller.options.margin = Scrollbar_pick(scroller.options.margin, 10);\n        scroller.chart = chart;\n        // Backward compatibility\n        scroller.size = Scrollbar_pick(scroller.options.size, scroller.options.height);\n        // Init\n        if (options.enabled) {\n            scroller.render();\n            scroller.addEvents();\n        }\n    }\n    mouseDownHandler(e) {\n        const scroller = this, normalizedEvent = scroller.chart.pointer?.normalize(e) || e, mousePosition = scroller.cursorToScrollbarPosition(normalizedEvent);\n        scroller.chartX = mousePosition.chartX;\n        scroller.chartY = mousePosition.chartY;\n        scroller.initPositions = [scroller.from, scroller.to];\n        scroller.grabbedCenter = true;\n    }\n    /**\n     * Event handler for the mouse move event.\n     * @private\n     */\n    mouseMoveHandler(e) {\n        const scroller = this, normalizedEvent = scroller.chart.pointer?.normalize(e) || e, options = scroller.options, direction = options.vertical ?\n            'chartY' : 'chartX', initPositions = scroller.initPositions || [];\n        let scrollPosition, chartPosition, change;\n        // In iOS, a mousemove event with e.pageX === 0 is fired when\n        // holding the finger down in the center of the scrollbar. This\n        // should be ignored.\n        if (scroller.grabbedCenter &&\n            // #4696, scrollbar failed on Android\n            (!e.touches || e.touches[0][direction] !== 0)) {\n            chartPosition = scroller.cursorToScrollbarPosition(normalizedEvent)[direction];\n            scrollPosition = scroller[direction];\n            change = chartPosition - scrollPosition;\n            scroller.hasDragged = true;\n            scroller.updatePosition(initPositions[0] + change, initPositions[1] + change);\n            if (scroller.hasDragged) {\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMType: e.type,\n                    DOMEvent: e\n                });\n            }\n        }\n    }\n    /**\n     * Event handler for the mouse up event.\n     * @private\n     */\n    mouseUpHandler(e) {\n        const scroller = this;\n        if (scroller.hasDragged) {\n            fireEvent(scroller, 'changed', {\n                from: scroller.from,\n                to: scroller.to,\n                trigger: 'scrollbar',\n                DOMType: e.type,\n                DOMEvent: e\n            });\n        }\n        scroller.grabbedCenter =\n            scroller.hasDragged =\n                scroller.chartX =\n                    scroller.chartY = null;\n    }\n    /**\n     * Position the scrollbar, method called from a parent with defined\n     * dimensions.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#position\n     * @param {number} x\n     *        x-position on the chart\n     * @param {number} y\n     *        y-position on the chart\n     * @param {number} width\n     *        width of the scrollbar\n     * @param {number} height\n     *        height of the scrollbar\n     */\n    position(x, y, width, height) {\n        const scroller = this, options = scroller.options, { buttonsEnabled, margin = 0, vertical } = options, method = scroller.rendered ? 'animate' : 'attr';\n        let xOffset = height, yOffset = 0;\n        // Make the scrollbar visible when it is repositioned, #15763.\n        scroller.group.show();\n        scroller.x = x;\n        scroller.y = y + this.trackBorderWidth;\n        scroller.width = width; // Width with buttons\n        scroller.height = height;\n        scroller.xOffset = xOffset;\n        scroller.yOffset = yOffset;\n        // If Scrollbar is a vertical type, swap options:\n        if (vertical) {\n            scroller.width = scroller.yOffset = width = yOffset = scroller.size;\n            scroller.xOffset = xOffset = 0;\n            scroller.yOffset = yOffset = buttonsEnabled ? scroller.size : 0;\n            // Width without buttons\n            scroller.barWidth = height - (buttonsEnabled ? width * 2 : 0);\n            scroller.x = x = x + margin;\n        }\n        else {\n            scroller.height = height = scroller.size;\n            scroller.xOffset = xOffset = buttonsEnabled ? scroller.size : 0;\n            // Width without buttons\n            scroller.barWidth = width - (buttonsEnabled ? height * 2 : 0);\n            scroller.y = scroller.y + margin;\n        }\n        // Set general position for a group:\n        scroller.group[method]({\n            translateX: x,\n            translateY: scroller.y\n        });\n        // Resize background/track:\n        scroller.track[method]({\n            width: width,\n            height: height\n        });\n        // Move right/bottom button to its place:\n        scroller.scrollbarButtons[1][method]({\n            translateX: vertical ? 0 : width - xOffset,\n            translateY: vertical ? height - yOffset : 0\n        });\n    }\n    /**\n     * Removes the event handlers attached previously with addEvents.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#removeEvents\n     */\n    removeEvents() {\n        this._events.forEach(function (args) {\n            removeEvent.apply(null, args);\n        });\n        this._events.length = 0;\n    }\n    /**\n     * Render scrollbar with all required items.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#render\n     */\n    render() {\n        const scroller = this, renderer = scroller.renderer, options = scroller.options, size = scroller.size, styledMode = scroller.chart.styledMode, group = renderer.g('scrollbar')\n            .attr({\n            zIndex: options.zIndex\n        })\n            .hide() // Initially hide the scrollbar #15863\n            .add();\n        // Draw the scrollbar group\n        scroller.group = group;\n        // Draw the scrollbar track:\n        scroller.track = renderer.rect()\n            .addClass('highcharts-scrollbar-track')\n            .attr({\n            r: options.trackBorderRadius || 0,\n            height: size,\n            width: size\n        }).add(group);\n        if (!styledMode) {\n            scroller.track.attr({\n                fill: options.trackBackgroundColor,\n                stroke: options.trackBorderColor,\n                'stroke-width': options.trackBorderWidth\n            });\n        }\n        const trackBorderWidth = scroller.trackBorderWidth =\n            scroller.track.strokeWidth();\n        scroller.track.attr({\n            x: -crisp(0, trackBorderWidth),\n            y: -crisp(0, trackBorderWidth)\n        });\n        // Draw the scrollbar itself\n        scroller.scrollbarGroup = renderer.g().add(group);\n        scroller.scrollbar = renderer.rect()\n            .addClass('highcharts-scrollbar-thumb')\n            .attr({\n            height: size - trackBorderWidth,\n            width: size - trackBorderWidth,\n            r: options.barBorderRadius || 0\n        }).add(scroller.scrollbarGroup);\n        scroller.scrollbarRifles = renderer\n            .path(Scrollbar.swapXY([\n            ['M', -3, size / 4],\n            ['L', -3, 2 * size / 3],\n            ['M', 0, size / 4],\n            ['L', 0, 2 * size / 3],\n            ['M', 3, size / 4],\n            ['L', 3, 2 * size / 3]\n        ], options.vertical))\n            .addClass('highcharts-scrollbar-rifles')\n            .add(scroller.scrollbarGroup);\n        if (!styledMode) {\n            scroller.scrollbar.attr({\n                fill: options.barBackgroundColor,\n                stroke: options.barBorderColor,\n                'stroke-width': options.barBorderWidth\n            });\n            scroller.scrollbarRifles.attr({\n                stroke: options.rifleColor,\n                'stroke-width': 1\n            });\n        }\n        scroller.scrollbarStrokeWidth = scroller.scrollbar.strokeWidth();\n        scroller.scrollbarGroup.translate(-crisp(0, scroller.scrollbarStrokeWidth), -crisp(0, scroller.scrollbarStrokeWidth));\n        // Draw the buttons:\n        scroller.drawScrollbarButton(0);\n        scroller.drawScrollbarButton(1);\n    }\n    /**\n     * Set scrollbar size, with a given scale.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#setRange\n     * @param {number} from\n     *        scale (0-1) where bar should start\n     * @param {number} to\n     *        scale (0-1) where bar should end\n     */\n    setRange(from, to) {\n        const scroller = this, options = scroller.options, vertical = options.vertical, minWidth = options.minWidth, fullWidth = scroller.barWidth, method = (this.rendered &&\n            !this.hasDragged &&\n            !(this.chart.navigator && this.chart.navigator.hasDragged)) ? 'animate' : 'attr';\n        if (!Scrollbar_defined(fullWidth)) {\n            return;\n        }\n        const toPX = fullWidth * Math.min(to, 1);\n        let fromPX, newSize;\n        from = Math.max(from, 0);\n        fromPX = Math.ceil(fullWidth * from);\n        scroller.calculatedWidth = newSize = Scrollbar_correctFloat(toPX - fromPX);\n        // We need to recalculate position, if minWidth is used\n        if (newSize < minWidth) {\n            fromPX = (fullWidth - minWidth + newSize) * from;\n            newSize = minWidth;\n        }\n        const newPos = Math.floor(fromPX + scroller.xOffset + scroller.yOffset);\n        const newRiflesPos = newSize / 2 - 0.5; // -0.5 -> rifle line width / 2\n        // Store current position:\n        scroller.from = from;\n        scroller.to = to;\n        if (!vertical) {\n            scroller.scrollbarGroup[method]({\n                translateX: newPos\n            });\n            scroller.scrollbar[method]({\n                width: newSize\n            });\n            scroller.scrollbarRifles[method]({\n                translateX: newRiflesPos\n            });\n            scroller.scrollbarLeft = newPos;\n            scroller.scrollbarTop = 0;\n        }\n        else {\n            scroller.scrollbarGroup[method]({\n                translateY: newPos\n            });\n            scroller.scrollbar[method]({\n                height: newSize\n            });\n            scroller.scrollbarRifles[method]({\n                translateY: newRiflesPos\n            });\n            scroller.scrollbarTop = newPos;\n            scroller.scrollbarLeft = 0;\n        }\n        if (newSize <= 12) {\n            scroller.scrollbarRifles.hide();\n        }\n        else {\n            scroller.scrollbarRifles.show();\n        }\n        // Show or hide the scrollbar based on the showFull setting\n        if (options.showFull === false) {\n            if (from <= 0 && to >= 1) {\n                scroller.group.hide();\n            }\n            else {\n                scroller.group.show();\n            }\n        }\n        scroller.rendered = true;\n    }\n    /**\n     * Checks if the extremes should be updated in response to a scrollbar\n     * change event.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#shouldUpdateExtremes\n     */\n    shouldUpdateExtremes(eventType) {\n        return (Scrollbar_pick(this.options.liveRedraw, (external_highcharts_src_js_default_default()).svg &&\n            !(external_highcharts_src_js_default_default()).isTouchDevice &&\n            !this.chart.boosted) ||\n            // Mouseup always should change extremes\n            eventType === 'mouseup' ||\n            eventType === 'touchend' ||\n            // Internal events\n            !Scrollbar_defined(eventType));\n    }\n    trackClick(e) {\n        const scroller = this;\n        const normalizedEvent = scroller.chart.pointer?.normalize(e) || e, range = scroller.to - scroller.from, top = scroller.y + scroller.scrollbarTop, left = scroller.x + scroller.scrollbarLeft;\n        if ((scroller.options.vertical && normalizedEvent.chartY > top) ||\n            (!scroller.options.vertical && normalizedEvent.chartX > left)) {\n            // On the top or on the left side of the track:\n            scroller.updatePosition(scroller.from + range, scroller.to + range);\n        }\n        else {\n            // On the bottom or the right side of the track:\n            scroller.updatePosition(scroller.from - range, scroller.to - range);\n        }\n        fireEvent(scroller, 'changed', {\n            from: scroller.from,\n            to: scroller.to,\n            trigger: 'scrollbar',\n            DOMEvent: e\n        });\n    }\n    /**\n     * Update the scrollbar with new options\n     *\n     * @private\n     * @function Highcharts.Scrollbar#update\n     * @param  {Highcharts.ScrollbarOptions} options\n     */\n    update(options) {\n        this.destroy();\n        this.init(this.chart.renderer, Scrollbar_merge(true, this.options, options), this.chart);\n    }\n    /**\n     * Update position option in the Scrollbar, with normalized 0-1 scale\n     *\n     * @private\n     * @function Highcharts.Scrollbar#updatePosition\n     * @param  {number} from\n     * @param  {number} to\n     */\n    updatePosition(from, to) {\n        if (to > 1) {\n            from = Scrollbar_correctFloat(1 - Scrollbar_correctFloat(to - from));\n            to = 1;\n        }\n        if (from < 0) {\n            to = Scrollbar_correctFloat(to - from);\n            from = 0;\n        }\n        this.from = from;\n        this.to = to;\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nScrollbar.defaultOptions = Scrollbar_ScrollbarDefaults;\n/* *\n *\n *  Registry\n *\n * */\ndefaultOptions.scrollbar = Scrollbar_merge(true, Scrollbar.defaultOptions, defaultOptions.scrollbar);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Scrollbar_Scrollbar = (Scrollbar);\n\n;// external [\"../highcharts.js\",\"default\",\"SVGRenderer\"]\nconst external_highcharts_src_js_default_SVGRenderer_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].SVGRenderer;\nvar external_highcharts_src_js_default_SVGRenderer_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_SVGRenderer_namespaceObject);\n;// ./code/es-modules/Stock/Navigator/Navigator.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\nconst { defaultOptions: Navigator_defaultOptions } = (external_highcharts_src_js_default_default());\n\nconst { isTouchDevice: Navigator_isTouchDevice } = (external_highcharts_src_js_default_default());\n\n\n\n\nconst { prototype: { symbols } } = (external_highcharts_src_js_default_SVGRenderer_default());\n\nconst { addEvent: Navigator_addEvent, clamp, correctFloat: Navigator_correctFloat, defined: Navigator_defined, destroyObjectProperties: Navigator_destroyObjectProperties, erase, extend: Navigator_extend, find, fireEvent: Navigator_fireEvent, isArray, isNumber: Navigator_isNumber, merge: Navigator_merge, pick: Navigator_pick, removeEvent: Navigator_removeEvent, splat } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Finding the min or max of a set of variables where we don't know if they are\n * defined, is a pattern that is repeated several places in Highcharts. Consider\n * making this a global utility method.\n * @private\n */\nfunction numExt(extreme, ...args) {\n    const numbers = [].filter.call(args, Navigator_isNumber);\n    if (numbers.length) {\n        return Math[extreme].apply(0, numbers);\n    }\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * The Navigator class\n *\n * @private\n * @class\n * @name Highcharts.Navigator\n *\n * @param {Highcharts.Chart} chart\n *        Chart object\n */\nclass Navigator {\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    static compose(ChartClass, AxisClass, SeriesClass) {\n        Navigator_ChartNavigatorComposition.compose(ChartClass, Navigator);\n        Navigator_NavigatorComposition.compose(ChartClass, AxisClass, SeriesClass);\n    }\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(chart) {\n        this.isDirty = false;\n        this.scrollbarHeight = 0;\n        this.init(chart);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Draw one of the handles on the side of the zoomed range in the navigator.\n     *\n     * @private\n     * @function Highcharts.Navigator#drawHandle\n     *\n     * @param {number} x\n     *        The x center for the handle\n     *\n     * @param {number} index\n     *        0 for left and 1 for right\n     *\n     * @param {boolean|undefined} inverted\n     *        Flag for chart.inverted\n     *\n     * @param {string} verb\n     *        Use 'animate' or 'attr'\n     */\n    drawHandle(x, index, inverted, verb) {\n        const navigator = this, height = navigator.navigatorOptions.handles.height;\n        // Place it\n        navigator.handles[index][verb](inverted ? {\n            translateX: Math.round(navigator.left + navigator.height / 2),\n            translateY: Math.round(navigator.top + parseInt(x, 10) + 0.5 - height)\n        } : {\n            translateX: Math.round(navigator.left + parseInt(x, 10)),\n            translateY: Math.round(navigator.top + navigator.height / 2 - height / 2 - 1)\n        });\n    }\n    /**\n     * Render outline around the zoomed range\n     *\n     * @private\n     * @function Highcharts.Navigator#drawOutline\n     *\n     * @param {number} zoomedMin\n     *        in pixels position where zoomed range starts\n     *\n     * @param {number} zoomedMax\n     *        in pixels position where zoomed range ends\n     *\n     * @param {boolean|undefined} inverted\n     *        flag if chart is inverted\n     *\n     * @param {string} verb\n     *        use 'animate' or 'attr'\n     */\n    drawOutline(zoomedMin, zoomedMax, inverted, verb) {\n        const navigator = this, maskInside = navigator.navigatorOptions.maskInside, outlineWidth = navigator.outline.strokeWidth(), halfOutline = outlineWidth / 2, outlineCorrection = (outlineWidth % 2) / 2, // #5800\n        scrollButtonSize = navigator.scrollButtonSize, navigatorSize = navigator.size, navigatorTop = navigator.top, height = navigator.height, lineTop = navigatorTop - halfOutline, lineBtm = navigatorTop + height;\n        let left = navigator.left, verticalMin, path;\n        if (inverted) {\n            verticalMin = navigatorTop + zoomedMax + outlineCorrection;\n            zoomedMax = navigatorTop + zoomedMin + outlineCorrection;\n            path = [\n                [\n                    'M',\n                    left + height,\n                    navigatorTop - scrollButtonSize - outlineCorrection\n                ],\n                // Top right of zoomed range\n                ['L', left + height, verticalMin],\n                ['L', left, verticalMin], // Top left of z.r.\n                ['M', left, zoomedMax], // Bottom left of z.r.\n                ['L', left + height, zoomedMax], // Bottom right of z.r.\n                [\n                    'L',\n                    left + height,\n                    navigatorTop + navigatorSize + scrollButtonSize\n                ]\n            ];\n            if (maskInside) {\n                path.push(\n                // Upper left of zoomed range\n                ['M', left + height, verticalMin - halfOutline], \n                // Upper right of z.r.\n                [\n                    'L',\n                    left + height,\n                    zoomedMax + halfOutline\n                ]);\n            }\n        }\n        else {\n            left -= scrollButtonSize;\n            zoomedMin += left + scrollButtonSize - outlineCorrection;\n            zoomedMax += left + scrollButtonSize - outlineCorrection;\n            path = [\n                // Left\n                ['M', left, lineTop],\n                // Upper left of zoomed range\n                ['L', zoomedMin, lineTop],\n                // Lower left of z.r.\n                ['L', zoomedMin, lineBtm],\n                // Lower right of z.r.\n                ['M', zoomedMax, lineBtm],\n                // Upper right of z.r.\n                ['L', zoomedMax, lineTop],\n                // Right\n                [\n                    'L',\n                    left + navigatorSize + scrollButtonSize * 2,\n                    lineTop\n                ]\n            ];\n            if (maskInside) {\n                path.push(\n                // Upper left of zoomed range\n                ['M', zoomedMin - halfOutline, lineTop], \n                // Upper right of z.r.\n                ['L', zoomedMax + halfOutline, lineTop]);\n            }\n        }\n        navigator.outline[verb]({\n            d: path\n        });\n    }\n    /**\n     * Render outline around the zoomed range\n     *\n     * @private\n     * @function Highcharts.Navigator#drawMasks\n     *\n     * @param {number} zoomedMin\n     *        in pixels position where zoomed range starts\n     *\n     * @param {number} zoomedMax\n     *        in pixels position where zoomed range ends\n     *\n     * @param {boolean|undefined} inverted\n     *        flag if chart is inverted\n     *\n     * @param {string} verb\n     *        use 'animate' or 'attr'\n     */\n    drawMasks(zoomedMin, zoomedMax, inverted, verb) {\n        const navigator = this, left = navigator.left, top = navigator.top, navigatorHeight = navigator.height;\n        let height, width, x, y;\n        // Determine rectangle position & size\n        // According to (non)inverted position:\n        if (inverted) {\n            x = [left, left, left];\n            y = [top, top + zoomedMin, top + zoomedMax];\n            width = [navigatorHeight, navigatorHeight, navigatorHeight];\n            height = [\n                zoomedMin,\n                zoomedMax - zoomedMin,\n                navigator.size - zoomedMax\n            ];\n        }\n        else {\n            x = [left, left + zoomedMin, left + zoomedMax];\n            y = [top, top, top];\n            width = [\n                zoomedMin,\n                zoomedMax - zoomedMin,\n                navigator.size - zoomedMax\n            ];\n            height = [navigatorHeight, navigatorHeight, navigatorHeight];\n        }\n        navigator.shades.forEach((shade, i) => {\n            shade[verb]({\n                x: x[i],\n                y: y[i],\n                width: width[i],\n                height: height[i]\n            });\n        });\n    }\n    /**\n     * Generate and update DOM elements for a navigator:\n     *\n     * - main navigator group\n     *\n     * - all shades\n     *\n     * - outline\n     *\n     * - handles\n     *\n     * @private\n     * @function Highcharts.Navigator#renderElements\n     */\n    renderElements() {\n        const navigator = this, navigatorOptions = navigator.navigatorOptions, maskInside = navigatorOptions.maskInside, chart = navigator.chart, inverted = chart.inverted, renderer = chart.renderer, mouseCursor = {\n            cursor: inverted ? 'ns-resize' : 'ew-resize'\n        }, \n        // Create the main navigator group\n        navigatorGroup = navigator.navigatorGroup ??\n            (navigator.navigatorGroup = renderer\n                .g('navigator')\n                .attr({\n                zIndex: 8,\n                visibility: 'hidden'\n            })\n                .add());\n        // Create masks, each mask will get events and fill:\n        [\n            !maskInside,\n            maskInside,\n            !maskInside\n        ].forEach((hasMask, index) => {\n            const shade = navigator.shades[index] ??\n                (navigator.shades[index] = renderer.rect()\n                    .addClass('highcharts-navigator-mask' +\n                    (index === 1 ? '-inside' : '-outside'))\n                    .add(navigatorGroup));\n            if (!chart.styledMode) {\n                shade.attr({\n                    fill: hasMask ? navigatorOptions.maskFill : 'rgba(0,0,0,0)'\n                });\n                if (index === 1) {\n                    shade.css(mouseCursor);\n                }\n            }\n        });\n        // Create the outline:\n        if (!navigator.outline) {\n            navigator.outline = renderer.path()\n                .addClass('highcharts-navigator-outline')\n                .add(navigatorGroup);\n        }\n        if (!chart.styledMode) {\n            navigator.outline.attr({\n                'stroke-width': navigatorOptions.outlineWidth,\n                stroke: navigatorOptions.outlineColor\n            });\n        }\n        // Create the handlers:\n        if (navigatorOptions.handles?.enabled) {\n            const handlesOptions = navigatorOptions.handles, { height, width } = handlesOptions;\n            [0, 1].forEach((index) => {\n                const symbolName = handlesOptions.symbols[index];\n                if (!navigator.handles[index] ||\n                    navigator.handles[index].symbolUrl !== symbolName) {\n                    // Generate symbol from scratch if we're dealing with an URL\n                    navigator.handles[index]?.destroy();\n                    navigator.handles[index] = renderer.symbol(symbolName, -width / 2 - 1, 0, width, height, handlesOptions);\n                    // Z index is 6 for right handle, 7 for left. Can't be 10,\n                    // because of the tooltip in inverted chart (#2908).\n                    navigator.handles[index].attr({ zIndex: 7 - index })\n                        .addClass('highcharts-navigator-handle ' +\n                        'highcharts-navigator-handle-' +\n                        ['left', 'right'][index]).add(navigatorGroup);\n                    navigator.addMouseEvents();\n                    // If the navigator symbol changed, update its path and name\n                }\n                else if (!navigator.handles[index].isImg &&\n                    navigator.handles[index].symbolName !== symbolName) {\n                    const symbolFn = symbols[symbolName], path = symbolFn.call(symbols, -width / 2 - 1, 0, width, height);\n                    navigator.handles[index].attr({\n                        d: path\n                    });\n                    navigator.handles[index].symbolName = symbolName;\n                }\n                if (chart.inverted) {\n                    navigator.handles[index].attr({\n                        rotation: 90,\n                        rotationOriginX: Math.floor(-width / 2),\n                        rotationOriginY: (height + width) / 2\n                    });\n                }\n                if (!chart.styledMode) {\n                    navigator.handles[index]\n                        .attr({\n                        fill: handlesOptions.backgroundColor,\n                        stroke: handlesOptions.borderColor,\n                        'stroke-width': handlesOptions.lineWidth,\n                        width: handlesOptions.width,\n                        height: handlesOptions.height,\n                        x: -width / 2 - 1,\n                        y: 0\n                    })\n                        .css(mouseCursor);\n                }\n            });\n        }\n    }\n    /**\n     * Update navigator\n     *\n     * @private\n     * @function Highcharts.Navigator#update\n     *\n     * @param {Highcharts.NavigatorOptions} options\n     *        Options to merge in when updating navigator\n     */\n    update(options, redraw = false) {\n        const chart = this.chart, invertedUpdate = chart.options.chart.inverted !==\n            chart.scrollbar?.options.vertical;\n        Navigator_merge(true, chart.options.navigator, options);\n        this.navigatorOptions = chart.options.navigator || {};\n        this.setOpposite();\n        // Revert to destroy/init for navigator/scrollbar enabled toggle\n        if (Navigator_defined(options.enabled) || invertedUpdate) {\n            this.destroy();\n            this.navigatorEnabled = options.enabled || this.navigatorEnabled;\n            return this.init(chart);\n        }\n        if (this.navigatorEnabled) {\n            this.isDirty = true;\n            if (options.adaptToUpdatedData === false) {\n                this.baseSeries.forEach((series) => {\n                    Navigator_removeEvent(series, 'updatedData', this.updatedDataHandler);\n                }, this);\n            }\n            if (options.adaptToUpdatedData) {\n                this.baseSeries.forEach((series) => {\n                    series.eventsToUnbind.push(Navigator_addEvent(series, 'updatedData', this.updatedDataHandler));\n                }, this);\n            }\n            // Update navigator series\n            if (options.series || options.baseSeries) {\n                this.setBaseSeries(void 0, false);\n            }\n            // Update navigator axis\n            if (options.height || options.xAxis || options.yAxis) {\n                this.height = options.height ?? this.height;\n                const offsets = this.getXAxisOffsets();\n                this.xAxis.update({\n                    ...options.xAxis,\n                    offsets,\n                    [chart.inverted ? 'width' : 'height']: this.height,\n                    [chart.inverted ? 'height' : 'width']: void 0\n                }, false);\n                this.yAxis.update({\n                    ...options.yAxis,\n                    [chart.inverted ? 'width' : 'height']: this.height\n                }, false);\n            }\n        }\n        if (redraw) {\n            chart.redraw();\n        }\n    }\n    /**\n     * Render the navigator\n     *\n     * @private\n     * @function Highcharts.Navigator#render\n     * @param {number} min\n     *        X axis value minimum\n     * @param {number} max\n     *        X axis value maximum\n     * @param {number} [pxMin]\n     *        Pixel value minimum\n     * @param {number} [pxMax]\n     *        Pixel value maximum\n     */\n    render(min, max, pxMin, pxMax) {\n        const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, pointRange = xAxis.pointRange || 0, scrollbarXAxis = xAxis.navigatorAxis.fake ? chart.xAxis[0] : xAxis, navigatorEnabled = navigator.navigatorEnabled, rendered = navigator.rendered, inverted = chart.inverted, minRange = chart.xAxis[0].minRange, maxRange = chart.xAxis[0].options.maxRange, scrollButtonSize = navigator.scrollButtonSize;\n        let navigatorWidth, scrollbarLeft, scrollbarTop, scrollbarHeight = navigator.scrollbarHeight, navigatorSize, verb;\n        // Don't redraw while moving the handles (#4703).\n        if (this.hasDragged && !Navigator_defined(pxMin)) {\n            return;\n        }\n        if (this.isDirty) {\n            // Update DOM navigator elements\n            this.renderElements();\n        }\n        min = Navigator_correctFloat(min - pointRange / 2);\n        max = Navigator_correctFloat(max + pointRange / 2);\n        // Don't render the navigator until we have data (#486, #4202, #5172).\n        if (!Navigator_isNumber(min) || !Navigator_isNumber(max)) {\n            // However, if navigator was already rendered, we may need to resize\n            // it. For example hidden series, but visible navigator (#6022).\n            if (rendered) {\n                pxMin = 0;\n                pxMax = Navigator_pick(xAxis.width, scrollbarXAxis.width);\n            }\n            else {\n                return;\n            }\n        }\n        navigator.left = Navigator_pick(xAxis.left, \n        // In case of scrollbar only, without navigator\n        chart.plotLeft + scrollButtonSize +\n            (inverted ? chart.plotWidth : 0));\n        let zoomedMax = navigator.size = navigatorSize = Navigator_pick(xAxis.len, (inverted ? chart.plotHeight : chart.plotWidth) -\n            2 * scrollButtonSize);\n        if (inverted) {\n            navigatorWidth = scrollbarHeight;\n        }\n        else {\n            navigatorWidth = navigatorSize + 2 * scrollButtonSize;\n        }\n        // Get the pixel position of the handles\n        pxMin = Navigator_pick(pxMin, xAxis.toPixels(min, true));\n        pxMax = Navigator_pick(pxMax, xAxis.toPixels(max, true));\n        // Verify (#1851, #2238)\n        if (!Navigator_isNumber(pxMin) || Math.abs(pxMin) === Infinity) {\n            pxMin = 0;\n            pxMax = navigatorWidth;\n        }\n        // Are we below the minRange? (#2618, #6191)\n        const newMin = xAxis.toValue(pxMin, true), newMax = xAxis.toValue(pxMax, true), currentRange = Math.abs(Navigator_correctFloat(newMax - newMin));\n        if (currentRange < minRange) {\n            if (this.grabbedLeft) {\n                pxMin = xAxis.toPixels(newMax - minRange - pointRange, true);\n            }\n            else if (this.grabbedRight) {\n                pxMax = xAxis.toPixels(newMin + minRange + pointRange, true);\n            }\n        }\n        else if (Navigator_defined(maxRange) &&\n            Navigator_correctFloat(currentRange - pointRange) > maxRange) {\n            if (this.grabbedLeft) {\n                pxMin = xAxis.toPixels(newMax - maxRange - pointRange, true);\n            }\n            else if (this.grabbedRight) {\n                pxMax = xAxis.toPixels(newMin + maxRange + pointRange, true);\n            }\n        }\n        // Handles are allowed to cross, but never exceed the plot area\n        navigator.zoomedMax = clamp(Math.max(pxMin, pxMax), 0, zoomedMax);\n        navigator.zoomedMin = clamp(navigator.fixedWidth ?\n            navigator.zoomedMax - navigator.fixedWidth :\n            Math.min(pxMin, pxMax), 0, zoomedMax);\n        navigator.range = navigator.zoomedMax - navigator.zoomedMin;\n        zoomedMax = Math.round(navigator.zoomedMax);\n        const zoomedMin = Math.round(navigator.zoomedMin);\n        if (navigatorEnabled) {\n            navigator.navigatorGroup.attr({\n                visibility: 'inherit'\n            });\n            // Place elements\n            verb = rendered && !navigator.hasDragged ? 'animate' : 'attr';\n            navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n            navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n            if (navigator.navigatorOptions.handles.enabled) {\n                navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                navigator.drawHandle(zoomedMax, 1, inverted, verb);\n            }\n        }\n        if (navigator.scrollbar) {\n            if (inverted) {\n                scrollbarTop = navigator.top - scrollButtonSize;\n                scrollbarLeft = navigator.left - scrollbarHeight +\n                    (navigatorEnabled || !scrollbarXAxis.opposite ? 0 :\n                        // Multiple axes has offsets:\n                        (scrollbarXAxis.titleOffset || 0) +\n                            // Self margin from the axis.title\n                            scrollbarXAxis.axisTitleMargin);\n                scrollbarHeight = navigatorSize + 2 * scrollButtonSize;\n            }\n            else {\n                scrollbarTop = navigator.top + (navigatorEnabled ?\n                    navigator.height :\n                    -scrollbarHeight);\n                scrollbarLeft = navigator.left - scrollButtonSize;\n            }\n            // Reposition scrollbar\n            navigator.scrollbar.position(scrollbarLeft, scrollbarTop, navigatorWidth, scrollbarHeight);\n            // Keep scale 0-1\n            navigator.scrollbar.setRange(\n            // Use real value, not rounded because range can be very small\n            // (#1716)\n            navigator.zoomedMin / (navigatorSize || 1), navigator.zoomedMax / (navigatorSize || 1));\n        }\n        navigator.rendered = true;\n        this.isDirty = false;\n        Navigator_fireEvent(this, 'afterRender');\n    }\n    /**\n     * Set up the mouse and touch events for the navigator\n     *\n     * @private\n     * @function Highcharts.Navigator#addMouseEvents\n     */\n    addMouseEvents() {\n        const navigator = this, chart = navigator.chart, container = chart.container;\n        let eventsToUnbind = [], mouseMoveHandler, mouseUpHandler;\n        /**\n         * Create mouse events' handlers.\n         * Make them as separate functions to enable wrapping them:\n         */\n        navigator.mouseMoveHandler = mouseMoveHandler = function (e) {\n            navigator.onMouseMove(e);\n        };\n        navigator.mouseUpHandler = mouseUpHandler = function (e) {\n            navigator.onMouseUp(e);\n        };\n        // Add shades and handles mousedown events\n        eventsToUnbind = navigator.getPartsEvents('mousedown');\n        eventsToUnbind.push(\n        // Add mouse move and mouseup events. These are bind to doc/div,\n        // because Navigator.grabbedSomething flags are stored in mousedown\n        // events\n        Navigator_addEvent(chart.renderTo, 'mousemove', mouseMoveHandler), Navigator_addEvent(container.ownerDocument, 'mouseup', mouseUpHandler), \n        // Touch events\n        Navigator_addEvent(chart.renderTo, 'touchmove', mouseMoveHandler), Navigator_addEvent(container.ownerDocument, 'touchend', mouseUpHandler));\n        eventsToUnbind.concat(navigator.getPartsEvents('touchstart'));\n        navigator.eventsToUnbind = eventsToUnbind;\n        // Data events\n        if (navigator.series && navigator.series[0]) {\n            eventsToUnbind.push(Navigator_addEvent(navigator.series[0].xAxis, 'foundExtremes', function () {\n                chart.navigator.modifyNavigatorAxisExtremes();\n            }));\n        }\n    }\n    /**\n     * Generate events for handles and masks\n     *\n     * @private\n     * @function Highcharts.Navigator#getPartsEvents\n     *\n     * @param {string} eventName\n     *        Event name handler, 'mousedown' or 'touchstart'\n     *\n     * @return {Array<Function>}\n     *         An array of functions to remove navigator functions from the\n     *         events again.\n     */\n    getPartsEvents(eventName) {\n        const navigator = this, events = [];\n        ['shades', 'handles'].forEach(function (name) {\n            navigator[name].forEach(function (navigatorItem, index) {\n                events.push(Navigator_addEvent(navigatorItem.element, eventName, function (e) {\n                    navigator[name + 'Mousedown'](e, index);\n                }));\n            });\n        });\n        return events;\n    }\n    /**\n     * Mousedown on a shaded mask, either:\n     *\n     * - will be stored for future drag&drop\n     *\n     * - will directly shift to a new range\n     *\n     * @private\n     * @function Highcharts.Navigator#shadesMousedown\n     *\n     * @param {Highcharts.PointerEventObject} e\n     *        Mouse event\n     *\n     * @param {number} index\n     *        Index of a mask in Navigator.shades array\n     */\n    shadesMousedown(e, index) {\n        e = this.chart.pointer?.normalize(e) || e;\n        const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, zoomedMin = navigator.zoomedMin, navigatorSize = navigator.size, range = navigator.range;\n        let navigatorPosition = navigator.left, chartX = e.chartX, fixedMax, fixedMin, ext, left;\n        // For inverted chart, swap some options:\n        if (chart.inverted) {\n            chartX = e.chartY;\n            navigatorPosition = navigator.top;\n        }\n        if (index === 1) {\n            // Store information for drag&drop\n            navigator.grabbedCenter = chartX;\n            navigator.fixedWidth = range;\n            navigator.dragOffset = chartX - zoomedMin;\n        }\n        else {\n            // Shift the range by clicking on shaded areas\n            left = chartX - navigatorPosition - range / 2;\n            if (index === 0) {\n                left = Math.max(0, left);\n            }\n            else if (index === 2 && left + range >= navigatorSize) {\n                left = navigatorSize - range;\n                if (navigator.reversedExtremes) {\n                    // #7713\n                    left -= range;\n                    fixedMin = navigator.getUnionExtremes().dataMin;\n                }\n                else {\n                    // #2293, #3543\n                    fixedMax = navigator.getUnionExtremes().dataMax;\n                }\n            }\n            if (left !== zoomedMin) { // It has actually moved\n                navigator.fixedWidth = range; // #1370\n                ext = xAxis.navigatorAxis.toFixedRange(left, left + range, fixedMin, fixedMax);\n                if (Navigator_defined(ext.min)) { // #7411\n                    Navigator_fireEvent(this, 'setRange', {\n                        min: Math.min(ext.min, ext.max),\n                        max: Math.max(ext.min, ext.max),\n                        redraw: true,\n                        eventArguments: {\n                            trigger: 'navigator'\n                        }\n                    });\n                }\n            }\n        }\n    }\n    /**\n     * Mousedown on a handle mask.\n     * Will store necessary information for drag&drop.\n     *\n     * @private\n     * @function Highcharts.Navigator#handlesMousedown\n     * @param {Highcharts.PointerEventObject} e\n     *        Mouse event\n     * @param {number} index\n     *        Index of a handle in Navigator.handles array\n     */\n    handlesMousedown(e, index) {\n        e = this.chart.pointer?.normalize(e) || e;\n        const navigator = this, chart = navigator.chart, baseXAxis = chart.xAxis[0], \n        // For reversed axes, min and max are changed,\n        // so the other extreme should be stored\n        reverse = navigator.reversedExtremes;\n        if (index === 0) {\n            // Grab the left handle\n            navigator.grabbedLeft = true;\n            navigator.otherHandlePos = navigator.zoomedMax;\n            navigator.fixedExtreme = reverse ? baseXAxis.min : baseXAxis.max;\n        }\n        else {\n            // Grab the right handle\n            navigator.grabbedRight = true;\n            navigator.otherHandlePos = navigator.zoomedMin;\n            navigator.fixedExtreme = reverse ? baseXAxis.max : baseXAxis.min;\n        }\n        chart.setFixedRange(void 0);\n    }\n    /**\n     * Mouse move event based on x/y mouse position.\n     *\n     * @private\n     * @function Highcharts.Navigator#onMouseMove\n     *\n     * @param {Highcharts.PointerEventObject} e\n     *        Mouse event\n     */\n    onMouseMove(e) {\n        const navigator = this, chart = navigator.chart, navigatorSize = navigator.navigatorSize, range = navigator.range, dragOffset = navigator.dragOffset, inverted = chart.inverted;\n        let left = navigator.left, chartX;\n        // In iOS, a mousemove event with e.pageX === 0 is fired when holding\n        // the finger down in the center of the scrollbar. This should be\n        // ignored.\n        if (!e.touches || e.touches[0].pageX !== 0) { // #4696\n            e = chart.pointer?.normalize(e) || e;\n            chartX = e.chartX;\n            // Swap some options for inverted chart\n            if (inverted) {\n                left = navigator.top;\n                chartX = e.chartY;\n            }\n            // Drag left handle or top handle\n            if (navigator.grabbedLeft) {\n                navigator.hasDragged = true;\n                navigator.render(0, 0, chartX - left, navigator.otherHandlePos);\n                // Drag right handle or bottom handle\n            }\n            else if (navigator.grabbedRight) {\n                navigator.hasDragged = true;\n                navigator.render(0, 0, navigator.otherHandlePos, chartX - left);\n                // Drag scrollbar or open area in navigator\n            }\n            else if (navigator.grabbedCenter) {\n                navigator.hasDragged = true;\n                if (chartX < dragOffset) { // Outside left\n                    chartX = dragOffset;\n                    // Outside right\n                }\n                else if (chartX >\n                    navigatorSize + dragOffset - range) {\n                    chartX = navigatorSize + dragOffset - range;\n                }\n                navigator.render(0, 0, chartX - dragOffset, chartX - dragOffset + range);\n            }\n            if (navigator.hasDragged &&\n                navigator.scrollbar &&\n                Navigator_pick(navigator.scrollbar.options.liveRedraw, \n                // By default, don't run live redraw on touch\n                // devices or if the chart is in boost.\n                !Navigator_isTouchDevice &&\n                    !this.chart.boosted)) {\n                e.DOMType = e.type;\n                setTimeout(function () {\n                    navigator.onMouseUp(e);\n                }, 0);\n            }\n        }\n    }\n    /**\n     * Mouse up event based on x/y mouse position.\n     *\n     * @private\n     * @function Highcharts.Navigator#onMouseUp\n     * @param {Highcharts.PointerEventObject} e\n     *        Mouse event\n     */\n    onMouseUp(e) {\n        const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, scrollbar = navigator.scrollbar, DOMEvent = e.DOMEvent || e, inverted = chart.inverted, verb = navigator.rendered && !navigator.hasDragged ?\n            'animate' : 'attr';\n        let zoomedMax, zoomedMin, unionExtremes, fixedMin, fixedMax, ext;\n        if (\n        // MouseUp is called for both, navigator and scrollbar (that order),\n        // which causes calling afterSetExtremes twice. Prevent first call\n        // by checking if scrollbar is going to set new extremes (#6334)\n        (navigator.hasDragged && (!scrollbar || !scrollbar.hasDragged)) ||\n            e.trigger === 'scrollbar') {\n            unionExtremes = navigator.getUnionExtremes();\n            // When dragging one handle, make sure the other one doesn't change\n            if (navigator.zoomedMin === navigator.otherHandlePos) {\n                fixedMin = navigator.fixedExtreme;\n            }\n            else if (navigator.zoomedMax === navigator.otherHandlePos) {\n                fixedMax = navigator.fixedExtreme;\n            }\n            // Snap to right edge (#4076)\n            if (navigator.zoomedMax === navigator.size) {\n                fixedMax = navigator.reversedExtremes ?\n                    unionExtremes.dataMin :\n                    unionExtremes.dataMax;\n            }\n            // Snap to left edge (#7576)\n            if (navigator.zoomedMin === 0) {\n                fixedMin = navigator.reversedExtremes ?\n                    unionExtremes.dataMax :\n                    unionExtremes.dataMin;\n            }\n            ext = xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin, navigator.zoomedMax, fixedMin, fixedMax);\n            if (Navigator_defined(ext.min)) {\n                Navigator_fireEvent(this, 'setRange', {\n                    min: Math.min(ext.min, ext.max),\n                    max: Math.max(ext.min, ext.max),\n                    redraw: true,\n                    animation: navigator.hasDragged ? false : null,\n                    eventArguments: {\n                        trigger: 'navigator',\n                        triggerOp: 'navigator-drag',\n                        DOMEvent: DOMEvent // #1838\n                    }\n                });\n            }\n        }\n        if (e.DOMType !== 'mousemove' &&\n            e.DOMType !== 'touchmove') {\n            navigator.grabbedLeft = navigator.grabbedRight =\n                navigator.grabbedCenter = navigator.fixedWidth =\n                    navigator.fixedExtreme = navigator.otherHandlePos =\n                        navigator.hasDragged = navigator.dragOffset = null;\n        }\n        // Update position of navigator shades, outline and handles (#12573)\n        if (navigator.navigatorEnabled &&\n            Navigator_isNumber(navigator.zoomedMin) &&\n            Navigator_isNumber(navigator.zoomedMax)) {\n            zoomedMin = Math.round(navigator.zoomedMin);\n            zoomedMax = Math.round(navigator.zoomedMax);\n            if (navigator.shades) {\n                navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n            }\n            if (navigator.outline) {\n                navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n            }\n            if (navigator.navigatorOptions.handles.enabled &&\n                Object.keys(navigator.handles).length ===\n                    navigator.handles.length) {\n                navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                navigator.drawHandle(zoomedMax, 1, inverted, verb);\n            }\n        }\n    }\n    /**\n     * Removes the event handlers attached previously with addEvents.\n     *\n     * @private\n     * @function Highcharts.Navigator#removeEvents\n     */\n    removeEvents() {\n        if (this.eventsToUnbind) {\n            this.eventsToUnbind.forEach(function (unbind) {\n                unbind();\n            });\n            this.eventsToUnbind = void 0;\n        }\n        this.removeBaseSeriesEvents();\n    }\n    /**\n     * Remove data events.\n     *\n     * @private\n     * @function Highcharts.Navigator#removeBaseSeriesEvents\n     */\n    removeBaseSeriesEvents() {\n        const baseSeries = this.baseSeries || [];\n        if (this.navigatorEnabled && baseSeries[0]) {\n            if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                baseSeries.forEach(function (series) {\n                    Navigator_removeEvent(series, 'updatedData', this.updatedDataHandler);\n                }, this);\n            }\n            // We only listen for extremes-events on the first baseSeries\n            if (baseSeries[0].xAxis) {\n                Navigator_removeEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes);\n            }\n        }\n    }\n    /**\n     * Calculate the navigator xAxis offsets\n     *\n     * @private\n     */\n    getXAxisOffsets() {\n        return (this.chart.inverted ?\n            [this.scrollButtonSize, 0, -this.scrollButtonSize, 0] :\n            [0, -this.scrollButtonSize, 0, this.scrollButtonSize]);\n    }\n    /**\n     * Initialize the Navigator object\n     *\n     * @private\n     * @function Highcharts.Navigator#init\n     */\n    init(chart) {\n        const chartOptions = chart.options, navigatorOptions = chartOptions.navigator || {}, navigatorEnabled = navigatorOptions.enabled, scrollbarOptions = chartOptions.scrollbar || {}, scrollbarEnabled = scrollbarOptions.enabled, height = navigatorEnabled && navigatorOptions.height || 0, scrollbarHeight = scrollbarEnabled && scrollbarOptions.height || 0, scrollButtonSize = scrollbarOptions.buttonsEnabled && scrollbarHeight || 0;\n        this.handles = [];\n        this.shades = [];\n        this.chart = chart;\n        this.setBaseSeries();\n        this.height = height;\n        this.scrollbarHeight = scrollbarHeight;\n        this.scrollButtonSize = scrollButtonSize;\n        this.scrollbarEnabled = scrollbarEnabled;\n        this.navigatorEnabled = navigatorEnabled;\n        this.navigatorOptions = navigatorOptions;\n        this.scrollbarOptions = scrollbarOptions;\n        this.setOpposite();\n        const navigator = this, baseSeries = navigator.baseSeries, xAxisIndex = chart.xAxis.length, yAxisIndex = chart.yAxis.length, baseXaxis = baseSeries && baseSeries[0] && baseSeries[0].xAxis ||\n            chart.xAxis[0] || { options: {} };\n        chart.isDirtyBox = true;\n        if (navigator.navigatorEnabled) {\n            const offsets = this.getXAxisOffsets();\n            // An x axis is required for scrollbar also\n            navigator.xAxis = new (external_highcharts_src_js_default_Axis_default())(chart, Navigator_merge({\n                // Inherit base xAxis' break, ordinal options and overscroll\n                breaks: baseXaxis.options.breaks,\n                ordinal: baseXaxis.options.ordinal,\n                overscroll: baseXaxis.options.overscroll\n            }, navigatorOptions.xAxis, {\n                type: 'datetime',\n                yAxis: navigatorOptions.yAxis?.id,\n                index: xAxisIndex,\n                isInternal: true,\n                offset: 0,\n                keepOrdinalPadding: true, // #2436\n                startOnTick: false,\n                endOnTick: false,\n                // Inherit base xAxis' padding when ordinal is false (#16915).\n                minPadding: baseXaxis.options.ordinal ? 0 :\n                    baseXaxis.options.minPadding,\n                maxPadding: baseXaxis.options.ordinal ? 0 :\n                    baseXaxis.options.maxPadding,\n                zoomEnabled: false\n            }, chart.inverted ? {\n                offsets,\n                width: height\n            } : {\n                offsets,\n                height\n            }), 'xAxis');\n            navigator.yAxis = new (external_highcharts_src_js_default_Axis_default())(chart, Navigator_merge(navigatorOptions.yAxis, {\n                alignTicks: false,\n                offset: 0,\n                index: yAxisIndex,\n                isInternal: true,\n                reversed: Navigator_pick((navigatorOptions.yAxis &&\n                    navigatorOptions.yAxis.reversed), (chart.yAxis[0] && chart.yAxis[0].reversed), false), // #14060\n                zoomEnabled: false\n            }, chart.inverted ? {\n                width: height\n            } : {\n                height: height\n            }), 'yAxis');\n            // If we have a base series, initialize the navigator series\n            if (baseSeries || navigatorOptions.series.data) {\n                navigator.updateNavigatorSeries(false);\n                // If not, set up an event to listen for added series\n            }\n            else if (chart.series.length === 0) {\n                navigator.unbindRedraw = Navigator_addEvent(chart, 'beforeRedraw', function () {\n                    // We've got one, now add it as base\n                    if (chart.series.length > 0 && !navigator.series) {\n                        navigator.setBaseSeries();\n                        navigator.unbindRedraw(); // Reset\n                    }\n                });\n            }\n            navigator.reversedExtremes = (chart.inverted && !navigator.xAxis.reversed) || (!chart.inverted && navigator.xAxis.reversed);\n            // Render items, so we can bind events to them:\n            navigator.renderElements();\n            // Add mouse events\n            navigator.addMouseEvents();\n            // In case of scrollbar only, fake an x axis to get translation\n        }\n        else {\n            navigator.xAxis = {\n                chart,\n                navigatorAxis: {\n                    fake: true\n                },\n                translate: function (value, reverse) {\n                    const axis = chart.xAxis[0], ext = axis.getExtremes(), scrollTrackWidth = axis.len - 2 * scrollButtonSize, min = numExt('min', axis.options.min, ext.dataMin), valueRange = numExt('max', axis.options.max, ext.dataMax) - min;\n                    return reverse ?\n                        // From pixel to value\n                        (value * valueRange / scrollTrackWidth) + min :\n                        // From value to pixel\n                        scrollTrackWidth * (value - min) / valueRange;\n                },\n                toPixels: function (value) {\n                    return this.translate(value);\n                },\n                toValue: function (value) {\n                    return this.translate(value, true);\n                }\n            };\n            navigator.xAxis.navigatorAxis.axis = navigator.xAxis;\n            navigator.xAxis.navigatorAxis.toFixedRange = (NavigatorAxisComposition.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis));\n        }\n        // Initialize the scrollbar\n        if (chart.options.scrollbar?.enabled) {\n            const options = Navigator_merge(chart.options.scrollbar, { vertical: chart.inverted });\n            if (!Navigator_isNumber(options.margin)) {\n                options.margin = chart.inverted ? -3 : 3;\n            }\n            chart.scrollbar = navigator.scrollbar = new Scrollbar_Scrollbar(chart.renderer, options, chart);\n            Navigator_addEvent(navigator.scrollbar, 'changed', function (e) {\n                const range = navigator.size, to = range * this.to, from = range * this.from;\n                navigator.hasDragged = navigator.scrollbar.hasDragged;\n                navigator.render(0, 0, from, to);\n                if (this.shouldUpdateExtremes(e.DOMType)) {\n                    setTimeout(function () {\n                        navigator.onMouseUp(e);\n                    });\n                }\n            });\n        }\n        // Add data events\n        navigator.addBaseSeriesEvents();\n        // Add redraw events\n        navigator.addChartEvents();\n    }\n    /**\n     * Set the opposite property on navigator\n     *\n     * @private\n     */\n    setOpposite() {\n        const navigatorOptions = this.navigatorOptions, navigatorEnabled = this.navigatorEnabled, chart = this.chart;\n        this.opposite = Navigator_pick(navigatorOptions.opposite, Boolean(!navigatorEnabled && chart.inverted)); // #6262\n    }\n    /**\n     * Get the union data extremes of the chart - the outer data extremes of the\n     * base X axis and the navigator axis.\n     *\n     * @private\n     * @function Highcharts.Navigator#getUnionExtremes\n     */\n    getUnionExtremes(returnFalseOnNoBaseSeries) {\n        const baseAxis = this.chart.xAxis[0], time = this.chart.time, navAxis = this.xAxis, navAxisOptions = navAxis.options, baseAxisOptions = baseAxis.options;\n        let ret;\n        if (!returnFalseOnNoBaseSeries || baseAxis.dataMin !== null) {\n            ret = {\n                dataMin: Navigator_pick(// #4053\n                time.parse(navAxisOptions?.min), numExt('min', time.parse(baseAxisOptions.min), baseAxis.dataMin, navAxis.dataMin, navAxis.min)),\n                dataMax: Navigator_pick(time.parse(navAxisOptions?.max), numExt('max', time.parse(baseAxisOptions.max), baseAxis.dataMax, navAxis.dataMax, navAxis.max))\n            };\n        }\n        return ret;\n    }\n    /**\n     * Set the base series and update the navigator series from this. With a bit\n     * of modification we should be able to make this an API method to be called\n     * from the outside\n     *\n     * @private\n     * @function Highcharts.Navigator#setBaseSeries\n     * @param {Highcharts.SeriesOptionsType} [baseSeriesOptions]\n     *        Additional series options for a navigator\n     * @param {boolean} [redraw]\n     *        Whether to redraw after update.\n     */\n    setBaseSeries(baseSeriesOptions, redraw) {\n        const chart = this.chart, baseSeries = this.baseSeries = [];\n        baseSeriesOptions = (baseSeriesOptions ||\n            chart.options && chart.options.navigator.baseSeries ||\n            (chart.series.length ?\n                // Find the first non-navigator series (#8430)\n                find(chart.series, (s) => (!s.options.isInternal)).index :\n                0));\n        // Iterate through series and add the ones that should be shown in\n        // navigator.\n        (chart.series || []).forEach((series, i) => {\n            if (\n            // Don't include existing nav series\n            !series.options.isInternal &&\n                (series.options.showInNavigator ||\n                    (i === baseSeriesOptions ||\n                        series.options.id === baseSeriesOptions) &&\n                        series.options.showInNavigator !== false)) {\n                baseSeries.push(series);\n            }\n        });\n        // When run after render, this.xAxis already exists\n        if (this.xAxis && !this.xAxis.navigatorAxis.fake) {\n            this.updateNavigatorSeries(true, redraw);\n        }\n    }\n    /**\n     * Update series in the navigator from baseSeries, adding new if does not\n     * exist.\n     *\n     * @private\n     * @function Highcharts.Navigator.updateNavigatorSeries\n     */\n    updateNavigatorSeries(addEvents, redraw) {\n        const navigator = this, chart = navigator.chart, baseSeries = navigator.baseSeries, navSeriesMixin = {\n            enableMouseTracking: false,\n            index: null, // #6162\n            linkedTo: null, // #6734\n            group: 'nav', // For columns\n            padXAxis: false,\n            xAxis: this.navigatorOptions.xAxis?.id,\n            yAxis: this.navigatorOptions.yAxis?.id,\n            showInLegend: false,\n            stacking: void 0, // #4823\n            isInternal: true,\n            states: {\n                inactive: {\n                    opacity: 1\n                }\n            }\n        }, \n        // Remove navigator series that are no longer in the baseSeries\n        navigatorSeries = navigator.series =\n            (navigator.series || []).filter((navSeries) => {\n                const base = navSeries.baseSeries;\n                if (baseSeries.indexOf(base) < 0) { // Not in array\n                    // If there is still a base series connected to this\n                    // series, remove event handler and reference.\n                    if (base) {\n                        Navigator_removeEvent(base, 'updatedData', navigator.updatedDataHandler);\n                        delete base.navigatorSeries;\n                    }\n                    // Kill the nav series. It may already have been\n                    // destroyed (#8715).\n                    if (navSeries.chart) {\n                        navSeries.destroy();\n                    }\n                    return false;\n                }\n                return true;\n            });\n        let baseOptions, mergedNavSeriesOptions, chartNavigatorSeriesOptions = navigator.navigatorOptions.series, baseNavigatorOptions;\n        // Go through each base series and merge the options to create new\n        // series\n        if (baseSeries && baseSeries.length) {\n            baseSeries.forEach((base) => {\n                const linkedNavSeries = base.navigatorSeries, userNavOptions = Navigator_extend(\n                // Grab color and visibility from base as default\n                {\n                    color: base.color,\n                    visible: base.visible\n                }, !isArray(chartNavigatorSeriesOptions) ?\n                    chartNavigatorSeriesOptions :\n                    Navigator_defaultOptions.navigator.series);\n                // Don't update if the series exists in nav and we have disabled\n                // adaptToUpdatedData.\n                if (linkedNavSeries &&\n                    navigator.navigatorOptions.adaptToUpdatedData === false) {\n                    return;\n                }\n                navSeriesMixin.name = 'Navigator ' + baseSeries.length;\n                baseOptions = base.options || {};\n                baseNavigatorOptions = baseOptions.navigatorOptions || {};\n                // The dataLabels options are not merged correctly\n                // if the settings are an array, #13847.\n                userNavOptions.dataLabels = splat(userNavOptions.dataLabels);\n                mergedNavSeriesOptions = Navigator_merge(baseOptions, navSeriesMixin, userNavOptions, baseNavigatorOptions);\n                // Once nav series type is resolved, pick correct pointRange\n                mergedNavSeriesOptions.pointRange = Navigator_pick(\n                // Stricte set pointRange in options\n                userNavOptions.pointRange, baseNavigatorOptions.pointRange, \n                // Fallback to default values, e.g. `null` for column\n                Navigator_defaultOptions.plotOptions[mergedNavSeriesOptions.type || 'line'].pointRange);\n                // Merge data separately. Do a slice to avoid mutating the\n                // navigator options from base series (#4923).\n                const navigatorSeriesData = baseNavigatorOptions.data || userNavOptions.data;\n                navigator.hasNavigatorData =\n                    navigator.hasNavigatorData || !!navigatorSeriesData;\n                mergedNavSeriesOptions.data = (navigatorSeriesData ||\n                    baseOptions.data?.slice(0));\n                // Update or add the series\n                if (linkedNavSeries && linkedNavSeries.options) {\n                    linkedNavSeries.update(mergedNavSeriesOptions, redraw);\n                }\n                else {\n                    base.navigatorSeries = chart.initSeries(mergedNavSeriesOptions);\n                    // Set data on initial run with dataSorting enabled (#20318)\n                    chart.setSortedData();\n                    base.navigatorSeries.baseSeries = base; // Store ref\n                    navigatorSeries.push(base.navigatorSeries);\n                }\n            });\n        }\n        // If user has defined data (and no base series) or explicitly defined\n        // navigator.series as an array, we create these series on top of any\n        // base series.\n        if (chartNavigatorSeriesOptions.data &&\n            !(baseSeries && baseSeries.length) ||\n            isArray(chartNavigatorSeriesOptions)) {\n            navigator.hasNavigatorData = false;\n            // Allow navigator.series to be an array\n            chartNavigatorSeriesOptions =\n                splat(chartNavigatorSeriesOptions);\n            chartNavigatorSeriesOptions.forEach((userSeriesOptions, i) => {\n                navSeriesMixin.name =\n                    'Navigator ' + (navigatorSeries.length + 1);\n                mergedNavSeriesOptions = Navigator_merge(Navigator_defaultOptions.navigator.series, {\n                    // Since we don't have a base series to pull color from,\n                    // try to fake it by using color from series with same\n                    // index. Otherwise pull from the colors array. We need\n                    // an explicit color as otherwise updates will increment\n                    // color counter and we'll get a new color for each\n                    // update of the nav series.\n                    color: chart.series[i] &&\n                        !chart.series[i].options.isInternal &&\n                        chart.series[i].color ||\n                        chart.options.colors[i] ||\n                        chart.options.colors[0]\n                }, navSeriesMixin, userSeriesOptions);\n                mergedNavSeriesOptions.data = userSeriesOptions.data;\n                if (mergedNavSeriesOptions.data) {\n                    navigator.hasNavigatorData = true;\n                    navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions));\n                }\n            });\n        }\n        if (addEvents) {\n            this.addBaseSeriesEvents();\n        }\n    }\n    /**\n     * Add data events.\n     * For example when main series is updated we need to recalculate extremes\n     *\n     * @private\n     * @function Highcharts.Navigator#addBaseSeriesEvent\n     */\n    addBaseSeriesEvents() {\n        const navigator = this, baseSeries = navigator.baseSeries || [];\n        // Bind modified extremes event to first base's xAxis only.\n        // In event of > 1 base-xAxes, the navigator will ignore those.\n        // Adding this multiple times to the same axis is no problem, as\n        // duplicates should be discarded by the browser.\n        if (baseSeries[0] && baseSeries[0].xAxis) {\n            baseSeries[0].eventsToUnbind.push(Navigator_addEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes));\n        }\n        baseSeries.forEach((base) => {\n            // Link base series show/hide to navigator series visibility\n            base.eventsToUnbind.push(Navigator_addEvent(base, 'show', function () {\n                if (this.navigatorSeries) {\n                    this.navigatorSeries.setVisible(true, false);\n                }\n            }));\n            base.eventsToUnbind.push(Navigator_addEvent(base, 'hide', function () {\n                if (this.navigatorSeries) {\n                    this.navigatorSeries.setVisible(false, false);\n                }\n            }));\n            // Respond to updated data in the base series, unless explicitly\n            // not adapting to data changes.\n            if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                if (base.xAxis) {\n                    base.eventsToUnbind.push(Navigator_addEvent(base, 'updatedData', this.updatedDataHandler));\n                }\n            }\n            // Handle series removal\n            base.eventsToUnbind.push(Navigator_addEvent(base, 'remove', function () {\n                if (baseSeries) {\n                    erase(baseSeries, base); // #21043\n                }\n                if (this.navigatorSeries && navigator.series) {\n                    erase(navigator.series, this.navigatorSeries);\n                    if (Navigator_defined(this.navigatorSeries.options)) {\n                        this.navigatorSeries.remove(false);\n                    }\n                    delete this.navigatorSeries;\n                }\n            }));\n        });\n    }\n    /**\n     * Get minimum from all base series connected to the navigator\n     * @private\n     * @param {number} currentSeriesMin\n     *        Minium from the current series\n     * @return {number}\n     *         Minimum from all series\n     */\n    getBaseSeriesMin(currentSeriesMin) {\n        return this.baseSeries.reduce(function (min, series) {\n            // #10193\n            return Math.min(min, series.getColumn('x')[0] ?? min);\n        }, currentSeriesMin);\n    }\n    /**\n     * Set the navigator x axis extremes to reflect the total. The navigator\n     * extremes should always be the extremes of the union of all series in the\n     * chart as well as the navigator series.\n     *\n     * @private\n     * @function Highcharts.Navigator#modifyNavigatorAxisExtremes\n     */\n    modifyNavigatorAxisExtremes() {\n        const xAxis = this.xAxis;\n        if (typeof xAxis.getExtremes !== 'undefined') {\n            const unionExtremes = this.getUnionExtremes(true);\n            if (unionExtremes &&\n                (unionExtremes.dataMin !== xAxis.min ||\n                    unionExtremes.dataMax !== xAxis.max)) {\n                xAxis.min = unionExtremes.dataMin;\n                xAxis.max = unionExtremes.dataMax;\n            }\n        }\n    }\n    /**\n     * Hook to modify the base axis extremes with information from the Navigator\n     *\n     * @private\n     * @function Highcharts.Navigator#modifyBaseAxisExtremes\n     */\n    modifyBaseAxisExtremes() {\n        const baseXAxis = this, navigator = baseXAxis.chart.navigator, baseExtremes = baseXAxis.getExtremes(), baseMin = baseExtremes.min, baseMax = baseExtremes.max, baseDataMin = baseExtremes.dataMin, baseDataMax = baseExtremes.dataMax, range = baseMax - baseMin, stickToMin = navigator.stickToMin, stickToMax = navigator.stickToMax, overscroll = Navigator_pick(baseXAxis.ordinal?.convertOverscroll(baseXAxis.options.overscroll), 0), navigatorSeries = navigator.series && navigator.series[0], hasSetExtremes = !!baseXAxis.setExtremes, \n        // When the extremes have been set by range selector button, don't\n        // stick to min or max. The range selector buttons will handle the\n        // extremes. (#5489)\n        unmutable = baseXAxis.eventArgs &&\n            baseXAxis.eventArgs.trigger === 'rangeSelectorButton';\n        let newMax, newMin;\n        if (!unmutable) {\n            // If the zoomed range is already at the min, move it to the right\n            // as new data comes in\n            if (stickToMin) {\n                newMin = baseDataMin;\n                newMax = newMin + range;\n            }\n            // If the zoomed range is already at the max, move it to the right\n            // as new data comes in\n            if (stickToMax) {\n                newMax = baseDataMax + overscroll;\n                // If stickToMin is true, the new min value is set above\n                if (!stickToMin) {\n                    newMin = Math.max(baseDataMin, // Don't go below data extremes (#13184)\n                    newMax - range, navigator.getBaseSeriesMin(navigatorSeries && navigatorSeries.xData ?\n                        navigatorSeries.xData[0] :\n                        -Number.MAX_VALUE));\n                }\n            }\n            // Update the extremes\n            if (hasSetExtremes && (stickToMin || stickToMax)) {\n                if (Navigator_isNumber(newMin)) {\n                    baseXAxis.min = baseXAxis.userMin = newMin;\n                    baseXAxis.max = baseXAxis.userMax = newMax;\n                }\n            }\n        }\n        // Reset\n        navigator.stickToMin =\n            navigator.stickToMax = null;\n    }\n    /**\n     * Handler for updated data on the base series. When data is modified, the\n     * navigator series must reflect it. This is called from the Chart.redraw\n     * function before axis and series extremes are computed.\n     *\n     * @private\n     * @function Highcharts.Navigator#updateDataHandler\n     */\n    updatedDataHandler() {\n        const navigator = this.chart.navigator, baseSeries = this, navigatorSeries = this.navigatorSeries, shouldStickToMax = navigator.reversedExtremes ?\n            Math.round(navigator.zoomedMin) === 0 :\n            Math.round(navigator.zoomedMax) >= Math.round(navigator.size);\n        // If the scrollbar is scrolled all the way to the right, keep right as\n        // new data comes in, unless user set navigator.stickToMax to false.\n        navigator.stickToMax = Navigator_pick(this.chart.options.navigator &&\n            this.chart.options.navigator.stickToMax, shouldStickToMax);\n        navigator.stickToMin = navigator.shouldStickToMin(baseSeries, navigator);\n        // Set the navigator series data to the new data of the base series\n        if (navigatorSeries && !navigator.hasNavigatorData) {\n            navigatorSeries.options.pointStart = baseSeries.getColumn('x')[0];\n            navigatorSeries.setData(baseSeries.options.data, false, null, false); // #5414\n        }\n    }\n    /**\n     * Detect if the zoomed area should stick to the minimum, #14742.\n     *\n     * @private\n     * @function Highcharts.Navigator#shouldStickToMin\n     */\n    shouldStickToMin(baseSeries, navigator) {\n        const xDataMin = navigator.getBaseSeriesMin(baseSeries.getColumn('x')[0]), xAxis = baseSeries.xAxis, max = xAxis.max, min = xAxis.min, range = xAxis.options.range;\n        let stickToMin = true;\n        if (Navigator_isNumber(max) && Navigator_isNumber(min)) {\n            // If range declared, stick to the minimum only if the range\n            // is smaller than the data set range.\n            if (range && max - xDataMin > 0) {\n                stickToMin = max - xDataMin < range;\n            }\n            else {\n                // If the current axis minimum falls outside the new\n                // updated dataset, we must adjust.\n                stickToMin = min <= xDataMin;\n            }\n        }\n        else {\n            stickToMin = false; // #15864\n        }\n        return stickToMin;\n    }\n    /**\n     * Add chart events, like redrawing navigator, when chart requires that.\n     *\n     * @private\n     * @function Highcharts.Navigator#addChartEvents\n     */\n    addChartEvents() {\n        if (!this.eventsToUnbind) {\n            this.eventsToUnbind = [];\n        }\n        this.eventsToUnbind.push(\n        // Move the scrollbar after redraw, like after data updata even if\n        // axes don't redraw\n        Navigator_addEvent(this.chart, 'redraw', function () {\n            const navigator = this.navigator, xAxis = navigator && (navigator.baseSeries &&\n                navigator.baseSeries[0] &&\n                navigator.baseSeries[0].xAxis ||\n                this.xAxis[0]); // #5709, #13114\n            if (xAxis) {\n                navigator.render(xAxis.min, xAxis.max);\n            }\n        }), \n        // Make room for the navigator, can be placed around the chart:\n        Navigator_addEvent(this.chart, 'getMargins', function () {\n            const chart = this, navigator = chart.navigator;\n            let marginName = navigator.opposite ?\n                'plotTop' : 'marginBottom';\n            if (chart.inverted) {\n                marginName = navigator.opposite ?\n                    'marginRight' : 'plotLeft';\n            }\n            chart[marginName] = (chart[marginName] || 0) + (navigator.navigatorEnabled || !chart.inverted ?\n                navigator.height +\n                    (this.scrollbar?.options.margin || 0) +\n                    navigator.scrollbarHeight : 0) + (navigator.navigatorOptions.margin || 0);\n        }), Navigator_addEvent(Navigator, 'setRange', function (e) {\n            this.chart.xAxis[0].setExtremes(e.min, e.max, e.redraw, e.animation, e.eventArguments);\n        }));\n    }\n    /**\n     * Destroys allocated elements.\n     *\n     * @private\n     * @function Highcharts.Navigator#destroy\n     */\n    destroy() {\n        // Disconnect events added in addEvents\n        this.removeEvents();\n        if (this.xAxis) {\n            erase(this.chart.xAxis, this.xAxis);\n            erase(this.chart.axes, this.xAxis);\n        }\n        if (this.yAxis) {\n            erase(this.chart.yAxis, this.yAxis);\n            erase(this.chart.axes, this.yAxis);\n        }\n        // Destroy series\n        (this.series || []).forEach((s) => {\n            if (s.destroy) {\n                s.destroy();\n            }\n        });\n        // Destroy properties\n        [\n            'series', 'xAxis', 'yAxis', 'shades', 'outline', 'scrollbarTrack',\n            'scrollbarRifles', 'scrollbarGroup', 'scrollbar', 'navigatorGroup',\n            'rendered'\n        ].forEach((prop) => {\n            if (this[prop] && this[prop].destroy) {\n                this[prop].destroy();\n            }\n            this[prop] = null;\n        });\n        // Destroy elements in collection\n        [this.handles].forEach((coll) => {\n            Navigator_destroyObjectProperties(coll);\n        });\n        // Clean up linked series\n        this.baseSeries.forEach((s) => {\n            s.navigatorSeries = void 0;\n        });\n        this.navigatorEnabled = false;\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Navigator_Navigator = (Navigator);\n\n;// ./code/es-modules/Stock/Navigator/StandaloneNavigatorDefaults.js\n/* *\n *\n *  (c) 2010-2025 Mateusz Bernacik\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Constants\n *\n * */\nconst standaloneNavigatorDefaults = {\n    chart: {\n        height: 70,\n        margin: [0, 5, 0, 5]\n    },\n    exporting: {\n        enabled: false\n    },\n    legend: {\n        enabled: false\n    },\n    navigator: {\n        enabled: false\n    },\n    plotOptions: {\n        series: {\n            states: {\n                hover: {\n                    enabled: false\n                }\n            },\n            marker: {\n                enabled: false\n            }\n        }\n    },\n    scrollbar: {\n        enabled: false\n    },\n    title: {\n        text: ''\n    },\n    tooltip: {\n        enabled: false\n    },\n    xAxis: {\n        visible: false\n    },\n    yAxis: {\n        height: 0,\n        visible: false\n    }\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const StandaloneNavigatorDefaults = (standaloneNavigatorDefaults);\n\n;// ./code/es-modules/Stock/Navigator/StandaloneNavigator.js\n/* *\n *\n *  (c) 2010-2025 Mateusz Bernacik\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\n\n\n\nconst { merge: StandaloneNavigator_merge, addEvent: StandaloneNavigator_addEvent, fireEvent: StandaloneNavigator_fireEvent, pick: StandaloneNavigator_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * The StandaloneNavigator class. The StandaloneNavigator class allows for\n * creating a standalone navigator component that synchronizes the extremes\n * across multiple bound charts.\n *\n * @class\n * @name Highcharts.StandaloneNavigator\n *\n * @param {string|Highcharts.HTMLDOMElement} [renderTo]\n * The DOM element to render to, or its id.\n *\n * @param {StandaloneNavigatorOptions} userOptions\n * The standalone navigator options.\n */\nclass StandaloneNavigator {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * Factory function for standalone navigator.\n     *\n     * @function Highcharts.navigator\n     *\n     * @param {string|Highcharts.HTMLDOMElement} [renderTo]\n     * The DOM element to render to, or its id.\n     *\n     * @param {StandaloneNavigatorOptions} options\n     * The standalone navigator options with chart-like structure.\n     *\n     * Returns the navigator object.\n     */\n    static navigator(renderTo, options) {\n        const nav = new StandaloneNavigator(renderTo, options);\n        if (!(external_highcharts_src_js_default_default()).navigators) {\n            (external_highcharts_src_js_default_default()).navigators = [nav];\n        }\n        else {\n            external_highcharts_src_js_default_default().navigators.push(nav);\n        }\n        return nav;\n    }\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(element, userOptions) {\n        this.boundAxes = [];\n        this.userOptions = userOptions;\n        this.chartOptions = StandaloneNavigator_merge(external_highcharts_src_js_default_default().getOptions(), StandaloneNavigatorDefaults, userOptions.chart, { navigator: userOptions });\n        if (this.chartOptions.chart && userOptions.height) {\n            this.chartOptions.chart.height = userOptions.height;\n        }\n        const chart = new (external_highcharts_src_js_default_Chart_default())(element, this.chartOptions);\n        chart.options = StandaloneNavigator_merge(chart.options, { navigator: { enabled: true }, scrollbar: { enabled: true } });\n        if (this.chartOptions.navigator && this.chartOptions.scrollbar) {\n            this.chartOptions.navigator.enabled = true;\n            this.chartOptions.scrollbar.enabled = true;\n        }\n        this.navigator = new Navigator_Navigator(chart);\n        chart.navigator = this.navigator;\n        this.initNavigator();\n    }\n    /**\n     * Binds an axis to the standalone navigator,\n     * allowing the navigator to control the axis' range.\n     *\n     * @sample stock/standalone-navigator/bind/\n     *         Bind chart with a button\n     *\n     * @function Highcharts.StandaloneNavigator#bind\n     *\n     * @param {Axis | Chart} axisOrChart\n     *        The Axis or Chart to bind to the navigator.\n     *\n     * @param {boolean} [twoWay=true]\n     *        Enables two-way binding between the navigator and the axis/chart.\n     *        When true, changes in the navigator's range will update the axis\n     *        and vice versa. When false, changes in the navigator's range will\n     *        be reflected in the axis, but changes in the axis ranges won't be\n     *        reflected on the navigator.\n     */\n    bind(axisOrChart, twoWay = true) {\n        const nav = this;\n        // If the chart is passed, bind the first xAxis\n        const axis = (axisOrChart instanceof (external_highcharts_src_js_default_Chart_default())) ?\n            axisOrChart.xAxis[0] :\n            axisOrChart;\n        if (!(axis instanceof (external_highcharts_src_js_default_Axis_default()))) {\n            return;\n        }\n        const { min, max } = this.navigator.xAxis, removeEventCallbacks = [];\n        if (twoWay) {\n            const removeSetExtremesEvent = StandaloneNavigator_addEvent(axis, 'setExtremes', (e) => {\n                if (e.trigger === 'pan' ||\n                    e.trigger === 'zoom' ||\n                    e.trigger === 'mousewheel') {\n                    nav.setRange(e.min, e.max, true, e.trigger !== 'pan' && e.trigger !== 'mousewheel', { trigger: axis });\n                }\n            });\n            removeEventCallbacks.push(removeSetExtremesEvent);\n        }\n        const removeSetRangeEvent = StandaloneNavigator_addEvent(this.navigator, 'setRange', (e) => {\n            axis.setExtremes(e.min, e.max, e.redraw, e.animation);\n        });\n        removeEventCallbacks.push(removeSetRangeEvent);\n        let boundAxis = this.boundAxes.filter(function (boundAxis) {\n            return boundAxis.axis === axis;\n        })[0];\n        if (!boundAxis) {\n            boundAxis = { axis, callbacks: [] };\n            this.boundAxes.push(boundAxis);\n        }\n        boundAxis.callbacks = removeEventCallbacks;\n        // Show axis' series in navigator based on showInNavigator property\n        axis.series.forEach((series) => {\n            if (series.options.showInNavigator) {\n                nav.addSeries(series.options);\n            }\n        });\n        // Set extremes to match the navigator's extremes\n        axis.setExtremes(min, max);\n        // Unbind the axis before it's destroyed\n        StandaloneNavigator_addEvent(axis, 'destroy', (e) => {\n            if (!e.keepEvents) {\n                this.unbind(axis);\n            }\n        });\n    }\n    /**\n     * Unbinds a single axis or all bound axes from the standalone navigator.\n     *\n     * @sample stock/standalone-navigator/unbind/\n     *         Unbind chart with a button\n     *\n     * @function Highcharts.StandaloneNavigator#unbind\n     *\n     * @param {Chart | Axis | undefined} axisOrChart\n     *        Passing a Chart object unbinds the first X axis of the chart,\n     *        an Axis object unbinds that specific axis,\n     *        and undefined unbinds all axes bound to the navigator.\n     */\n    unbind(axisOrChart) {\n        // If no axis or chart is provided, unbind all bound axes\n        if (!axisOrChart) {\n            this.boundAxes.forEach(({ callbacks }) => {\n                callbacks.forEach((removeCallback) => removeCallback());\n            });\n            this.boundAxes.length = 0;\n            return;\n        }\n        const axis = (axisOrChart instanceof (external_highcharts_src_js_default_Axis_default())) ?\n            axisOrChart :\n            axisOrChart.xAxis[0];\n        for (let i = this.boundAxes.length - 1; i >= 0; i--) {\n            if (this.boundAxes[i].axis === axis) {\n                this.boundAxes[i].callbacks.forEach((callback) => callback());\n                this.boundAxes.splice(i, 1);\n            }\n        }\n    }\n    /**\n     * Destroys allocated standalone navigator elements.\n     *\n     * @function Highcharts.StandaloneNavigator#destroy\n     */\n    destroy() {\n        // Disconnect events\n        this.boundAxes.forEach(({ callbacks }) => {\n            callbacks.forEach((removeCallback) => removeCallback());\n        });\n        this.boundAxes.length = 0;\n        this.navigator.destroy();\n        this.navigator.chart.destroy();\n    }\n    /**\n     * Updates the standalone navigator's options with a new set of user\n     * options.\n     *\n     * @sample stock/standalone-navigator/update/\n     *         Bind chart with a button\n     *\n     * @function Highcharts.StandaloneNavigator#update\n     *\n     * @param  {StandaloneNavigatorOptions} newOptions\n     *         Updates the standalone navigator's options with new user options.\n     *\n     * @param  {boolean | undefined} redraw\n     *         Whether to redraw the standalone navigator. By default, if not\n     *         specified, the standalone navigator will be redrawn.\n     */\n    update(newOptions, redraw) {\n        this.chartOptions = StandaloneNavigator_merge(this.chartOptions, newOptions.height && { chart: { height: newOptions.height } }, newOptions.chart, { navigator: newOptions });\n        this.navigator.chart.update(this.chartOptions, redraw);\n    }\n    /**\n     * Redraws the standalone navigator.\n     *\n     * @function Highcharts.StandaloneNavigator#redraw\n     */\n    redraw() {\n        this.navigator.chart.redraw();\n    }\n    /**\n     * Adds a series to the standalone navigator.\n     *\n     * @private\n     *\n     * @param {SeriesOptions} seriesOptions\n     *        Options for the series to be added to the navigator.\n     */\n    addSeries(seriesOptions) {\n        this.navigator.chart.addSeries(StandaloneNavigator_merge(seriesOptions, { showInNavigator: StandaloneNavigator_pick(seriesOptions.showInNavigator, true) }));\n        this.navigator.setBaseSeries();\n    }\n    /**\n     * Initialize the standalone navigator.\n     *\n     * @private\n     */\n    initNavigator() {\n        const nav = this.navigator;\n        nav.top = 1;\n        nav.xAxis.setScale();\n        nav.yAxis.setScale();\n        nav.xAxis.render();\n        nav.yAxis.render();\n        nav.series?.forEach((s) => {\n            s.translate();\n            s.render();\n            s.redraw();\n        });\n        const { min, max } = this.getInitialExtremes();\n        nav.chart.xAxis[0].userMin = min;\n        nav.chart.xAxis[0].userMax = max;\n        nav.render(min, max);\n    }\n    /**\n     * Get the current range of the standalone navigator.\n     *\n     * @sample stock/standalone-navigator/getrange/\n     *         Report the standalone navigator's range by clicking on a button\n     *\n     * @function Highcharts.StandaloneNavigator#getRange\n     *\n     * @return {Highcharts.ExtremesObject}\n     *         The current range of the standalone navigator.\n     */\n    getRange() {\n        const { min, max } = this.navigator.chart.xAxis[0].getExtremes(), { userMin, userMax, min: dataMin, max: dataMax } = this.navigator.xAxis.getExtremes();\n        return {\n            min: StandaloneNavigator_pick(min, dataMin),\n            max: StandaloneNavigator_pick(max, dataMax),\n            dataMin,\n            dataMax,\n            userMin,\n            userMax\n        };\n    }\n    /**\n     * Set the range of the standalone navigator.\n     *\n     * @sample stock/standalone-navigator/setrange/\n     *         Set range from a button\n     *\n     * @function Highcharts.StandaloneNavigator#setRange\n     *\n     * @param {number | undefined} min\n     *        The new minimum value.\n     *\n     * @param {number | undefined} max\n     *        The new maximum value.\n     *\n     * @emits Highcharts.StandaloneNavigator#event:setRange\n     */\n    setRange(min, max, redraw, animation, eventArguments) {\n        StandaloneNavigator_fireEvent(this.navigator, 'setRange', {\n            min,\n            max,\n            redraw,\n            animation,\n            eventArguments: StandaloneNavigator_merge(eventArguments, { trigger: 'navigator' })\n        });\n    }\n    /**\n     * Get the initial, options based extremes for the standalone navigator.\n     *\n     * @private\n     *\n     * @return {{ min: number, max: number }}\n     *         The initial minimum and maximum extremes values.\n     */\n    getInitialExtremes() {\n        const { min, max } = this.navigator.xAxis.getExtremes();\n        return {\n            min: min,\n            max: max\n        };\n    }\n}\n/* harmony default export */ const Navigator_StandaloneNavigator = (StandaloneNavigator);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * Standalone Navigator options.\n *\n * @interface Highcharts.StandaloneNavigatorOptions\n */ /**\n*/\n''; // Detach doclets above\n\n;// ./code/es-modules/masters/modules/navigator.js\n\n\n\n\n\nconst G = (external_highcharts_src_js_default_default());\nG.StandaloneNavigator = G.StandaloneNavigator || Navigator_StandaloneNavigator;\nG.navigator = G.StandaloneNavigator.navigator;\nNavigator_NavigatorComposition.compose(G.Chart, G.Axis, G.Series);\n/* harmony default export */ const navigator_src = ((external_highcharts_src_js_default_default()));\n\nexport { navigator_src as default };\n"],"names":["NavigatorConstructor","__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__","ScrollbarAxis","__webpack_require__","n","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","external_highcharts_src_js_default_namespaceObject","external_highcharts_src_js_default_default","external_highcharts_src_js_default_Chart_namespaceObject","Chart","external_highcharts_src_js_default_Chart_default","external_highcharts_src_js_default_Axis_namespaceObject","Axis","external_highcharts_src_js_default_Axis_default","isTouchDevice","addEvent","merge","pick","composedMembers","onChartAfterAddSeries","navigator","setBaseSeries","onChartAfterSetChartSize","legendOptions","xAxis","yAxis","legend","options","scrollbarHeight","scrollButtonSize","inverted","left","opposite","chartWidth","height","spacing","top","plotTop","plotLeft","navigatorOptions","chartHeight","scrollbar","margin","rangeSelector","extraBottomMargin","getHeight","verticalAlign","layout","enabled","floating","legendHeight","titleOffset","setAxisSize","onChartAfterUpdate","event","scroller","redraw","animation","onChartBeforeRender","onChartBeforeShowResetZoom","chartOptions","zooming","type","pinchType","onChartCallback","chart","extremes","getExtremes","render","min","max","onChartUpdate","e","scrollbarOptions","ChartClass","NavigatorClass","pushUnique","chartProto","callbacks","push","NavigatorAxisComposition_isTouchDevice","NavigatorAxisComposition_addEvent","correctFloat","defined","isNumber","NavigatorAxisComposition_pick","onAxisInit","axis","navigatorAxis","NavigatorAxisAdditions","onAxisSetExtremes","zoomed","zoomType","isXAxis","trigger","range","previousZoom","preventDefault","compose","AxisClass","keepProps","includes","constructor","destroy","toFixedRange","pxMin","pxMax","fixedMin","fixedMax","halfPointRange","pointRange","newMin","translate","horiz","newMax","external_highcharts_src_js_default_Color_namespaceObject","Color","external_highcharts_src_js_default_Color_default","external_highcharts_src_js_default_SeriesRegistry_namespaceObject","SeriesRegistry","external_highcharts_src_js_default_SeriesRegistry_default","parse","color","seriesTypes","NavigatorDefaults","maskInside","handles","width","borderRadius","symbols","lineWidth","backgroundColor","borderColor","maskFill","setOpacity","outlineColor","outlineWidth","series","areaspline","fillOpacity","compare","sonification","dataGrouping","approximation","groupPixelWidth","firstAnchor","anchor","lastAnchor","units","dataLabels","zIndex","id","className","lineColor","marker","threshold","tickLength","gridLineColor","gridLineWidth","tickPixelInterval","labels","align","style","fontSize","opacity","textOutline","x","y","crosshair","startOnTick","endOnTick","minPadding","maxPadding","title","text","tickWidth","Symbols_defined","Symbols_isNumber","Symbols_pick","relativeLength","Navigator_NavigatorSymbols","_x","_y","w","h","halfWidth","r","Math","markerPosition","roundedRect","external_highcharts_src_js_default_RendererRegistry_namespaceObject","RendererRegistry","external_highcharts_src_js_default_RendererRegistry_default","StockUtilities_defined","setOptions","composed","getRendererType","setFixedRange","NavigatorComposition_setFixedRange","dataMax","dataMin","fixedRange","NavigatorComposition_addEvent","extend","onSeriesAfterUpdate","isInternal","SeriesClass","NavigatorAxisComposition","ScrollbarAxis_composed","ScrollbarAxis_addEvent","ScrollbarAxis_defined","ScrollbarAxis_pick","ScrollbarAxis_pushUnique","Scrollbar","axisMin","axisMax","scrollMin","Infinity","scrollMax","onAxisAfterGetOffset","index","scrollbarsOffsets","axisOffset","size","onAxisAfterInit","vertical","renderer","to","from","unitedMin","unitedMax","reversed","shouldUpdateExtremes","DOMType","animate","setExtremes","setRange","onAxisAfterRender","offsetsIndex","offset","axisTitleMargin","axisMargin","position","xPosition","isNaN","interval","ScrollbarClass","Axis_ScrollbarAxis","Scrollbar_ScrollbarDefaults","barBorderRadius","buttonBorderRadius","buttonsEnabled","liveRedraw","minWidth","step","barBackgroundColor","barBorderWidth","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","buttonBorderWidth","rifleColor","trackBackgroundColor","trackBorderColor","trackBorderRadius","trackBorderWidth","defaultOptions","Scrollbar_addEvent","Scrollbar_correctFloat","crisp","Scrollbar_defined","destroyObjectProperties","fireEvent","Scrollbar_merge","Scrollbar_pick","removeEvent","swapXY","path","forEach","seg","temp","len","length","i","_events","chartX","chartY","scrollbarButtons","scrollbarLeft","scrollbarStrokeWidth","scrollbarTop","init","addEvents","buttonsOrder","buttons","bar","scrollbarGroup","element","track","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","buttonToMinClick","buttonToMaxClick","trackClick","ownerDocument","args","apply","updatePosition","DOMEvent","cursorToScrollbarPosition","normalizedEvent","minWidthDifference","calculatedWidth","xOffset","barWidth","yOffset","removeEvents","drawScrollbarButton","group","g","add","rect","addClass","styledMode","attr","stroke","fill","strokeWidth","arrow","userOptions","pointer","normalize","mousePosition","initPositions","grabbedCenter","change","direction","touches","chartPosition","hasDragged","method","rendered","show","translateX","translateY","hide","scrollbarRifles","fromPX","newSize","fullWidth","toPX","ceil","newPos","floor","newRiflesPos","showFull","eventType","svg","boosted","update","external_highcharts_src_js_default_SVGRenderer_namespaceObject","SVGRenderer","external_highcharts_src_js_default_SVGRenderer_default","Navigator_defaultOptions","Navigator_isTouchDevice","Navigator_addEvent","clamp","Navigator_correctFloat","Navigator_defined","Navigator_destroyObjectProperties","erase","Navigator_extend","find","Navigator_fireEvent","isArray","Navigator_isNumber","Navigator_merge","Navigator_pick","Navigator_removeEvent","splat","numExt","extreme","numbers","filter","Navigator","Navigator_ChartNavigatorComposition","Navigator_NavigatorComposition","isDirty","drawHandle","verb","round","parseInt","drawOutline","zoomedMin","zoomedMax","outline","halfOutline","outlineCorrection","navigatorSize","navigatorTop","lineTop","lineBtm","verticalMin","drawMasks","navigatorHeight","shades","shade","renderElements","mouseCursor","cursor","navigatorGroup","visibility","hasMask","css","handlesOptions","symbolName","symbolUrl","isImg","symbolFn","symbol","addMouseEvents","rotation","rotationOriginX","rotationOriginY","invertedUpdate","setOpposite","navigatorEnabled","adaptToUpdatedData","baseSeries","updatedDataHandler","eventsToUnbind","offsets","getXAxisOffsets","scrollbarXAxis","fake","minRange","maxRange","navigatorWidth","plotWidth","plotHeight","toPixels","abs","toValue","currentRange","grabbedLeft","grabbedRight","fixedWidth","container","onMouseMove","onMouseUp","getPartsEvents","renderTo","concat","modifyNavigatorAxisExtremes","eventName","events","name","navigatorItem","shadesMousedown","navigatorPosition","ext","dragOffset","reversedExtremes","getUnionExtremes","eventArguments","handlesMousedown","baseXAxis","reverse","otherHandlePos","fixedExtreme","pageX","setTimeout","unionExtremes","triggerOp","keys","unbind","removeBaseSeriesEvents","modifyBaseAxisExtremes","scrollbarEnabled","xAxisIndex","yAxisIndex","baseXaxis","isDirtyBox","breaks","ordinal","overscroll","keepOrdinalPadding","zoomEnabled","alignTicks","data","updateNavigatorSeries","unbindRedraw","value","scrollTrackWidth","valueRange","addBaseSeriesEvents","addChartEvents","Boolean","returnFalseOnNoBaseSeries","ret","baseAxis","time","navAxis","navAxisOptions","baseAxisOptions","baseSeriesOptions","s","showInNavigator","navSeriesMixin","enableMouseTracking","linkedTo","padXAxis","showInLegend","stacking","states","inactive","navigatorSeries","navSeries","base","indexOf","baseOptions","mergedNavSeriesOptions","chartNavigatorSeriesOptions","baseNavigatorOptions","linkedNavSeries","userNavOptions","visible","plotOptions","navigatorSeriesData","hasNavigatorData","slice","initSeries","setSortedData","userSeriesOptions","colors","setVisible","remove","getBaseSeriesMin","currentSeriesMin","reduce","getColumn","baseExtremes","baseMin","baseMax","baseDataMin","baseDataMax","stickToMin","stickToMax","convertOverscroll","hasSetExtremes","eventArgs","xData","Number","MAX_VALUE","userMin","userMax","shouldStickToMax","shouldStickToMin","pointStart","setData","xDataMin","marginName","axes","coll","standaloneNavigatorDefaults","exporting","hover","tooltip","StandaloneNavigator_merge","StandaloneNavigator_addEvent","StandaloneNavigator_fireEvent","StandaloneNavigator_pick","StandaloneNavigator","nav","navigators","boundAxes","getOptions","initNavigator","axisOrChart","twoWay","removeEventCallbacks","removeSetExtremesEvent","removeSetRangeEvent","boundAxis","addSeries","keepEvents","removeCallback","callback","splice","newOptions","seriesOptions","setScale","getInitialExtremes","getRange","G","Series","navigator_src","default"],"mappings":"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"}