{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts Gantt JS v12.2.0 (2025-04-07)\n * @module highcharts/modules/current-date-indicator\n * @requires highcharts\n *\n * CurrentDateIndicator\n *\n * (c) 2010-2025 Lars A. V. Cabrera\n *\n * License: www.highcharts.com/license\n */\nimport * as __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__ from \"../highcharts.js\";\n/******/ // The require scope\n/******/ var __webpack_require__ = {};\n/******/ \n/************************************************************************/\n/******/ /* webpack/runtime/compat get default export */\n/******/ (() => {\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = (module) => {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t() => (module['default']) :\n/******/ \t\t\t() => (module);\n/******/ \t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\treturn getter;\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/define property getters */\n/******/ (() => {\n/******/ \t// define getter functions for harmony exports\n/******/ \t__webpack_require__.d = (exports, definition) => {\n/******/ \t\tfor(var key in definition) {\n/******/ \t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/hasOwnProperty shorthand */\n/******/ (() => {\n/******/ \t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ })();\n/******/ \n/************************************************************************/\n\n;// external [\"../highcharts.js\",\"default\"]\nconst external_highcharts_src_js_default_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"];\nvar external_highcharts_src_js_default_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_namespaceObject);\n;// ./code/es-modules/Extensions/CurrentDateIndication.js\n/* *\n *\n *  (c) 2016-2025 Highsoft AS\n *\n *  Author: Lars A. V. Cabrera\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { composed } = (external_highcharts_src_js_default_default());\n\nconst { addEvent, merge, pushUnique, wrap } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\n/**\n * Show an indicator on the axis for the current date and time. Can be a\n * boolean or a configuration object similar to\n * [xAxis.plotLines](#xAxis.plotLines).\n *\n * @sample gantt/current-date-indicator/demo\n *         Current date indicator enabled\n * @sample gantt/current-date-indicator/object-config\n *         Current date indicator with custom options\n *\n * @declare   Highcharts.CurrentDateIndicatorOptions\n * @type      {boolean|CurrentDateIndicatorOptions}\n * @default   true\n * @extends   xAxis.plotLines\n * @excluding value\n * @product   gantt\n * @apioption xAxis.currentDateIndicator\n */\nconst defaultOptions = {\n    color: \"#ccd3ff\" /* Palette.highlightColor20 */,\n    width: 2,\n    /**\n     * @declare Highcharts.AxisCurrentDateIndicatorLabelOptions\n     */\n    label: {\n        /**\n         * Format of the label. This options is passed as the first argument to\n         * [dateFormat](/class-reference/Highcharts.Time#dateFormat) function.\n         *\n         * @type      {string|Intl.DateTimeFormatOptions}\n         * @product   gantt\n         * @apioption xAxis.currentDateIndicator.label.format\n         */\n        format: '%[abdYHM]',\n        formatter: function (value, format) {\n            return this.axis.chart.time.dateFormat(format || '', value, true);\n        },\n        rotation: 0,\n        /**\n         * @type {Highcharts.CSSObject}\n         */\n        style: {\n            /** @internal */\n            fontSize: '0.7em'\n        }\n    }\n};\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction compose(AxisClass, PlotLineOrBandClass) {\n    if (pushUnique(composed, 'CurrentDateIndication')) {\n        addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n        addEvent(PlotLineOrBandClass, 'render', onPlotLineOrBandRender);\n        wrap(PlotLineOrBandClass.prototype, 'getLabelText', wrapPlotLineOrBandGetLabelText);\n    }\n}\n/**\n * @private\n */\nfunction onAxisAfterSetOptions() {\n    const options = this.options, cdiOptions = options.currentDateIndicator;\n    if (cdiOptions) {\n        const plotLineOptions = typeof cdiOptions === 'object' ?\n            merge(defaultOptions, cdiOptions) :\n            merge(defaultOptions);\n        plotLineOptions.value = Date.now();\n        plotLineOptions.className = 'highcharts-current-date-indicator';\n        if (!options.plotLines) {\n            options.plotLines = [];\n        }\n        options.plotLines.push(plotLineOptions);\n    }\n}\n/**\n * @private\n */\nfunction onPlotLineOrBandRender() {\n    // If the label already exists, update its text\n    if (this.label) {\n        this.label.attr({\n            text: this.getLabelText(this.options.label)\n        });\n    }\n}\n/**\n * @private\n */\nfunction wrapPlotLineOrBandGetLabelText(defaultMethod, defaultLabelOptions) {\n    const options = this.options;\n    if (options &&\n        options.className &&\n        options.className.indexOf('highcharts-current-date-indicator') !== -1 &&\n        options.label &&\n        typeof options.label.formatter === 'function') {\n        options.value = Date.now();\n        return options.label.formatter\n            .call(this, options.value, options.label.format);\n    }\n    return defaultMethod.call(this, defaultLabelOptions);\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst CurrentDateIndication = {\n    compose\n};\n/* harmony default export */ const Extensions_CurrentDateIndication = (CurrentDateIndication);\n\n;// ./code/es-modules/masters/modules/current-date-indicator.js\n\n\n\n\nconst G = (external_highcharts_src_js_default_default());\nExtensions_CurrentDateIndication.compose(G.Axis, G.PlotLineOrBand);\n/* harmony default export */ const current_date_indicator_src = ((external_highcharts_src_js_default_default()));\n\nexport { current_date_indicator_src as default };\n"],"names":["__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__","__webpack_require__","n","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","external_highcharts_src_js_default_namespaceObject","external_highcharts_src_js_default_default","composed","addEvent","merge","pushUnique","wrap","defaultOptions","color","width","label","format","formatter","value","axis","chart","time","dateFormat","rotation","style","fontSize","onAxisAfterSetOptions","options","cdiOptions","currentDateIndicator","plotLineOptions","Date","now","className","plotLines","push","onPlotLineOrBandRender","attr","text","getLabelText","wrapPlotLineOrBandGetLabelText","defaultMethod","defaultLabelOptions","indexOf","G","Extensions_CurrentDateIndication","compose","AxisClass","PlotLineOrBandClass","Axis","PlotLineOrBand","current_date_indicator_src","default"],"mappings":"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"}